/*
Saviynt Transport API

Transporting Packages: https://docs.saviyntcloud.com/bundle/EIC-Admin-AMS/page/Content/Chapter07-General-Administrator/Transporting-Packages.htm

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package transport

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the TransportPackageStatusRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransportPackageStatusRequest{}

// TransportPackageStatusRequest struct for TransportPackageStatusRequest
type TransportPackageStatusRequest struct {
	// enter the type of transport request (export, import, or transfer)
	Operation string `json:"operation"`
	// enter the transport package zip file name in full (including the .zip extension)
	Filename string `json:"filename"`
	// (required only if the operation is import) - enter the request ID generated during the submission of the import request
	Requestid *string `json:"requestid,omitempty"`
}

type _TransportPackageStatusRequest TransportPackageStatusRequest

// NewTransportPackageStatusRequest instantiates a new TransportPackageStatusRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransportPackageStatusRequest(operation string, filename string) *TransportPackageStatusRequest {
	this := TransportPackageStatusRequest{}
	this.Operation = operation
	this.Filename = filename
	return &this
}

// NewTransportPackageStatusRequestWithDefaults instantiates a new TransportPackageStatusRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransportPackageStatusRequestWithDefaults() *TransportPackageStatusRequest {
	this := TransportPackageStatusRequest{}
	return &this
}

// GetOperation returns the Operation field value
func (o *TransportPackageStatusRequest) GetOperation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *TransportPackageStatusRequest) GetOperationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operation, true
}

// SetOperation sets field value
func (o *TransportPackageStatusRequest) SetOperation(v string) {
	o.Operation = v
}

// GetFilename returns the Filename field value
func (o *TransportPackageStatusRequest) GetFilename() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value
// and a boolean to check if the value has been set.
func (o *TransportPackageStatusRequest) GetFilenameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filename, true
}

// SetFilename sets field value
func (o *TransportPackageStatusRequest) SetFilename(v string) {
	o.Filename = v
}

// GetRequestid returns the Requestid field value if set, zero value otherwise.
func (o *TransportPackageStatusRequest) GetRequestid() string {
	if o == nil || IsNil(o.Requestid) {
		var ret string
		return ret
	}
	return *o.Requestid
}

// GetRequestidOk returns a tuple with the Requestid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportPackageStatusRequest) GetRequestidOk() (*string, bool) {
	if o == nil || IsNil(o.Requestid) {
		return nil, false
	}
	return o.Requestid, true
}

// HasRequestid returns a boolean if a field has been set.
func (o *TransportPackageStatusRequest) HasRequestid() bool {
	if o != nil && !IsNil(o.Requestid) {
		return true
	}

	return false
}

// SetRequestid gets a reference to the given string and assigns it to the Requestid field.
func (o *TransportPackageStatusRequest) SetRequestid(v string) {
	o.Requestid = &v
}

func (o TransportPackageStatusRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransportPackageStatusRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["operation"] = o.Operation
	toSerialize["filename"] = o.Filename
	if !IsNil(o.Requestid) {
		toSerialize["requestid"] = o.Requestid
	}
	return toSerialize, nil
}

func (o *TransportPackageStatusRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"operation",
		"filename",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransportPackageStatusRequest := _TransportPackageStatusRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTransportPackageStatusRequest)

	if err != nil {
		return err
	}

	*o = TransportPackageStatusRequest(varTransportPackageStatusRequest)

	return err
}

type NullableTransportPackageStatusRequest struct {
	value *TransportPackageStatusRequest
	isSet bool
}

func (v NullableTransportPackageStatusRequest) Get() *TransportPackageStatusRequest {
	return v.value
}

func (v *NullableTransportPackageStatusRequest) Set(val *TransportPackageStatusRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransportPackageStatusRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransportPackageStatusRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransportPackageStatusRequest(val *TransportPackageStatusRequest) *NullableTransportPackageStatusRequest {
	return &NullableTransportPackageStatusRequest{value: val, isSet: true}
}

func (v NullableTransportPackageStatusRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransportPackageStatusRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
