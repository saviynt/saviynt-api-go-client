/*
Saviynt Transport API

Transporting Packages: https://docs.saviyntcloud.com/bundle/EIC-Admin-AMS/page/Content/Chapter07-General-Administrator/Transporting-Packages.htm

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package transport

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ExportTransportPackageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportTransportPackageRequest{}

// ExportTransportPackageRequest
type ExportTransportPackageRequest struct {
	// username of the user exporting the package
	Updateuser *string `json:"updateuser,omitempty"`
	// (can be true or false) - option to transport owners for selected objects
	Transportowner *string `json:"transportowner,omitempty"`
	// can be true or false) - option to transport members for selected objects such as SAV role
	Transportmembers *string `json:"transportmembers,omitempty"`
	// (can be true or false) - Determines if package needs to be exported online
	Exportonline string `json:"exportonline"`
	// (if exportonline is false) - Local path where export package will be generated
	Exportpath *string `json:"exportpath,omitempty"`
	// (if exportonline is true) - Name of the environment which can be created at the following path : Admin -> Global Configurations -> Misc -> Transport -> Add New Transport
	Environmentname       *string `json:"environmentname,omitempty"`
	Businessjustification *string `json:"businessjustification,omitempty"`
	// Supported objects : savRoles, emailTemplate, roles, analyticsV1, analyticsV2, globalConfig, workflows, connection, appOnboarding, userGroups, scanRules, organizations, securitySystems
	Objectstoexport ObjectsToExport `json:"objectstoexport"`
}

type _ExportTransportPackageRequest ExportTransportPackageRequest

// NewExportTransportPackageRequest instantiates a new ExportTransportPackageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportTransportPackageRequest(exportonline string, objectstoexport ObjectsToExport) *ExportTransportPackageRequest {
	this := ExportTransportPackageRequest{}
	this.Exportonline = exportonline
	this.Objectstoexport = objectstoexport
	return &this
}

// NewExportTransportPackageRequestWithDefaults instantiates a new ExportTransportPackageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportTransportPackageRequestWithDefaults() *ExportTransportPackageRequest {
	this := ExportTransportPackageRequest{}
	return &this
}

// GetUpdateuser returns the Updateuser field value if set, zero value otherwise.
func (o *ExportTransportPackageRequest) GetUpdateuser() string {
	if o == nil || IsNil(o.Updateuser) {
		var ret string
		return ret
	}
	return *o.Updateuser
}

// GetUpdateuserOk returns a tuple with the Updateuser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportTransportPackageRequest) GetUpdateuserOk() (*string, bool) {
	if o == nil || IsNil(o.Updateuser) {
		return nil, false
	}
	return o.Updateuser, true
}

// HasUpdateuser returns a boolean if a field has been set.
func (o *ExportTransportPackageRequest) HasUpdateuser() bool {
	if o != nil && !IsNil(o.Updateuser) {
		return true
	}

	return false
}

// SetUpdateuser gets a reference to the given string and assigns it to the Updateuser field.
func (o *ExportTransportPackageRequest) SetUpdateuser(v string) {
	o.Updateuser = &v
}

// GetTransportowner returns the Transportowner field value if set, zero value otherwise.
func (o *ExportTransportPackageRequest) GetTransportowner() string {
	if o == nil || IsNil(o.Transportowner) {
		var ret string
		return ret
	}
	return *o.Transportowner
}

// GetTransportownerOk returns a tuple with the Transportowner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportTransportPackageRequest) GetTransportownerOk() (*string, bool) {
	if o == nil || IsNil(o.Transportowner) {
		return nil, false
	}
	return o.Transportowner, true
}

// HasTransportowner returns a boolean if a field has been set.
func (o *ExportTransportPackageRequest) HasTransportowner() bool {
	if o != nil && !IsNil(o.Transportowner) {
		return true
	}

	return false
}

// SetTransportowner gets a reference to the given string and assigns it to the Transportowner field.
func (o *ExportTransportPackageRequest) SetTransportowner(v string) {
	o.Transportowner = &v
}

// GetTransportmembers returns the Transportmembers field value if set, zero value otherwise.
func (o *ExportTransportPackageRequest) GetTransportmembers() string {
	if o == nil || IsNil(o.Transportmembers) {
		var ret string
		return ret
	}
	return *o.Transportmembers
}

// GetTransportmembersOk returns a tuple with the Transportmembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportTransportPackageRequest) GetTransportmembersOk() (*string, bool) {
	if o == nil || IsNil(o.Transportmembers) {
		return nil, false
	}
	return o.Transportmembers, true
}

// HasTransportmembers returns a boolean if a field has been set.
func (o *ExportTransportPackageRequest) HasTransportmembers() bool {
	if o != nil && !IsNil(o.Transportmembers) {
		return true
	}

	return false
}

// SetTransportmembers gets a reference to the given string and assigns it to the Transportmembers field.
func (o *ExportTransportPackageRequest) SetTransportmembers(v string) {
	o.Transportmembers = &v
}

// GetExportonline returns the Exportonline field value
func (o *ExportTransportPackageRequest) GetExportonline() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Exportonline
}

// GetExportonlineOk returns a tuple with the Exportonline field value
// and a boolean to check if the value has been set.
func (o *ExportTransportPackageRequest) GetExportonlineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Exportonline, true
}

// SetExportonline sets field value
func (o *ExportTransportPackageRequest) SetExportonline(v string) {
	o.Exportonline = v
}

// GetExportpath returns the Exportpath field value if set, zero value otherwise.
func (o *ExportTransportPackageRequest) GetExportpath() string {
	if o == nil || IsNil(o.Exportpath) {
		var ret string
		return ret
	}
	return *o.Exportpath
}

// GetExportpathOk returns a tuple with the Exportpath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportTransportPackageRequest) GetExportpathOk() (*string, bool) {
	if o == nil || IsNil(o.Exportpath) {
		return nil, false
	}
	return o.Exportpath, true
}

// HasExportpath returns a boolean if a field has been set.
func (o *ExportTransportPackageRequest) HasExportpath() bool {
	if o != nil && !IsNil(o.Exportpath) {
		return true
	}

	return false
}

// SetExportpath gets a reference to the given string and assigns it to the Exportpath field.
func (o *ExportTransportPackageRequest) SetExportpath(v string) {
	o.Exportpath = &v
}

// GetEnvironmentname returns the Environmentname field value if set, zero value otherwise.
func (o *ExportTransportPackageRequest) GetEnvironmentname() string {
	if o == nil || IsNil(o.Environmentname) {
		var ret string
		return ret
	}
	return *o.Environmentname
}

// GetEnvironmentnameOk returns a tuple with the Environmentname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportTransportPackageRequest) GetEnvironmentnameOk() (*string, bool) {
	if o == nil || IsNil(o.Environmentname) {
		return nil, false
	}
	return o.Environmentname, true
}

// HasEnvironmentname returns a boolean if a field has been set.
func (o *ExportTransportPackageRequest) HasEnvironmentname() bool {
	if o != nil && !IsNil(o.Environmentname) {
		return true
	}

	return false
}

// SetEnvironmentname gets a reference to the given string and assigns it to the Environmentname field.
func (o *ExportTransportPackageRequest) SetEnvironmentname(v string) {
	o.Environmentname = &v
}

// GetBusinessjustification returns the Businessjustification field value if set, zero value otherwise.
func (o *ExportTransportPackageRequest) GetBusinessjustification() string {
	if o == nil || IsNil(o.Businessjustification) {
		var ret string
		return ret
	}
	return *o.Businessjustification
}

// GetBusinessjustificationOk returns a tuple with the Businessjustification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportTransportPackageRequest) GetBusinessjustificationOk() (*string, bool) {
	if o == nil || IsNil(o.Businessjustification) {
		return nil, false
	}
	return o.Businessjustification, true
}

// HasBusinessjustification returns a boolean if a field has been set.
func (o *ExportTransportPackageRequest) HasBusinessjustification() bool {
	if o != nil && !IsNil(o.Businessjustification) {
		return true
	}

	return false
}

// SetBusinessjustification gets a reference to the given string and assigns it to the Businessjustification field.
func (o *ExportTransportPackageRequest) SetBusinessjustification(v string) {
	o.Businessjustification = &v
}

// GetObjectstoexport returns the Objectstoexport field value
func (o *ExportTransportPackageRequest) GetObjectstoexport() ObjectsToExport {
	if o == nil {
		var ret ObjectsToExport
		return ret
	}

	return o.Objectstoexport
}

// GetObjectstoexportOk returns a tuple with the Objectstoexport field value
// and a boolean to check if the value has been set.
func (o *ExportTransportPackageRequest) GetObjectstoexportOk() (*ObjectsToExport, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Objectstoexport, true
}

// SetObjectstoexport sets field value
func (o *ExportTransportPackageRequest) SetObjectstoexport(v ObjectsToExport) {
	o.Objectstoexport = v
}

func (o ExportTransportPackageRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportTransportPackageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Updateuser) {
		toSerialize["updateuser"] = o.Updateuser
	}
	if !IsNil(o.Transportowner) {
		toSerialize["transportowner"] = o.Transportowner
	}
	if !IsNil(o.Transportmembers) {
		toSerialize["transportmembers"] = o.Transportmembers
	}
	toSerialize["exportonline"] = o.Exportonline
	if !IsNil(o.Exportpath) {
		toSerialize["exportpath"] = o.Exportpath
	}
	if !IsNil(o.Environmentname) {
		toSerialize["environmentname"] = o.Environmentname
	}
	if !IsNil(o.Businessjustification) {
		toSerialize["businessjustification"] = o.Businessjustification
	}
	toSerialize["objectstoexport"] = o.Objectstoexport
	return toSerialize, nil
}

func (o *ExportTransportPackageRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"exportonline",
		"objectstoexport",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExportTransportPackageRequest := _ExportTransportPackageRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExportTransportPackageRequest)

	if err != nil {
		return err
	}

	*o = ExportTransportPackageRequest(varExportTransportPackageRequest)

	return err
}

type NullableExportTransportPackageRequest struct {
	value *ExportTransportPackageRequest
	isSet bool
}

func (v NullableExportTransportPackageRequest) Get() *ExportTransportPackageRequest {
	return v.value
}

func (v *NullableExportTransportPackageRequest) Set(val *ExportTransportPackageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExportTransportPackageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExportTransportPackageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportTransportPackageRequest(val *ExportTransportPackageRequest) *NullableExportTransportPackageRequest {
	return &NullableExportTransportPackageRequest{value: val, isSet: true}
}

func (v NullableExportTransportPackageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportTransportPackageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
