/*
Saviynt Job Control API

Saviynt Job Control API Spec

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jobcontrol

import (
	"encoding/json"
)

// checks if the FetchJobMetadataResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FetchJobMetadataResponse{}

// FetchJobMetadataResponse struct for FetchJobMetadataResponse
type FetchJobMetadataResponse struct {
	Msg       *string                `json:"msg,omitempty"`
	ErrorCode *int32                 `json:"errorCode,omitempty"`
	Result    map[string]interface{} `json:"result,omitempty"`
}

// NewFetchJobMetadataResponse instantiates a new FetchJobMetadataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFetchJobMetadataResponse() *FetchJobMetadataResponse {
	this := FetchJobMetadataResponse{}
	return &this
}

// NewFetchJobMetadataResponseWithDefaults instantiates a new FetchJobMetadataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFetchJobMetadataResponseWithDefaults() *FetchJobMetadataResponse {
	this := FetchJobMetadataResponse{}
	return &this
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *FetchJobMetadataResponse) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchJobMetadataResponse) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *FetchJobMetadataResponse) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *FetchJobMetadataResponse) SetMsg(v string) {
	o.Msg = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *FetchJobMetadataResponse) GetErrorCode() int32 {
	if o == nil || IsNil(o.ErrorCode) {
		var ret int32
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchJobMetadataResponse) GetErrorCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *FetchJobMetadataResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given int32 and assigns it to the ErrorCode field.
func (o *FetchJobMetadataResponse) SetErrorCode(v int32) {
	o.ErrorCode = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *FetchJobMetadataResponse) GetResult() map[string]interface{} {
	if o == nil || IsNil(o.Result) {
		var ret map[string]interface{}
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchJobMetadataResponse) GetResultOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Result) {
		return map[string]interface{}{}, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *FetchJobMetadataResponse) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given map[string]interface{} and assigns it to the Result field.
func (o *FetchJobMetadataResponse) SetResult(v map[string]interface{}) {
	o.Result = v
}

func (o FetchJobMetadataResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FetchJobMetadataResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableFetchJobMetadataResponse struct {
	value *FetchJobMetadataResponse
	isSet bool
}

func (v NullableFetchJobMetadataResponse) Get() *FetchJobMetadataResponse {
	return v.value
}

func (v *NullableFetchJobMetadataResponse) Set(val *FetchJobMetadataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFetchJobMetadataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFetchJobMetadataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFetchJobMetadataResponse(val *FetchJobMetadataResponse) *NullableFetchJobMetadataResponse {
	return &NullableFetchJobMetadataResponse{value: val, isSet: true}
}

func (v NullableFetchJobMetadataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFetchJobMetadataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
