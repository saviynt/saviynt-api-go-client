/*
Saviynt Job Control API

Saviynt Job Control API Spec

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jobcontrol

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DeleteTriggerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteTriggerRequest{}

// DeleteTriggerRequest struct for DeleteTriggerRequest
type DeleteTriggerRequest struct {
	Jobname     string  `json:"jobname"`
	Triggername *string `json:"triggername,omitempty"`
	Jobgroup    *string `json:"jobgroup,omitempty"`
}

type _DeleteTriggerRequest DeleteTriggerRequest

// NewDeleteTriggerRequest instantiates a new DeleteTriggerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteTriggerRequest(jobname string) *DeleteTriggerRequest {
	this := DeleteTriggerRequest{}
	this.Jobname = jobname
	return &this
}

// NewDeleteTriggerRequestWithDefaults instantiates a new DeleteTriggerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteTriggerRequestWithDefaults() *DeleteTriggerRequest {
	this := DeleteTriggerRequest{}
	return &this
}

// GetJobname returns the Jobname field value
func (o *DeleteTriggerRequest) GetJobname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Jobname
}

// GetJobnameOk returns a tuple with the Jobname field value
// and a boolean to check if the value has been set.
func (o *DeleteTriggerRequest) GetJobnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Jobname, true
}

// SetJobname sets field value
func (o *DeleteTriggerRequest) SetJobname(v string) {
	o.Jobname = v
}

// GetTriggername returns the Triggername field value if set, zero value otherwise.
func (o *DeleteTriggerRequest) GetTriggername() string {
	if o == nil || IsNil(o.Triggername) {
		var ret string
		return ret
	}
	return *o.Triggername
}

// GetTriggernameOk returns a tuple with the Triggername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteTriggerRequest) GetTriggernameOk() (*string, bool) {
	if o == nil || IsNil(o.Triggername) {
		return nil, false
	}
	return o.Triggername, true
}

// HasTriggername returns a boolean if a field has been set.
func (o *DeleteTriggerRequest) HasTriggername() bool {
	if o != nil && !IsNil(o.Triggername) {
		return true
	}

	return false
}

// SetTriggername gets a reference to the given string and assigns it to the Triggername field.
func (o *DeleteTriggerRequest) SetTriggername(v string) {
	o.Triggername = &v
}

// GetJobgroup returns the Jobgroup field value if set, zero value otherwise.
func (o *DeleteTriggerRequest) GetJobgroup() string {
	if o == nil || IsNil(o.Jobgroup) {
		var ret string
		return ret
	}
	return *o.Jobgroup
}

// GetJobgroupOk returns a tuple with the Jobgroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteTriggerRequest) GetJobgroupOk() (*string, bool) {
	if o == nil || IsNil(o.Jobgroup) {
		return nil, false
	}
	return o.Jobgroup, true
}

// HasJobgroup returns a boolean if a field has been set.
func (o *DeleteTriggerRequest) HasJobgroup() bool {
	if o != nil && !IsNil(o.Jobgroup) {
		return true
	}

	return false
}

// SetJobgroup gets a reference to the given string and assigns it to the Jobgroup field.
func (o *DeleteTriggerRequest) SetJobgroup(v string) {
	o.Jobgroup = &v
}

func (o DeleteTriggerRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteTriggerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["jobname"] = o.Jobname
	if !IsNil(o.Triggername) {
		toSerialize["triggername"] = o.Triggername
	}
	if !IsNil(o.Jobgroup) {
		toSerialize["jobgroup"] = o.Jobgroup
	}
	return toSerialize, nil
}

func (o *DeleteTriggerRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"jobname",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeleteTriggerRequest := _DeleteTriggerRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeleteTriggerRequest)

	if err != nil {
		return err
	}

	*o = DeleteTriggerRequest(varDeleteTriggerRequest)

	return err
}

type NullableDeleteTriggerRequest struct {
	value *DeleteTriggerRequest
	isSet bool
}

func (v NullableDeleteTriggerRequest) Get() *DeleteTriggerRequest {
	return v.value
}

func (v *NullableDeleteTriggerRequest) Set(val *DeleteTriggerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteTriggerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteTriggerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteTriggerRequest(val *DeleteTriggerRequest) *NullableDeleteTriggerRequest {
	return &NullableDeleteTriggerRequest{value: val, isSet: true}
}

func (v NullableDeleteTriggerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteTriggerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
