/*
Organization Management API

API for creating, updating, retrieving, and deleting organization data in EIC

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetOrganization200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOrganization200Response{}

// GetOrganization200Response struct for GetOrganization200Response
type GetOrganization200Response struct {
	Displaycount *float32 `json:"displaycount,omitempty"`
	ErrorCode *string `json:"errorCode,omitempty"`
	Msg *string `json:"msg,omitempty"`
	Organizations []GetOrganization200ResponseOrganizationsInner `json:"organizations,omitempty"`
}

// NewGetOrganization200Response instantiates a new GetOrganization200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrganization200Response() *GetOrganization200Response {
	this := GetOrganization200Response{}
	return &this
}

// NewGetOrganization200ResponseWithDefaults instantiates a new GetOrganization200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrganization200ResponseWithDefaults() *GetOrganization200Response {
	this := GetOrganization200Response{}
	return &this
}

// GetDisplaycount returns the Displaycount field value if set, zero value otherwise.
func (o *GetOrganization200Response) GetDisplaycount() float32 {
	if o == nil || IsNil(o.Displaycount) {
		var ret float32
		return ret
	}
	return *o.Displaycount
}

// GetDisplaycountOk returns a tuple with the Displaycount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganization200Response) GetDisplaycountOk() (*float32, bool) {
	if o == nil || IsNil(o.Displaycount) {
		return nil, false
	}
	return o.Displaycount, true
}

// HasDisplaycount returns a boolean if a field has been set.
func (o *GetOrganization200Response) HasDisplaycount() bool {
	if o != nil && !IsNil(o.Displaycount) {
		return true
	}

	return false
}

// SetDisplaycount gets a reference to the given float32 and assigns it to the Displaycount field.
func (o *GetOrganization200Response) SetDisplaycount(v float32) {
	o.Displaycount = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *GetOrganization200Response) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganization200Response) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *GetOrganization200Response) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *GetOrganization200Response) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *GetOrganization200Response) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganization200Response) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *GetOrganization200Response) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *GetOrganization200Response) SetMsg(v string) {
	o.Msg = &v
}

// GetOrganizations returns the Organizations field value if set, zero value otherwise.
func (o *GetOrganization200Response) GetOrganizations() []GetOrganization200ResponseOrganizationsInner {
	if o == nil || IsNil(o.Organizations) {
		var ret []GetOrganization200ResponseOrganizationsInner
		return ret
	}
	return o.Organizations
}

// GetOrganizationsOk returns a tuple with the Organizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganization200Response) GetOrganizationsOk() ([]GetOrganization200ResponseOrganizationsInner, bool) {
	if o == nil || IsNil(o.Organizations) {
		return nil, false
	}
	return o.Organizations, true
}

// HasOrganizations returns a boolean if a field has been set.
func (o *GetOrganization200Response) HasOrganizations() bool {
	if o != nil && !IsNil(o.Organizations) {
		return true
	}

	return false
}

// SetOrganizations gets a reference to the given []GetOrganization200ResponseOrganizationsInner and assigns it to the Organizations field.
func (o *GetOrganization200Response) SetOrganizations(v []GetOrganization200ResponseOrganizationsInner) {
	o.Organizations = v
}

func (o GetOrganization200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOrganization200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Displaycount) {
		toSerialize["displaycount"] = o.Displaycount
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.Organizations) {
		toSerialize["organizations"] = o.Organizations
	}
	return toSerialize, nil
}

type NullableGetOrganization200Response struct {
	value *GetOrganization200Response
	isSet bool
}

func (v NullableGetOrganization200Response) Get() *GetOrganization200Response {
	return v.value
}

func (v *NullableGetOrganization200Response) Set(val *GetOrganization200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrganization200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrganization200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrganization200Response(val *GetOrganization200Response) *NullableGetOrganization200Response {
	return &NullableGetOrganization200Response{value: val, isSet: true}
}

func (v NullableGetOrganization200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrganization200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


