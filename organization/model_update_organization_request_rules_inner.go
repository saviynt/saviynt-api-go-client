/*
Organization Management API

API for creating, updating, retrieving, and deleting organization data in EIC

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateOrganizationRequestRulesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOrganizationRequestRulesInner{}

// UpdateOrganizationRequestRulesInner struct for UpdateOrganizationRequestRulesInner
type UpdateOrganizationRequestRulesInner struct {
	Name *string `json:"name,omitempty"`
	Type *string `json:"type,omitempty"`
	Updatetype *string `json:"updatetype,omitempty"`
}

// NewUpdateOrganizationRequestRulesInner instantiates a new UpdateOrganizationRequestRulesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOrganizationRequestRulesInner() *UpdateOrganizationRequestRulesInner {
	this := UpdateOrganizationRequestRulesInner{}
	return &this
}

// NewUpdateOrganizationRequestRulesInnerWithDefaults instantiates a new UpdateOrganizationRequestRulesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOrganizationRequestRulesInnerWithDefaults() *UpdateOrganizationRequestRulesInner {
	this := UpdateOrganizationRequestRulesInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateOrganizationRequestRulesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequestRulesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateOrganizationRequestRulesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateOrganizationRequestRulesInner) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UpdateOrganizationRequestRulesInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequestRulesInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *UpdateOrganizationRequestRulesInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UpdateOrganizationRequestRulesInner) SetType(v string) {
	o.Type = &v
}

// GetUpdatetype returns the Updatetype field value if set, zero value otherwise.
func (o *UpdateOrganizationRequestRulesInner) GetUpdatetype() string {
	if o == nil || IsNil(o.Updatetype) {
		var ret string
		return ret
	}
	return *o.Updatetype
}

// GetUpdatetypeOk returns a tuple with the Updatetype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequestRulesInner) GetUpdatetypeOk() (*string, bool) {
	if o == nil || IsNil(o.Updatetype) {
		return nil, false
	}
	return o.Updatetype, true
}

// HasUpdatetype returns a boolean if a field has been set.
func (o *UpdateOrganizationRequestRulesInner) HasUpdatetype() bool {
	if o != nil && !IsNil(o.Updatetype) {
		return true
	}

	return false
}

// SetUpdatetype gets a reference to the given string and assigns it to the Updatetype field.
func (o *UpdateOrganizationRequestRulesInner) SetUpdatetype(v string) {
	o.Updatetype = &v
}

func (o UpdateOrganizationRequestRulesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOrganizationRequestRulesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Updatetype) {
		toSerialize["updatetype"] = o.Updatetype
	}
	return toSerialize, nil
}

type NullableUpdateOrganizationRequestRulesInner struct {
	value *UpdateOrganizationRequestRulesInner
	isSet bool
}

func (v NullableUpdateOrganizationRequestRulesInner) Get() *UpdateOrganizationRequestRulesInner {
	return v.value
}

func (v *NullableUpdateOrganizationRequestRulesInner) Set(val *UpdateOrganizationRequestRulesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOrganizationRequestRulesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOrganizationRequestRulesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOrganizationRequestRulesInner(val *UpdateOrganizationRequestRulesInner) *NullableUpdateOrganizationRequestRulesInner {
	return &NullableUpdateOrganizationRequestRulesInner{value: val, isSet: true}
}

func (v NullableUpdateOrganizationRequestRulesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOrganizationRequestRulesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


