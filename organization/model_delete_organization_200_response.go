/*
Organization Management API

API for creating, updating, retrieving, and deleting organization data in EIC

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DeleteOrganization200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteOrganization200Response{}

// DeleteOrganization200Response struct for DeleteOrganization200Response
type DeleteOrganization200Response struct {
	Errorcode *string `json:"errorcode,omitempty"`
	Msg *string `json:"msg,omitempty"`
}

// NewDeleteOrganization200Response instantiates a new DeleteOrganization200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteOrganization200Response() *DeleteOrganization200Response {
	this := DeleteOrganization200Response{}
	return &this
}

// NewDeleteOrganization200ResponseWithDefaults instantiates a new DeleteOrganization200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteOrganization200ResponseWithDefaults() *DeleteOrganization200Response {
	this := DeleteOrganization200Response{}
	return &this
}

// GetErrorcode returns the Errorcode field value if set, zero value otherwise.
func (o *DeleteOrganization200Response) GetErrorcode() string {
	if o == nil || IsNil(o.Errorcode) {
		var ret string
		return ret
	}
	return *o.Errorcode
}

// GetErrorcodeOk returns a tuple with the Errorcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteOrganization200Response) GetErrorcodeOk() (*string, bool) {
	if o == nil || IsNil(o.Errorcode) {
		return nil, false
	}
	return o.Errorcode, true
}

// HasErrorcode returns a boolean if a field has been set.
func (o *DeleteOrganization200Response) HasErrorcode() bool {
	if o != nil && !IsNil(o.Errorcode) {
		return true
	}

	return false
}

// SetErrorcode gets a reference to the given string and assigns it to the Errorcode field.
func (o *DeleteOrganization200Response) SetErrorcode(v string) {
	o.Errorcode = &v
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *DeleteOrganization200Response) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteOrganization200Response) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *DeleteOrganization200Response) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *DeleteOrganization200Response) SetMsg(v string) {
	o.Msg = &v
}

func (o DeleteOrganization200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteOrganization200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Errorcode) {
		toSerialize["errorcode"] = o.Errorcode
	}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	return toSerialize, nil
}

type NullableDeleteOrganization200Response struct {
	value *DeleteOrganization200Response
	isSet bool
}

func (v NullableDeleteOrganization200Response) Get() *DeleteOrganization200Response {
	return v.value
}

func (v *NullableDeleteOrganization200Response) Set(val *DeleteOrganization200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteOrganization200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteOrganization200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteOrganization200Response(val *DeleteOrganization200Response) *NullableDeleteOrganization200Response {
	return &NullableDeleteOrganization200Response{value: val, isSet: true}
}

func (v NullableDeleteOrganization200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteOrganization200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


