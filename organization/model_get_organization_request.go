/*
Organization Management API

API for creating, updating, retrieving, and deleting organization data in EIC

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetOrganizationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOrganizationRequest{}

// GetOrganizationRequest struct for GetOrganizationRequest
type GetOrganizationRequest struct {
	// Filter organizations by name.
	Organizationname *string `json:"organizationname,omitempty"`
	// Maximum number of records to return.
	Max *string `json:"max,omitempty"`
	// Offset for pagination.
	Offset *string `json:"offset,omitempty"`
	// A comma‚Äêseparated list of criteria to filter organizations.
	Filtercriteria *string `json:"filtercriteria,omitempty"`
	// A SQL-like query (e.g., c.organizationname like '%TestOrg5%').
	OrgQuery *string `json:"orgQuery,omitempty"`
}

// NewGetOrganizationRequest instantiates a new GetOrganizationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrganizationRequest() *GetOrganizationRequest {
	this := GetOrganizationRequest{}
	return &this
}

// NewGetOrganizationRequestWithDefaults instantiates a new GetOrganizationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrganizationRequestWithDefaults() *GetOrganizationRequest {
	this := GetOrganizationRequest{}
	return &this
}

// GetOrganizationname returns the Organizationname field value if set, zero value otherwise.
func (o *GetOrganizationRequest) GetOrganizationname() string {
	if o == nil || IsNil(o.Organizationname) {
		var ret string
		return ret
	}
	return *o.Organizationname
}

// GetOrganizationnameOk returns a tuple with the Organizationname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationRequest) GetOrganizationnameOk() (*string, bool) {
	if o == nil || IsNil(o.Organizationname) {
		return nil, false
	}
	return o.Organizationname, true
}

// HasOrganizationname returns a boolean if a field has been set.
func (o *GetOrganizationRequest) HasOrganizationname() bool {
	if o != nil && !IsNil(o.Organizationname) {
		return true
	}

	return false
}

// SetOrganizationname gets a reference to the given string and assigns it to the Organizationname field.
func (o *GetOrganizationRequest) SetOrganizationname(v string) {
	o.Organizationname = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *GetOrganizationRequest) GetMax() string {
	if o == nil || IsNil(o.Max) {
		var ret string
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationRequest) GetMaxOk() (*string, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *GetOrganizationRequest) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given string and assigns it to the Max field.
func (o *GetOrganizationRequest) SetMax(v string) {
	o.Max = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *GetOrganizationRequest) GetOffset() string {
	if o == nil || IsNil(o.Offset) {
		var ret string
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationRequest) GetOffsetOk() (*string, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *GetOrganizationRequest) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given string and assigns it to the Offset field.
func (o *GetOrganizationRequest) SetOffset(v string) {
	o.Offset = &v
}

// GetFiltercriteria returns the Filtercriteria field value if set, zero value otherwise.
func (o *GetOrganizationRequest) GetFiltercriteria() string {
	if o == nil || IsNil(o.Filtercriteria) {
		var ret string
		return ret
	}
	return *o.Filtercriteria
}

// GetFiltercriteriaOk returns a tuple with the Filtercriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationRequest) GetFiltercriteriaOk() (*string, bool) {
	if o == nil || IsNil(o.Filtercriteria) {
		return nil, false
	}
	return o.Filtercriteria, true
}

// HasFiltercriteria returns a boolean if a field has been set.
func (o *GetOrganizationRequest) HasFiltercriteria() bool {
	if o != nil && !IsNil(o.Filtercriteria) {
		return true
	}

	return false
}

// SetFiltercriteria gets a reference to the given string and assigns it to the Filtercriteria field.
func (o *GetOrganizationRequest) SetFiltercriteria(v string) {
	o.Filtercriteria = &v
}

// GetOrgQuery returns the OrgQuery field value if set, zero value otherwise.
func (o *GetOrganizationRequest) GetOrgQuery() string {
	if o == nil || IsNil(o.OrgQuery) {
		var ret string
		return ret
	}
	return *o.OrgQuery
}

// GetOrgQueryOk returns a tuple with the OrgQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationRequest) GetOrgQueryOk() (*string, bool) {
	if o == nil || IsNil(o.OrgQuery) {
		return nil, false
	}
	return o.OrgQuery, true
}

// HasOrgQuery returns a boolean if a field has been set.
func (o *GetOrganizationRequest) HasOrgQuery() bool {
	if o != nil && !IsNil(o.OrgQuery) {
		return true
	}

	return false
}

// SetOrgQuery gets a reference to the given string and assigns it to the OrgQuery field.
func (o *GetOrganizationRequest) SetOrgQuery(v string) {
	o.OrgQuery = &v
}

func (o GetOrganizationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOrganizationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Organizationname) {
		toSerialize["organizationname"] = o.Organizationname
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !IsNil(o.Filtercriteria) {
		toSerialize["filtercriteria"] = o.Filtercriteria
	}
	if !IsNil(o.OrgQuery) {
		toSerialize["orgQuery"] = o.OrgQuery
	}
	return toSerialize, nil
}

type NullableGetOrganizationRequest struct {
	value *GetOrganizationRequest
	isSet bool
}

func (v NullableGetOrganizationRequest) Get() *GetOrganizationRequest {
	return v.value
}

func (v *NullableGetOrganizationRequest) Set(val *GetOrganizationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrganizationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrganizationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrganizationRequest(val *GetOrganizationRequest) *NullableGetOrganizationRequest {
	return &NullableGetOrganizationRequest{value: val, isSet: true}
}

func (v NullableGetOrganizationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrganizationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


