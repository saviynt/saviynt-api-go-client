/*
Saviynt Delegated Administration API

Deglated Administration

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delegatedadministration

import (
	"encoding/json"
)

// checks if the GetDelegateUserListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDelegateUserListResponse{}

// GetDelegateUserListResponse struct for GetDelegateUserListResponse
type GetDelegateUserListResponse struct {
	Result       []DelegateUser `json:"result,omitempty"`
	Msg          *string        `json:"msg,omitempty"`
	DisplayCount *string        `json:"displayCount,omitempty"`
	ErrorCode    *string        `json:"errorCode,omitempty"`
	TotalCount   *string        `json:"totalCount,omitempty"`
}

// NewGetDelegateUserListResponse instantiates a new GetDelegateUserListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDelegateUserListResponse() *GetDelegateUserListResponse {
	this := GetDelegateUserListResponse{}
	return &this
}

// NewGetDelegateUserListResponseWithDefaults instantiates a new GetDelegateUserListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDelegateUserListResponseWithDefaults() *GetDelegateUserListResponse {
	this := GetDelegateUserListResponse{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *GetDelegateUserListResponse) GetResult() []DelegateUser {
	if o == nil || IsNil(o.Result) {
		var ret []DelegateUser
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDelegateUserListResponse) GetResultOk() ([]DelegateUser, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *GetDelegateUserListResponse) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given []DelegateUser and assigns it to the Result field.
func (o *GetDelegateUserListResponse) SetResult(v []DelegateUser) {
	o.Result = v
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *GetDelegateUserListResponse) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDelegateUserListResponse) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *GetDelegateUserListResponse) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *GetDelegateUserListResponse) SetMsg(v string) {
	o.Msg = &v
}

// GetDisplayCount returns the DisplayCount field value if set, zero value otherwise.
func (o *GetDelegateUserListResponse) GetDisplayCount() string {
	if o == nil || IsNil(o.DisplayCount) {
		var ret string
		return ret
	}
	return *o.DisplayCount
}

// GetDisplayCountOk returns a tuple with the DisplayCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDelegateUserListResponse) GetDisplayCountOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayCount) {
		return nil, false
	}
	return o.DisplayCount, true
}

// HasDisplayCount returns a boolean if a field has been set.
func (o *GetDelegateUserListResponse) HasDisplayCount() bool {
	if o != nil && !IsNil(o.DisplayCount) {
		return true
	}

	return false
}

// SetDisplayCount gets a reference to the given string and assigns it to the DisplayCount field.
func (o *GetDelegateUserListResponse) SetDisplayCount(v string) {
	o.DisplayCount = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *GetDelegateUserListResponse) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDelegateUserListResponse) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *GetDelegateUserListResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *GetDelegateUserListResponse) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *GetDelegateUserListResponse) GetTotalCount() string {
	if o == nil || IsNil(o.TotalCount) {
		var ret string
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDelegateUserListResponse) GetTotalCountOk() (*string, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *GetDelegateUserListResponse) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given string and assigns it to the TotalCount field.
func (o *GetDelegateUserListResponse) SetTotalCount(v string) {
	o.TotalCount = &v
}

func (o GetDelegateUserListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDelegateUserListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.DisplayCount) {
		toSerialize["displayCount"] = o.DisplayCount
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	return toSerialize, nil
}

type NullableGetDelegateUserListResponse struct {
	value *GetDelegateUserListResponse
	isSet bool
}

func (v NullableGetDelegateUserListResponse) Get() *GetDelegateUserListResponse {
	return v.value
}

func (v *NullableGetDelegateUserListResponse) Set(val *GetDelegateUserListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDelegateUserListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDelegateUserListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDelegateUserListResponse(val *GetDelegateUserListResponse) *NullableGetDelegateUserListResponse {
	return &NullableGetDelegateUserListResponse{value: val, isSet: true}
}

func (v NullableGetDelegateUserListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDelegateUserListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
