/*
Saviynt Delegated Administration API

Testing DelegatedAdministrationAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package delegatedadministration

import (
	"context"
	"testing"

	openapiclient "github.com/saviynt/saviynt-api-go-client/delegatedadministration"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_delegatedadministration_DelegatedAdministrationAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DelegatedAdministrationAPIService CreateDelegate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.DelegatedAdministrationAPI.CreateDelegate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DelegatedAdministrationAPIService DeleteDelegate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.DelegatedAdministrationAPI.DeleteDelegate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DelegatedAdministrationAPIService EditDelegate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.DelegatedAdministrationAPI.EditDelegate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DelegatedAdministrationAPIService FetchExistingDelegatesList", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.DelegatedAdministrationAPI.FetchExistingDelegatesList(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DelegatedAdministrationAPIService GetDelegateUserList", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.DelegatedAdministrationAPI.GetDelegateUserList(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
