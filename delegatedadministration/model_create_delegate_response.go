/*
Saviynt Delegated Administration API

Deglated Administration

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delegatedadministration

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateDelegateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDelegateResponse{}

// CreateDelegateResponse struct for CreateDelegateResponse
type CreateDelegateResponse struct {
	Msg         string  `json:"msg"`
	Delegatekey *string `json:"delegatekey,omitempty"`
	ErrorCode   string  `json:"errorCode"`
}

type _CreateDelegateResponse CreateDelegateResponse

// NewCreateDelegateResponse instantiates a new CreateDelegateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDelegateResponse(msg string, errorCode string) *CreateDelegateResponse {
	this := CreateDelegateResponse{}
	this.Msg = msg
	this.ErrorCode = errorCode
	return &this
}

// NewCreateDelegateResponseWithDefaults instantiates a new CreateDelegateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDelegateResponseWithDefaults() *CreateDelegateResponse {
	this := CreateDelegateResponse{}
	return &this
}

// GetMsg returns the Msg field value
func (o *CreateDelegateResponse) GetMsg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Msg
}

// GetMsgOk returns a tuple with the Msg field value
// and a boolean to check if the value has been set.
func (o *CreateDelegateResponse) GetMsgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Msg, true
}

// SetMsg sets field value
func (o *CreateDelegateResponse) SetMsg(v string) {
	o.Msg = v
}

// GetDelegatekey returns the Delegatekey field value if set, zero value otherwise.
func (o *CreateDelegateResponse) GetDelegatekey() string {
	if o == nil || IsNil(o.Delegatekey) {
		var ret string
		return ret
	}
	return *o.Delegatekey
}

// GetDelegatekeyOk returns a tuple with the Delegatekey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDelegateResponse) GetDelegatekeyOk() (*string, bool) {
	if o == nil || IsNil(o.Delegatekey) {
		return nil, false
	}
	return o.Delegatekey, true
}

// HasDelegatekey returns a boolean if a field has been set.
func (o *CreateDelegateResponse) HasDelegatekey() bool {
	if o != nil && !IsNil(o.Delegatekey) {
		return true
	}

	return false
}

// SetDelegatekey gets a reference to the given string and assigns it to the Delegatekey field.
func (o *CreateDelegateResponse) SetDelegatekey(v string) {
	o.Delegatekey = &v
}

// GetErrorCode returns the ErrorCode field value
func (o *CreateDelegateResponse) GetErrorCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value
// and a boolean to check if the value has been set.
func (o *CreateDelegateResponse) GetErrorCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorCode, true
}

// SetErrorCode sets field value
func (o *CreateDelegateResponse) SetErrorCode(v string) {
	o.ErrorCode = v
}

func (o CreateDelegateResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDelegateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["msg"] = o.Msg
	if !IsNil(o.Delegatekey) {
		toSerialize["delegatekey"] = o.Delegatekey
	}
	toSerialize["errorCode"] = o.ErrorCode
	return toSerialize, nil
}

func (o *CreateDelegateResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"msg",
		"errorCode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateDelegateResponse := _CreateDelegateResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateDelegateResponse)

	if err != nil {
		return err
	}

	*o = CreateDelegateResponse(varCreateDelegateResponse)

	return err
}

type NullableCreateDelegateResponse struct {
	value *CreateDelegateResponse
	isSet bool
}

func (v NullableCreateDelegateResponse) Get() *CreateDelegateResponse {
	return v.value
}

func (v *NullableCreateDelegateResponse) Set(val *CreateDelegateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDelegateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDelegateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDelegateResponse(val *CreateDelegateResponse) *NullableCreateDelegateResponse {
	return &NullableCreateDelegateResponse{value: val, isSet: true}
}

func (v NullableCreateDelegateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDelegateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
