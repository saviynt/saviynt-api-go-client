/*
Account Management API

API for managing security systems in EIC. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package securitysystems

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateSecuritySystemRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSecuritySystemRequest{}

// UpdateSecuritySystemRequest struct for UpdateSecuritySystemRequest
type UpdateSecuritySystemRequest struct {
	// The security system name to update.
	Systemname string `json:"systemname"`
	// Specify a user-friendly display name that is shown on the the user interface.
	DisplayName string `json:"displayName"`
	// Security system for which you want to create an endpoint.
	Hostname *string `json:"hostname,omitempty"`
	// Description for the endpoint.
	Port *string `json:"port,omitempty"`
	// Specify the workflow to be used for approvals for an access request, which can be for an account, entitlements, role, and so on
	AccessAddWorkflow *string `json:"accessAddWorkflow,omitempty"`
	// Specify the workflow to be used when access has to be revoked, which can be for an account, entitlement, or any other de-provisioning task.
	AccessRemoveWorkflow *string `json:"accessRemoveWorkflow,omitempty"`
	// Workflow for adding a service account.
	AddServiceAccountWorkflow *string `json:"addServiceAccountWorkflow,omitempty"`
	// Workflow for removing a service account.
	RemoveServiceAccountWorkflow *string `json:"removeServiceAccountWorkflow,omitempty"`
	// Query to filter the access and display of the endpoint to specific users. If you do not define a query, the endpoint is displayed for all users
	Connectionparameters *string `json:"connectionparameters,omitempty"`
	// Query to filter the access and display of the endpoint to specific users. If you do not define a query, the endpoint is displayed for all users
	ProposedAccountOwnersworkflow *string `json:"proposedAccountOwnersworkflow,omitempty"`
	// firefighteridWorkflow
	FirefighteridWorkflow *string `json:"firefighteridWorkflow,omitempty"`
	// firefighteridRequestAccessWorkflow
	FirefighteridRequestAccessWorkflow *string `json:"firefighteridRequestAccessWorkflow,omitempty"`
	// Specify true to enable automated provisioning.
	AutomatedProvisioning *string `json:"automatedProvisioning,omitempty"`
	// Specify true to enable the connectivity with any system over the open-source connectors such as REST.
	Useopenconnector *string `json:"useopenconnector,omitempty"`
	// Specify true to set the security system as the Default System. Following which accounts search will only be searched and displayed for this security system.
	DefaultSystem *string `json:"defaultSystem,omitempty"`
	// Specify true to importing data from respective endpoint associated to security system.
	ReconApplication *string `json:"reconApplication,omitempty"`
	// Use this flag to prevent users from raising duplicate requests for the same applications.
	Instantprovision *string `json:"instantprovision,omitempty"`
	// Specify the number of tries to be used for performing provisioning / de-provisioning to the third-party application. You can specify provisioningTries between 1 to 20 based on your requirement.
	ProvisioningTries *string `json:"provisioningTries,omitempty"`
	// Contains JSON configuration for external risk connections and is applicable only for few connections like SAP
	ExternalRiskConnectionJson *string `json:"externalRiskConnectionJson,omitempty"`
	// Use this setting to assign the password policy for the security system.
	PolicyRule *string `json:"policyRule,omitempty"`
	// Use this setting to assign the password policy which will be used to set the service account passwords for the security system.
	PolicyRuleServiceAccount *string `json:"policyRuleServiceAccount,omitempty"`
	// Select the connection name for performing reconciliation of identity objects from third-party application.
	Connectionname *string `json:"connectionname,omitempty"`
	// You can use a separate connection to an endpoint where you are performing provisioning or deprovisioning. Based on your requirement, you can specify a separate connection where you want to perform provisioning and de-provisioning.
	ProvisioningConnection *string `json:"provisioningConnection,omitempty"`
	// Specify the Service Desk Connection used for integration with a ticketing system, which can be a disconnected system too.
	ServiceDeskConnection *string `json:"serviceDeskConnection,omitempty"`
	// Specify relevant comments for performing provisioning.
	Provisioningcomments *string `json:"provisioningcomments,omitempty"`
	//  You can use this option used to filter out columns in SOD.
	InherentSODReportFields []string `json:"inherentSODReportFields,omitempty"`
}

type _UpdateSecuritySystemRequest UpdateSecuritySystemRequest

// NewUpdateSecuritySystemRequest instantiates a new UpdateSecuritySystemRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSecuritySystemRequest(systemname string, displayName string) *UpdateSecuritySystemRequest {
	this := UpdateSecuritySystemRequest{}
	this.Systemname = systemname
	this.DisplayName = displayName
	return &this
}

// NewUpdateSecuritySystemRequestWithDefaults instantiates a new UpdateSecuritySystemRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSecuritySystemRequestWithDefaults() *UpdateSecuritySystemRequest {
	this := UpdateSecuritySystemRequest{}
	return &this
}

// GetSystemname returns the Systemname field value
func (o *UpdateSecuritySystemRequest) GetSystemname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Systemname
}

// GetSystemnameOk returns a tuple with the Systemname field value
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetSystemnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Systemname, true
}

// SetSystemname sets field value
func (o *UpdateSecuritySystemRequest) SetSystemname(v string) {
	o.Systemname = v
}

// GetDisplayName returns the DisplayName field value
func (o *UpdateSecuritySystemRequest) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *UpdateSecuritySystemRequest) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *UpdateSecuritySystemRequest) SetHostname(v string) {
	o.Hostname = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetPort() string {
	if o == nil || IsNil(o.Port) {
		var ret string
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetPortOk() (*string, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given string and assigns it to the Port field.
func (o *UpdateSecuritySystemRequest) SetPort(v string) {
	o.Port = &v
}

// GetAccessAddWorkflow returns the AccessAddWorkflow field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetAccessAddWorkflow() string {
	if o == nil || IsNil(o.AccessAddWorkflow) {
		var ret string
		return ret
	}
	return *o.AccessAddWorkflow
}

// GetAccessAddWorkflowOk returns a tuple with the AccessAddWorkflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetAccessAddWorkflowOk() (*string, bool) {
	if o == nil || IsNil(o.AccessAddWorkflow) {
		return nil, false
	}
	return o.AccessAddWorkflow, true
}

// HasAccessAddWorkflow returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasAccessAddWorkflow() bool {
	if o != nil && !IsNil(o.AccessAddWorkflow) {
		return true
	}

	return false
}

// SetAccessAddWorkflow gets a reference to the given string and assigns it to the AccessAddWorkflow field.
func (o *UpdateSecuritySystemRequest) SetAccessAddWorkflow(v string) {
	o.AccessAddWorkflow = &v
}

// GetAccessRemoveWorkflow returns the AccessRemoveWorkflow field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetAccessRemoveWorkflow() string {
	if o == nil || IsNil(o.AccessRemoveWorkflow) {
		var ret string
		return ret
	}
	return *o.AccessRemoveWorkflow
}

// GetAccessRemoveWorkflowOk returns a tuple with the AccessRemoveWorkflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetAccessRemoveWorkflowOk() (*string, bool) {
	if o == nil || IsNil(o.AccessRemoveWorkflow) {
		return nil, false
	}
	return o.AccessRemoveWorkflow, true
}

// HasAccessRemoveWorkflow returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasAccessRemoveWorkflow() bool {
	if o != nil && !IsNil(o.AccessRemoveWorkflow) {
		return true
	}

	return false
}

// SetAccessRemoveWorkflow gets a reference to the given string and assigns it to the AccessRemoveWorkflow field.
func (o *UpdateSecuritySystemRequest) SetAccessRemoveWorkflow(v string) {
	o.AccessRemoveWorkflow = &v
}

// GetAddServiceAccountWorkflow returns the AddServiceAccountWorkflow field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetAddServiceAccountWorkflow() string {
	if o == nil || IsNil(o.AddServiceAccountWorkflow) {
		var ret string
		return ret
	}
	return *o.AddServiceAccountWorkflow
}

// GetAddServiceAccountWorkflowOk returns a tuple with the AddServiceAccountWorkflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetAddServiceAccountWorkflowOk() (*string, bool) {
	if o == nil || IsNil(o.AddServiceAccountWorkflow) {
		return nil, false
	}
	return o.AddServiceAccountWorkflow, true
}

// HasAddServiceAccountWorkflow returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasAddServiceAccountWorkflow() bool {
	if o != nil && !IsNil(o.AddServiceAccountWorkflow) {
		return true
	}

	return false
}

// SetAddServiceAccountWorkflow gets a reference to the given string and assigns it to the AddServiceAccountWorkflow field.
func (o *UpdateSecuritySystemRequest) SetAddServiceAccountWorkflow(v string) {
	o.AddServiceAccountWorkflow = &v
}

// GetRemoveServiceAccountWorkflow returns the RemoveServiceAccountWorkflow field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetRemoveServiceAccountWorkflow() string {
	if o == nil || IsNil(o.RemoveServiceAccountWorkflow) {
		var ret string
		return ret
	}
	return *o.RemoveServiceAccountWorkflow
}

// GetRemoveServiceAccountWorkflowOk returns a tuple with the RemoveServiceAccountWorkflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetRemoveServiceAccountWorkflowOk() (*string, bool) {
	if o == nil || IsNil(o.RemoveServiceAccountWorkflow) {
		return nil, false
	}
	return o.RemoveServiceAccountWorkflow, true
}

// HasRemoveServiceAccountWorkflow returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasRemoveServiceAccountWorkflow() bool {
	if o != nil && !IsNil(o.RemoveServiceAccountWorkflow) {
		return true
	}

	return false
}

// SetRemoveServiceAccountWorkflow gets a reference to the given string and assigns it to the RemoveServiceAccountWorkflow field.
func (o *UpdateSecuritySystemRequest) SetRemoveServiceAccountWorkflow(v string) {
	o.RemoveServiceAccountWorkflow = &v
}

// GetConnectionparameters returns the Connectionparameters field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetConnectionparameters() string {
	if o == nil || IsNil(o.Connectionparameters) {
		var ret string
		return ret
	}
	return *o.Connectionparameters
}

// GetConnectionparametersOk returns a tuple with the Connectionparameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetConnectionparametersOk() (*string, bool) {
	if o == nil || IsNil(o.Connectionparameters) {
		return nil, false
	}
	return o.Connectionparameters, true
}

// HasConnectionparameters returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasConnectionparameters() bool {
	if o != nil && !IsNil(o.Connectionparameters) {
		return true
	}

	return false
}

// SetConnectionparameters gets a reference to the given string and assigns it to the Connectionparameters field.
func (o *UpdateSecuritySystemRequest) SetConnectionparameters(v string) {
	o.Connectionparameters = &v
}

// GetProposedAccountOwnersworkflow returns the ProposedAccountOwnersworkflow field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetProposedAccountOwnersworkflow() string {
	if o == nil || IsNil(o.ProposedAccountOwnersworkflow) {
		var ret string
		return ret
	}
	return *o.ProposedAccountOwnersworkflow
}

// GetProposedAccountOwnersworkflowOk returns a tuple with the ProposedAccountOwnersworkflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetProposedAccountOwnersworkflowOk() (*string, bool) {
	if o == nil || IsNil(o.ProposedAccountOwnersworkflow) {
		return nil, false
	}
	return o.ProposedAccountOwnersworkflow, true
}

// HasProposedAccountOwnersworkflow returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasProposedAccountOwnersworkflow() bool {
	if o != nil && !IsNil(o.ProposedAccountOwnersworkflow) {
		return true
	}

	return false
}

// SetProposedAccountOwnersworkflow gets a reference to the given string and assigns it to the ProposedAccountOwnersworkflow field.
func (o *UpdateSecuritySystemRequest) SetProposedAccountOwnersworkflow(v string) {
	o.ProposedAccountOwnersworkflow = &v
}

// GetFirefighteridWorkflow returns the FirefighteridWorkflow field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetFirefighteridWorkflow() string {
	if o == nil || IsNil(o.FirefighteridWorkflow) {
		var ret string
		return ret
	}
	return *o.FirefighteridWorkflow
}

// GetFirefighteridWorkflowOk returns a tuple with the FirefighteridWorkflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetFirefighteridWorkflowOk() (*string, bool) {
	if o == nil || IsNil(o.FirefighteridWorkflow) {
		return nil, false
	}
	return o.FirefighteridWorkflow, true
}

// HasFirefighteridWorkflow returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasFirefighteridWorkflow() bool {
	if o != nil && !IsNil(o.FirefighteridWorkflow) {
		return true
	}

	return false
}

// SetFirefighteridWorkflow gets a reference to the given string and assigns it to the FirefighteridWorkflow field.
func (o *UpdateSecuritySystemRequest) SetFirefighteridWorkflow(v string) {
	o.FirefighteridWorkflow = &v
}

// GetFirefighteridRequestAccessWorkflow returns the FirefighteridRequestAccessWorkflow field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetFirefighteridRequestAccessWorkflow() string {
	if o == nil || IsNil(o.FirefighteridRequestAccessWorkflow) {
		var ret string
		return ret
	}
	return *o.FirefighteridRequestAccessWorkflow
}

// GetFirefighteridRequestAccessWorkflowOk returns a tuple with the FirefighteridRequestAccessWorkflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetFirefighteridRequestAccessWorkflowOk() (*string, bool) {
	if o == nil || IsNil(o.FirefighteridRequestAccessWorkflow) {
		return nil, false
	}
	return o.FirefighteridRequestAccessWorkflow, true
}

// HasFirefighteridRequestAccessWorkflow returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasFirefighteridRequestAccessWorkflow() bool {
	if o != nil && !IsNil(o.FirefighteridRequestAccessWorkflow) {
		return true
	}

	return false
}

// SetFirefighteridRequestAccessWorkflow gets a reference to the given string and assigns it to the FirefighteridRequestAccessWorkflow field.
func (o *UpdateSecuritySystemRequest) SetFirefighteridRequestAccessWorkflow(v string) {
	o.FirefighteridRequestAccessWorkflow = &v
}

// GetAutomatedProvisioning returns the AutomatedProvisioning field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetAutomatedProvisioning() string {
	if o == nil || IsNil(o.AutomatedProvisioning) {
		var ret string
		return ret
	}
	return *o.AutomatedProvisioning
}

// GetAutomatedProvisioningOk returns a tuple with the AutomatedProvisioning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetAutomatedProvisioningOk() (*string, bool) {
	if o == nil || IsNil(o.AutomatedProvisioning) {
		return nil, false
	}
	return o.AutomatedProvisioning, true
}

// HasAutomatedProvisioning returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasAutomatedProvisioning() bool {
	if o != nil && !IsNil(o.AutomatedProvisioning) {
		return true
	}

	return false
}

// SetAutomatedProvisioning gets a reference to the given string and assigns it to the AutomatedProvisioning field.
func (o *UpdateSecuritySystemRequest) SetAutomatedProvisioning(v string) {
	o.AutomatedProvisioning = &v
}

// GetUseopenconnector returns the Useopenconnector field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetUseopenconnector() string {
	if o == nil || IsNil(o.Useopenconnector) {
		var ret string
		return ret
	}
	return *o.Useopenconnector
}

// GetUseopenconnectorOk returns a tuple with the Useopenconnector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetUseopenconnectorOk() (*string, bool) {
	if o == nil || IsNil(o.Useopenconnector) {
		return nil, false
	}
	return o.Useopenconnector, true
}

// HasUseopenconnector returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasUseopenconnector() bool {
	if o != nil && !IsNil(o.Useopenconnector) {
		return true
	}

	return false
}

// SetUseopenconnector gets a reference to the given string and assigns it to the Useopenconnector field.
func (o *UpdateSecuritySystemRequest) SetUseopenconnector(v string) {
	o.Useopenconnector = &v
}

// GetDefaultSystem returns the DefaultSystem field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetDefaultSystem() string {
	if o == nil || IsNil(o.DefaultSystem) {
		var ret string
		return ret
	}
	return *o.DefaultSystem
}

// GetDefaultSystemOk returns a tuple with the DefaultSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetDefaultSystemOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultSystem) {
		return nil, false
	}
	return o.DefaultSystem, true
}

// HasDefaultSystem returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasDefaultSystem() bool {
	if o != nil && !IsNil(o.DefaultSystem) {
		return true
	}

	return false
}

// SetDefaultSystem gets a reference to the given string and assigns it to the DefaultSystem field.
func (o *UpdateSecuritySystemRequest) SetDefaultSystem(v string) {
	o.DefaultSystem = &v
}

// GetReconApplication returns the ReconApplication field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetReconApplication() string {
	if o == nil || IsNil(o.ReconApplication) {
		var ret string
		return ret
	}
	return *o.ReconApplication
}

// GetReconApplicationOk returns a tuple with the ReconApplication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetReconApplicationOk() (*string, bool) {
	if o == nil || IsNil(o.ReconApplication) {
		return nil, false
	}
	return o.ReconApplication, true
}

// HasReconApplication returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasReconApplication() bool {
	if o != nil && !IsNil(o.ReconApplication) {
		return true
	}

	return false
}

// SetReconApplication gets a reference to the given string and assigns it to the ReconApplication field.
func (o *UpdateSecuritySystemRequest) SetReconApplication(v string) {
	o.ReconApplication = &v
}

// GetInstantprovision returns the Instantprovision field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetInstantprovision() string {
	if o == nil || IsNil(o.Instantprovision) {
		var ret string
		return ret
	}
	return *o.Instantprovision
}

// GetInstantprovisionOk returns a tuple with the Instantprovision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetInstantprovisionOk() (*string, bool) {
	if o == nil || IsNil(o.Instantprovision) {
		return nil, false
	}
	return o.Instantprovision, true
}

// HasInstantprovision returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasInstantprovision() bool {
	if o != nil && !IsNil(o.Instantprovision) {
		return true
	}

	return false
}

// SetInstantprovision gets a reference to the given string and assigns it to the Instantprovision field.
func (o *UpdateSecuritySystemRequest) SetInstantprovision(v string) {
	o.Instantprovision = &v
}

// GetProvisioningTries returns the ProvisioningTries field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetProvisioningTries() string {
	if o == nil || IsNil(o.ProvisioningTries) {
		var ret string
		return ret
	}
	return *o.ProvisioningTries
}

// GetProvisioningTriesOk returns a tuple with the ProvisioningTries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetProvisioningTriesOk() (*string, bool) {
	if o == nil || IsNil(o.ProvisioningTries) {
		return nil, false
	}
	return o.ProvisioningTries, true
}

// HasProvisioningTries returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasProvisioningTries() bool {
	if o != nil && !IsNil(o.ProvisioningTries) {
		return true
	}

	return false
}

// SetProvisioningTries gets a reference to the given string and assigns it to the ProvisioningTries field.
func (o *UpdateSecuritySystemRequest) SetProvisioningTries(v string) {
	o.ProvisioningTries = &v
}

// GetExternalRiskConnectionJson returns the ExternalRiskConnectionJson field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetExternalRiskConnectionJson() string {
	if o == nil || IsNil(o.ExternalRiskConnectionJson) {
		var ret string
		return ret
	}
	return *o.ExternalRiskConnectionJson
}

// GetExternalRiskConnectionJsonOk returns a tuple with the ExternalRiskConnectionJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetExternalRiskConnectionJsonOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalRiskConnectionJson) {
		return nil, false
	}
	return o.ExternalRiskConnectionJson, true
}

// HasExternalRiskConnectionJson returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasExternalRiskConnectionJson() bool {
	if o != nil && !IsNil(o.ExternalRiskConnectionJson) {
		return true
	}

	return false
}

// SetExternalRiskConnectionJson gets a reference to the given string and assigns it to the ExternalRiskConnectionJson field.
func (o *UpdateSecuritySystemRequest) SetExternalRiskConnectionJson(v string) {
	o.ExternalRiskConnectionJson = &v
}

// GetPolicyRule returns the PolicyRule field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetPolicyRule() string {
	if o == nil || IsNil(o.PolicyRule) {
		var ret string
		return ret
	}
	return *o.PolicyRule
}

// GetPolicyRuleOk returns a tuple with the PolicyRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetPolicyRuleOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyRule) {
		return nil, false
	}
	return o.PolicyRule, true
}

// HasPolicyRule returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasPolicyRule() bool {
	if o != nil && !IsNil(o.PolicyRule) {
		return true
	}

	return false
}

// SetPolicyRule gets a reference to the given string and assigns it to the PolicyRule field.
func (o *UpdateSecuritySystemRequest) SetPolicyRule(v string) {
	o.PolicyRule = &v
}

// GetPolicyRuleServiceAccount returns the PolicyRuleServiceAccount field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetPolicyRuleServiceAccount() string {
	if o == nil || IsNil(o.PolicyRuleServiceAccount) {
		var ret string
		return ret
	}
	return *o.PolicyRuleServiceAccount
}

// GetPolicyRuleServiceAccountOk returns a tuple with the PolicyRuleServiceAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetPolicyRuleServiceAccountOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyRuleServiceAccount) {
		return nil, false
	}
	return o.PolicyRuleServiceAccount, true
}

// HasPolicyRuleServiceAccount returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasPolicyRuleServiceAccount() bool {
	if o != nil && !IsNil(o.PolicyRuleServiceAccount) {
		return true
	}

	return false
}

// SetPolicyRuleServiceAccount gets a reference to the given string and assigns it to the PolicyRuleServiceAccount field.
func (o *UpdateSecuritySystemRequest) SetPolicyRuleServiceAccount(v string) {
	o.PolicyRuleServiceAccount = &v
}

// GetConnectionname returns the Connectionname field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetConnectionname() string {
	if o == nil || IsNil(o.Connectionname) {
		var ret string
		return ret
	}
	return *o.Connectionname
}

// GetConnectionnameOk returns a tuple with the Connectionname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetConnectionnameOk() (*string, bool) {
	if o == nil || IsNil(o.Connectionname) {
		return nil, false
	}
	return o.Connectionname, true
}

// HasConnectionname returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasConnectionname() bool {
	if o != nil && !IsNil(o.Connectionname) {
		return true
	}

	return false
}

// SetConnectionname gets a reference to the given string and assigns it to the Connectionname field.
func (o *UpdateSecuritySystemRequest) SetConnectionname(v string) {
	o.Connectionname = &v
}

// GetProvisioningConnection returns the ProvisioningConnection field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetProvisioningConnection() string {
	if o == nil || IsNil(o.ProvisioningConnection) {
		var ret string
		return ret
	}
	return *o.ProvisioningConnection
}

// GetProvisioningConnectionOk returns a tuple with the ProvisioningConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetProvisioningConnectionOk() (*string, bool) {
	if o == nil || IsNil(o.ProvisioningConnection) {
		return nil, false
	}
	return o.ProvisioningConnection, true
}

// HasProvisioningConnection returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasProvisioningConnection() bool {
	if o != nil && !IsNil(o.ProvisioningConnection) {
		return true
	}

	return false
}

// SetProvisioningConnection gets a reference to the given string and assigns it to the ProvisioningConnection field.
func (o *UpdateSecuritySystemRequest) SetProvisioningConnection(v string) {
	o.ProvisioningConnection = &v
}

// GetServiceDeskConnection returns the ServiceDeskConnection field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetServiceDeskConnection() string {
	if o == nil || IsNil(o.ServiceDeskConnection) {
		var ret string
		return ret
	}
	return *o.ServiceDeskConnection
}

// GetServiceDeskConnectionOk returns a tuple with the ServiceDeskConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetServiceDeskConnectionOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceDeskConnection) {
		return nil, false
	}
	return o.ServiceDeskConnection, true
}

// HasServiceDeskConnection returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasServiceDeskConnection() bool {
	if o != nil && !IsNil(o.ServiceDeskConnection) {
		return true
	}

	return false
}

// SetServiceDeskConnection gets a reference to the given string and assigns it to the ServiceDeskConnection field.
func (o *UpdateSecuritySystemRequest) SetServiceDeskConnection(v string) {
	o.ServiceDeskConnection = &v
}

// GetProvisioningcomments returns the Provisioningcomments field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetProvisioningcomments() string {
	if o == nil || IsNil(o.Provisioningcomments) {
		var ret string
		return ret
	}
	return *o.Provisioningcomments
}

// GetProvisioningcommentsOk returns a tuple with the Provisioningcomments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetProvisioningcommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Provisioningcomments) {
		return nil, false
	}
	return o.Provisioningcomments, true
}

// HasProvisioningcomments returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasProvisioningcomments() bool {
	if o != nil && !IsNil(o.Provisioningcomments) {
		return true
	}

	return false
}

// SetProvisioningcomments gets a reference to the given string and assigns it to the Provisioningcomments field.
func (o *UpdateSecuritySystemRequest) SetProvisioningcomments(v string) {
	o.Provisioningcomments = &v
}

// GetInherentSODReportFields returns the InherentSODReportFields field value if set, zero value otherwise.
func (o *UpdateSecuritySystemRequest) GetInherentSODReportFields() []string {
	if o == nil || IsNil(o.InherentSODReportFields) {
		var ret []string
		return ret
	}
	return o.InherentSODReportFields
}

// GetInherentSODReportFieldsOk returns a tuple with the InherentSODReportFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSecuritySystemRequest) GetInherentSODReportFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.InherentSODReportFields) {
		return nil, false
	}
	return o.InherentSODReportFields, true
}

// HasInherentSODReportFields returns a boolean if a field has been set.
func (o *UpdateSecuritySystemRequest) HasInherentSODReportFields() bool {
	if o != nil && !IsNil(o.InherentSODReportFields) {
		return true
	}

	return false
}

// SetInherentSODReportFields gets a reference to the given []string and assigns it to the InherentSODReportFields field.
func (o *UpdateSecuritySystemRequest) SetInherentSODReportFields(v []string) {
	o.InherentSODReportFields = v
}

func (o UpdateSecuritySystemRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSecuritySystemRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["systemname"] = o.Systemname
	toSerialize["displayName"] = o.DisplayName
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.AccessAddWorkflow) {
		toSerialize["accessAddWorkflow"] = o.AccessAddWorkflow
	}
	if !IsNil(o.AccessRemoveWorkflow) {
		toSerialize["accessRemoveWorkflow"] = o.AccessRemoveWorkflow
	}
	if !IsNil(o.AddServiceAccountWorkflow) {
		toSerialize["addServiceAccountWorkflow"] = o.AddServiceAccountWorkflow
	}
	if !IsNil(o.RemoveServiceAccountWorkflow) {
		toSerialize["removeServiceAccountWorkflow"] = o.RemoveServiceAccountWorkflow
	}
	if !IsNil(o.Connectionparameters) {
		toSerialize["connectionparameters"] = o.Connectionparameters
	}
	if !IsNil(o.ProposedAccountOwnersworkflow) {
		toSerialize["proposedAccountOwnersworkflow"] = o.ProposedAccountOwnersworkflow
	}
	if !IsNil(o.FirefighteridWorkflow) {
		toSerialize["firefighteridWorkflow"] = o.FirefighteridWorkflow
	}
	if !IsNil(o.FirefighteridRequestAccessWorkflow) {
		toSerialize["firefighteridRequestAccessWorkflow"] = o.FirefighteridRequestAccessWorkflow
	}
	if !IsNil(o.AutomatedProvisioning) {
		toSerialize["automatedProvisioning"] = o.AutomatedProvisioning
	}
	if !IsNil(o.Useopenconnector) {
		toSerialize["useopenconnector"] = o.Useopenconnector
	}
	if !IsNil(o.DefaultSystem) {
		toSerialize["defaultSystem"] = o.DefaultSystem
	}
	if !IsNil(o.ReconApplication) {
		toSerialize["reconApplication"] = o.ReconApplication
	}
	if !IsNil(o.Instantprovision) {
		toSerialize["instantprovision"] = o.Instantprovision
	}
	if !IsNil(o.ProvisioningTries) {
		toSerialize["provisioningTries"] = o.ProvisioningTries
	}
	if !IsNil(o.ExternalRiskConnectionJson) {
		toSerialize["externalRiskConnectionJson"] = o.ExternalRiskConnectionJson
	}
	if !IsNil(o.PolicyRule) {
		toSerialize["policyRule"] = o.PolicyRule
	}
	if !IsNil(o.PolicyRuleServiceAccount) {
		toSerialize["policyRuleServiceAccount"] = o.PolicyRuleServiceAccount
	}
	if !IsNil(o.Connectionname) {
		toSerialize["connectionname"] = o.Connectionname
	}
	if !IsNil(o.ProvisioningConnection) {
		toSerialize["provisioningConnection"] = o.ProvisioningConnection
	}
	if !IsNil(o.ServiceDeskConnection) {
		toSerialize["serviceDeskConnection"] = o.ServiceDeskConnection
	}
	if !IsNil(o.Provisioningcomments) {
		toSerialize["provisioningcomments"] = o.Provisioningcomments
	}
	if !IsNil(o.InherentSODReportFields) {
		toSerialize["inherentSODReportFields"] = o.InherentSODReportFields
	}
	return toSerialize, nil
}

func (o *UpdateSecuritySystemRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"systemname",
		"displayName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateSecuritySystemRequest := _UpdateSecuritySystemRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateSecuritySystemRequest)

	if err != nil {
		return err
	}

	*o = UpdateSecuritySystemRequest(varUpdateSecuritySystemRequest)

	return err
}

type NullableUpdateSecuritySystemRequest struct {
	value *UpdateSecuritySystemRequest
	isSet bool
}

func (v NullableUpdateSecuritySystemRequest) Get() *UpdateSecuritySystemRequest {
	return v.value
}

func (v *NullableUpdateSecuritySystemRequest) Set(val *UpdateSecuritySystemRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSecuritySystemRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSecuritySystemRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSecuritySystemRequest(val *UpdateSecuritySystemRequest) *NullableUpdateSecuritySystemRequest {
	return &NullableUpdateSecuritySystemRequest{value: val, isSet: true}
}

func (v NullableUpdateSecuritySystemRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSecuritySystemRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


