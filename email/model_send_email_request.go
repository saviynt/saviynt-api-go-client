/*
Saviynt Email API

Saviynt Email API

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package email

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SendEmailRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendEmailRequest{}

// SendEmailRequest struct for SendEmailRequest
type SendEmailRequest struct {
	To      string  `json:"to"`
	From    string  `json:"from"`
	Subject string  `json:"subject"`
	Body    string  `json:"body"`
	Cc      *string `json:"cc,omitempty"`
	Bcc     *string `json:"bcc,omitempty"`
}

type _SendEmailRequest SendEmailRequest

// NewSendEmailRequest instantiates a new SendEmailRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendEmailRequest(to string, from string, subject string, body string) *SendEmailRequest {
	this := SendEmailRequest{}
	this.To = to
	this.From = from
	this.Subject = subject
	this.Body = body
	return &this
}

// NewSendEmailRequestWithDefaults instantiates a new SendEmailRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendEmailRequestWithDefaults() *SendEmailRequest {
	this := SendEmailRequest{}
	return &this
}

// GetTo returns the To field value
func (o *SendEmailRequest) GetTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *SendEmailRequest) GetToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *SendEmailRequest) SetTo(v string) {
	o.To = v
}

// GetFrom returns the From field value
func (o *SendEmailRequest) GetFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *SendEmailRequest) GetFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *SendEmailRequest) SetFrom(v string) {
	o.From = v
}

// GetSubject returns the Subject field value
func (o *SendEmailRequest) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *SendEmailRequest) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *SendEmailRequest) SetSubject(v string) {
	o.Subject = v
}

// GetBody returns the Body field value
func (o *SendEmailRequest) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *SendEmailRequest) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *SendEmailRequest) SetBody(v string) {
	o.Body = v
}

// GetCc returns the Cc field value if set, zero value otherwise.
func (o *SendEmailRequest) GetCc() string {
	if o == nil || IsNil(o.Cc) {
		var ret string
		return ret
	}
	return *o.Cc
}

// GetCcOk returns a tuple with the Cc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendEmailRequest) GetCcOk() (*string, bool) {
	if o == nil || IsNil(o.Cc) {
		return nil, false
	}
	return o.Cc, true
}

// HasCc returns a boolean if a field has been set.
func (o *SendEmailRequest) HasCc() bool {
	if o != nil && !IsNil(o.Cc) {
		return true
	}

	return false
}

// SetCc gets a reference to the given string and assigns it to the Cc field.
func (o *SendEmailRequest) SetCc(v string) {
	o.Cc = &v
}

// GetBcc returns the Bcc field value if set, zero value otherwise.
func (o *SendEmailRequest) GetBcc() string {
	if o == nil || IsNil(o.Bcc) {
		var ret string
		return ret
	}
	return *o.Bcc
}

// GetBccOk returns a tuple with the Bcc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendEmailRequest) GetBccOk() (*string, bool) {
	if o == nil || IsNil(o.Bcc) {
		return nil, false
	}
	return o.Bcc, true
}

// HasBcc returns a boolean if a field has been set.
func (o *SendEmailRequest) HasBcc() bool {
	if o != nil && !IsNil(o.Bcc) {
		return true
	}

	return false
}

// SetBcc gets a reference to the given string and assigns it to the Bcc field.
func (o *SendEmailRequest) SetBcc(v string) {
	o.Bcc = &v
}

func (o SendEmailRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendEmailRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["to"] = o.To
	toSerialize["from"] = o.From
	toSerialize["subject"] = o.Subject
	toSerialize["body"] = o.Body
	if !IsNil(o.Cc) {
		toSerialize["cc"] = o.Cc
	}
	if !IsNil(o.Bcc) {
		toSerialize["bcc"] = o.Bcc
	}
	return toSerialize, nil
}

func (o *SendEmailRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"to",
		"from",
		"subject",
		"body",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSendEmailRequest := _SendEmailRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSendEmailRequest)

	if err != nil {
		return err
	}

	*o = SendEmailRequest(varSendEmailRequest)

	return err
}

type NullableSendEmailRequest struct {
	value *SendEmailRequest
	isSet bool
}

func (v NullableSendEmailRequest) Get() *SendEmailRequest {
	return v.value
}

func (v *NullableSendEmailRequest) Set(val *SendEmailRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSendEmailRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSendEmailRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendEmailRequest(val *SendEmailRequest) *NullableSendEmailRequest {
	return &NullableSendEmailRequest{value: val, isSet: true}
}

func (v NullableSendEmailRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendEmailRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
