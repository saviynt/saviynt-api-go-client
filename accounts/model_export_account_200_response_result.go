/*
Account Management API

API for managing accounts in Saviynt/SSM. - **Create Account**: Creates a new account record. - **Update Account**: Updates an existing account based on its name. - **Export Account**: Retrieves all existing accounts for a given endpoint and security system. - **Get Account Details**: Returns a list of accounts based on search criteria. - **Assign Account to User**: Provisions an account to a user. - **Assign Entitlement to Account**: Provisions one or more entitlements to an account. - **Remove Entitlement from Account**: Deprovisions one or more entitlements from an account. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExportAccount200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportAccount200ResponseResult{}

// ExportAccount200ResponseResult struct for ExportAccount200ResponseResult
type ExportAccount200ResponseResult struct {
	Total *string `json:"total,omitempty"`
	Accounts []ExportAccount200ResponseResultAccountsInner `json:"accounts,omitempty"`
}

// NewExportAccount200ResponseResult instantiates a new ExportAccount200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportAccount200ResponseResult() *ExportAccount200ResponseResult {
	this := ExportAccount200ResponseResult{}
	return &this
}

// NewExportAccount200ResponseResultWithDefaults instantiates a new ExportAccount200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportAccount200ResponseResultWithDefaults() *ExportAccount200ResponseResult {
	this := ExportAccount200ResponseResult{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *ExportAccount200ResponseResult) GetTotal() string {
	if o == nil || IsNil(o.Total) {
		var ret string
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportAccount200ResponseResult) GetTotalOk() (*string, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *ExportAccount200ResponseResult) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given string and assigns it to the Total field.
func (o *ExportAccount200ResponseResult) SetTotal(v string) {
	o.Total = &v
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *ExportAccount200ResponseResult) GetAccounts() []ExportAccount200ResponseResultAccountsInner {
	if o == nil || IsNil(o.Accounts) {
		var ret []ExportAccount200ResponseResultAccountsInner
		return ret
	}
	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportAccount200ResponseResult) GetAccountsOk() ([]ExportAccount200ResponseResultAccountsInner, bool) {
	if o == nil || IsNil(o.Accounts) {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *ExportAccount200ResponseResult) HasAccounts() bool {
	if o != nil && !IsNil(o.Accounts) {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []ExportAccount200ResponseResultAccountsInner and assigns it to the Accounts field.
func (o *ExportAccount200ResponseResult) SetAccounts(v []ExportAccount200ResponseResultAccountsInner) {
	o.Accounts = v
}

func (o ExportAccount200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportAccount200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.Accounts) {
		toSerialize["accounts"] = o.Accounts
	}
	return toSerialize, nil
}

type NullableExportAccount200ResponseResult struct {
	value *ExportAccount200ResponseResult
	isSet bool
}

func (v NullableExportAccount200ResponseResult) Get() *ExportAccount200ResponseResult {
	return v.value
}

func (v *NullableExportAccount200ResponseResult) Set(val *ExportAccount200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableExportAccount200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableExportAccount200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportAccount200ResponseResult(val *ExportAccount200ResponseResult) *NullableExportAccount200ResponseResult {
	return &NullableExportAccount200ResponseResult{value: val, isSet: true}
}

func (v NullableExportAccount200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportAccount200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


