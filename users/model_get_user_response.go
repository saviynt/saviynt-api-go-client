/*
Saviynt Users API

Saviynt Users API

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package users

import (
	"encoding/json"
)

// checks if the GetUserResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetUserResponse{}

// GetUserResponse struct for GetUserResponse
type GetUserResponse struct {
	Msg          *string `json:"msg,omitempty"`
	Displaycount *string `json:"displaycount,omitempty"`
	Totalcount   *string `json:"totalcount,omitempty"`
	ErrorCode    *string `json:"errorCode,omitempty"`
	Userdetails  []User  `json:"userdetails,omitempty"`
}

// NewGetUserResponse instantiates a new GetUserResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserResponse() *GetUserResponse {
	this := GetUserResponse{}
	return &this
}

// NewGetUserResponseWithDefaults instantiates a new GetUserResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserResponseWithDefaults() *GetUserResponse {
	this := GetUserResponse{}
	return &this
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *GetUserResponse) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserResponse) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *GetUserResponse) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *GetUserResponse) SetMsg(v string) {
	o.Msg = &v
}

// GetDisplaycount returns the Displaycount field value if set, zero value otherwise.
func (o *GetUserResponse) GetDisplaycount() string {
	if o == nil || IsNil(o.Displaycount) {
		var ret string
		return ret
	}
	return *o.Displaycount
}

// GetDisplaycountOk returns a tuple with the Displaycount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserResponse) GetDisplaycountOk() (*string, bool) {
	if o == nil || IsNil(o.Displaycount) {
		return nil, false
	}
	return o.Displaycount, true
}

// HasDisplaycount returns a boolean if a field has been set.
func (o *GetUserResponse) HasDisplaycount() bool {
	if o != nil && !IsNil(o.Displaycount) {
		return true
	}

	return false
}

// SetDisplaycount gets a reference to the given string and assigns it to the Displaycount field.
func (o *GetUserResponse) SetDisplaycount(v string) {
	o.Displaycount = &v
}

// GetTotalcount returns the Totalcount field value if set, zero value otherwise.
func (o *GetUserResponse) GetTotalcount() string {
	if o == nil || IsNil(o.Totalcount) {
		var ret string
		return ret
	}
	return *o.Totalcount
}

// GetTotalcountOk returns a tuple with the Totalcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserResponse) GetTotalcountOk() (*string, bool) {
	if o == nil || IsNil(o.Totalcount) {
		return nil, false
	}
	return o.Totalcount, true
}

// HasTotalcount returns a boolean if a field has been set.
func (o *GetUserResponse) HasTotalcount() bool {
	if o != nil && !IsNil(o.Totalcount) {
		return true
	}

	return false
}

// SetTotalcount gets a reference to the given string and assigns it to the Totalcount field.
func (o *GetUserResponse) SetTotalcount(v string) {
	o.Totalcount = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *GetUserResponse) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserResponse) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *GetUserResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *GetUserResponse) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetUserdetails returns the Userdetails field value if set, zero value otherwise.
func (o *GetUserResponse) GetUserdetails() []User {
	if o == nil || IsNil(o.Userdetails) {
		var ret []User
		return ret
	}
	return o.Userdetails
}

// GetUserdetailsOk returns a tuple with the Userdetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserResponse) GetUserdetailsOk() ([]User, bool) {
	if o == nil || IsNil(o.Userdetails) {
		return nil, false
	}
	return o.Userdetails, true
}

// HasUserdetails returns a boolean if a field has been set.
func (o *GetUserResponse) HasUserdetails() bool {
	if o != nil && !IsNil(o.Userdetails) {
		return true
	}

	return false
}

// SetUserdetails gets a reference to the given []User and assigns it to the Userdetails field.
func (o *GetUserResponse) SetUserdetails(v []User) {
	o.Userdetails = v
}

func (o GetUserResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetUserResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.Displaycount) {
		toSerialize["displaycount"] = o.Displaycount
	}
	if !IsNil(o.Totalcount) {
		toSerialize["totalcount"] = o.Totalcount
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.Userdetails) {
		toSerialize["userdetails"] = o.Userdetails
	}
	return toSerialize, nil
}

type NullableGetUserResponse struct {
	value *GetUserResponse
	isSet bool
}

func (v NullableGetUserResponse) Get() *GetUserResponse {
	return v.value
}

func (v *NullableGetUserResponse) Set(val *GetUserResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserResponse(val *GetUserResponse) *NullableGetUserResponse {
	return &NullableGetUserResponse{value: val, isSet: true}
}

func (v NullableGetUserResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
