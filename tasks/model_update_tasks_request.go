/*
Saviynt Tasks API

Saviynt Tasks API

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tasks

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UpdateTasksRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTasksRequest{}

// UpdateTasksRequest
type UpdateTasksRequest struct {
	TaskKeyToUpdate []UpdateTaskRequestInfo `json:"taskKeyToUpdate"`
	Updateuser      *string                 `json:"updateuser,omitempty"`
}

type _UpdateTasksRequest UpdateTasksRequest

// NewUpdateTasksRequest instantiates a new UpdateTasksRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTasksRequest(taskKeyToUpdate []UpdateTaskRequestInfo) *UpdateTasksRequest {
	this := UpdateTasksRequest{}
	this.TaskKeyToUpdate = taskKeyToUpdate
	return &this
}

// NewUpdateTasksRequestWithDefaults instantiates a new UpdateTasksRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTasksRequestWithDefaults() *UpdateTasksRequest {
	this := UpdateTasksRequest{}
	return &this
}

// GetTaskKeyToUpdate returns the TaskKeyToUpdate field value
func (o *UpdateTasksRequest) GetTaskKeyToUpdate() []UpdateTaskRequestInfo {
	if o == nil {
		var ret []UpdateTaskRequestInfo
		return ret
	}

	return o.TaskKeyToUpdate
}

// GetTaskKeyToUpdateOk returns a tuple with the TaskKeyToUpdate field value
// and a boolean to check if the value has been set.
func (o *UpdateTasksRequest) GetTaskKeyToUpdateOk() ([]UpdateTaskRequestInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaskKeyToUpdate, true
}

// SetTaskKeyToUpdate sets field value
func (o *UpdateTasksRequest) SetTaskKeyToUpdate(v []UpdateTaskRequestInfo) {
	o.TaskKeyToUpdate = v
}

// GetUpdateuser returns the Updateuser field value if set, zero value otherwise.
func (o *UpdateTasksRequest) GetUpdateuser() string {
	if o == nil || IsNil(o.Updateuser) {
		var ret string
		return ret
	}
	return *o.Updateuser
}

// GetUpdateuserOk returns a tuple with the Updateuser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTasksRequest) GetUpdateuserOk() (*string, bool) {
	if o == nil || IsNil(o.Updateuser) {
		return nil, false
	}
	return o.Updateuser, true
}

// HasUpdateuser returns a boolean if a field has been set.
func (o *UpdateTasksRequest) HasUpdateuser() bool {
	if o != nil && !IsNil(o.Updateuser) {
		return true
	}

	return false
}

// SetUpdateuser gets a reference to the given string and assigns it to the Updateuser field.
func (o *UpdateTasksRequest) SetUpdateuser(v string) {
	o.Updateuser = &v
}

func (o UpdateTasksRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTasksRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["taskKeyToUpdate"] = o.TaskKeyToUpdate
	if !IsNil(o.Updateuser) {
		toSerialize["updateuser"] = o.Updateuser
	}
	return toSerialize, nil
}

func (o *UpdateTasksRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"taskKeyToUpdate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateTasksRequest := _UpdateTasksRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateTasksRequest)

	if err != nil {
		return err
	}

	*o = UpdateTasksRequest(varUpdateTasksRequest)

	return err
}

type NullableUpdateTasksRequest struct {
	value *UpdateTasksRequest
	isSet bool
}

func (v NullableUpdateTasksRequest) Get() *UpdateTasksRequest {
	return v.value
}

func (v *NullableUpdateTasksRequest) Set(val *UpdateTasksRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTasksRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTasksRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTasksRequest(val *UpdateTasksRequest) *NullableUpdateTasksRequest {
	return &NullableUpdateTasksRequest{value: val, isSet: true}
}

func (v NullableUpdateTasksRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTasksRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
