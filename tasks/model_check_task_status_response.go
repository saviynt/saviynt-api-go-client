/*
Saviynt Tasks API

Saviynt Tasks API

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tasks

import (
	"encoding/json"
)

// checks if the CheckTaskStatusResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckTaskStatusResponse{}

// CheckTaskStatusResponse
type CheckTaskStatusResponse struct {
	// Can be null or one of the following:  1. `New` 2. `In Progress` 3. `Complete` 4. `Discontinued` 5. `Pending Create` 6. `Pending Provision` 7. `Provisioning Failed` 8. `Error` 9. `No Action Required`
	Status               *string                `json:"Status,omitempty"`
	UpdateDate           *string                `json:"UpdateDate,omitempty"`
	Comments             *string                `json:"Comments,omitempty"`
	ProvisioningComments *string                `json:"ProvisioningComments,omitempty"`
	UpdateUser           *string                `json:"UpdateUser,omitempty"`
	ProvisioningMetadata map[string]interface{} `json:"ProvisioningMetadata,omitempty"`
}

// NewCheckTaskStatusResponse instantiates a new CheckTaskStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckTaskStatusResponse() *CheckTaskStatusResponse {
	this := CheckTaskStatusResponse{}
	return &this
}

// NewCheckTaskStatusResponseWithDefaults instantiates a new CheckTaskStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckTaskStatusResponseWithDefaults() *CheckTaskStatusResponse {
	this := CheckTaskStatusResponse{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CheckTaskStatusResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckTaskStatusResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CheckTaskStatusResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CheckTaskStatusResponse) SetStatus(v string) {
	o.Status = &v
}

// GetUpdateDate returns the UpdateDate field value if set, zero value otherwise.
func (o *CheckTaskStatusResponse) GetUpdateDate() string {
	if o == nil || IsNil(o.UpdateDate) {
		var ret string
		return ret
	}
	return *o.UpdateDate
}

// GetUpdateDateOk returns a tuple with the UpdateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckTaskStatusResponse) GetUpdateDateOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateDate) {
		return nil, false
	}
	return o.UpdateDate, true
}

// HasUpdateDate returns a boolean if a field has been set.
func (o *CheckTaskStatusResponse) HasUpdateDate() bool {
	if o != nil && !IsNil(o.UpdateDate) {
		return true
	}

	return false
}

// SetUpdateDate gets a reference to the given string and assigns it to the UpdateDate field.
func (o *CheckTaskStatusResponse) SetUpdateDate(v string) {
	o.UpdateDate = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *CheckTaskStatusResponse) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckTaskStatusResponse) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *CheckTaskStatusResponse) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *CheckTaskStatusResponse) SetComments(v string) {
	o.Comments = &v
}

// GetProvisioningComments returns the ProvisioningComments field value if set, zero value otherwise.
func (o *CheckTaskStatusResponse) GetProvisioningComments() string {
	if o == nil || IsNil(o.ProvisioningComments) {
		var ret string
		return ret
	}
	return *o.ProvisioningComments
}

// GetProvisioningCommentsOk returns a tuple with the ProvisioningComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckTaskStatusResponse) GetProvisioningCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.ProvisioningComments) {
		return nil, false
	}
	return o.ProvisioningComments, true
}

// HasProvisioningComments returns a boolean if a field has been set.
func (o *CheckTaskStatusResponse) HasProvisioningComments() bool {
	if o != nil && !IsNil(o.ProvisioningComments) {
		return true
	}

	return false
}

// SetProvisioningComments gets a reference to the given string and assigns it to the ProvisioningComments field.
func (o *CheckTaskStatusResponse) SetProvisioningComments(v string) {
	o.ProvisioningComments = &v
}

// GetUpdateUser returns the UpdateUser field value if set, zero value otherwise.
func (o *CheckTaskStatusResponse) GetUpdateUser() string {
	if o == nil || IsNil(o.UpdateUser) {
		var ret string
		return ret
	}
	return *o.UpdateUser
}

// GetUpdateUserOk returns a tuple with the UpdateUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckTaskStatusResponse) GetUpdateUserOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateUser) {
		return nil, false
	}
	return o.UpdateUser, true
}

// HasUpdateUser returns a boolean if a field has been set.
func (o *CheckTaskStatusResponse) HasUpdateUser() bool {
	if o != nil && !IsNil(o.UpdateUser) {
		return true
	}

	return false
}

// SetUpdateUser gets a reference to the given string and assigns it to the UpdateUser field.
func (o *CheckTaskStatusResponse) SetUpdateUser(v string) {
	o.UpdateUser = &v
}

// GetProvisioningMetadata returns the ProvisioningMetadata field value if set, zero value otherwise.
func (o *CheckTaskStatusResponse) GetProvisioningMetadata() map[string]interface{} {
	if o == nil || IsNil(o.ProvisioningMetadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.ProvisioningMetadata
}

// GetProvisioningMetadataOk returns a tuple with the ProvisioningMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckTaskStatusResponse) GetProvisioningMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ProvisioningMetadata) {
		return map[string]interface{}{}, false
	}
	return o.ProvisioningMetadata, true
}

// HasProvisioningMetadata returns a boolean if a field has been set.
func (o *CheckTaskStatusResponse) HasProvisioningMetadata() bool {
	if o != nil && !IsNil(o.ProvisioningMetadata) {
		return true
	}

	return false
}

// SetProvisioningMetadata gets a reference to the given map[string]interface{} and assigns it to the ProvisioningMetadata field.
func (o *CheckTaskStatusResponse) SetProvisioningMetadata(v map[string]interface{}) {
	o.ProvisioningMetadata = v
}

func (o CheckTaskStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckTaskStatusResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !IsNil(o.UpdateDate) {
		toSerialize["UpdateDate"] = o.UpdateDate
	}
	if !IsNil(o.Comments) {
		toSerialize["Comments"] = o.Comments
	}
	if !IsNil(o.ProvisioningComments) {
		toSerialize["ProvisioningComments"] = o.ProvisioningComments
	}
	if !IsNil(o.UpdateUser) {
		toSerialize["UpdateUser"] = o.UpdateUser
	}
	if !IsNil(o.ProvisioningMetadata) {
		toSerialize["ProvisioningMetadata"] = o.ProvisioningMetadata
	}
	return toSerialize, nil
}

type NullableCheckTaskStatusResponse struct {
	value *CheckTaskStatusResponse
	isSet bool
}

func (v NullableCheckTaskStatusResponse) Get() *CheckTaskStatusResponse {
	return v.value
}

func (v *NullableCheckTaskStatusResponse) Set(val *CheckTaskStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckTaskStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckTaskStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckTaskStatusResponse(val *CheckTaskStatusResponse) *NullableCheckTaskStatusResponse {
	return &NullableCheckTaskStatusResponse{value: val, isSet: true}
}

func (v NullableCheckTaskStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckTaskStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
