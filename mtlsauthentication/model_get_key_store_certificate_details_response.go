/*
Saviynt mTLS Authentication API

mTLS Authentication

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mtlsauthentication

import (
	"encoding/json"
)

// checks if the GetKeyStoreCertificateDetailsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetKeyStoreCertificateDetailsResponse{}

// GetKeyStoreCertificateDetailsResponse struct for GetKeyStoreCertificateDetailsResponse
type GetKeyStoreCertificateDetailsResponse struct {
	ErrorCode          *int32              `json:"errorCode,omitempty"`
	Message            *string             `json:"message,omitempty"`
	CertificateDetails []CertificateDetail `json:"certificateDetails,omitempty"`
}

// NewGetKeyStoreCertificateDetailsResponse instantiates a new GetKeyStoreCertificateDetailsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetKeyStoreCertificateDetailsResponse() *GetKeyStoreCertificateDetailsResponse {
	this := GetKeyStoreCertificateDetailsResponse{}
	return &this
}

// NewGetKeyStoreCertificateDetailsResponseWithDefaults instantiates a new GetKeyStoreCertificateDetailsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetKeyStoreCertificateDetailsResponseWithDefaults() *GetKeyStoreCertificateDetailsResponse {
	this := GetKeyStoreCertificateDetailsResponse{}
	return &this
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *GetKeyStoreCertificateDetailsResponse) GetErrorCode() int32 {
	if o == nil || IsNil(o.ErrorCode) {
		var ret int32
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetKeyStoreCertificateDetailsResponse) GetErrorCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *GetKeyStoreCertificateDetailsResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given int32 and assigns it to the ErrorCode field.
func (o *GetKeyStoreCertificateDetailsResponse) SetErrorCode(v int32) {
	o.ErrorCode = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GetKeyStoreCertificateDetailsResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetKeyStoreCertificateDetailsResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *GetKeyStoreCertificateDetailsResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GetKeyStoreCertificateDetailsResponse) SetMessage(v string) {
	o.Message = &v
}

// GetCertificateDetails returns the CertificateDetails field value if set, zero value otherwise.
func (o *GetKeyStoreCertificateDetailsResponse) GetCertificateDetails() []CertificateDetail {
	if o == nil || IsNil(o.CertificateDetails) {
		var ret []CertificateDetail
		return ret
	}
	return o.CertificateDetails
}

// GetCertificateDetailsOk returns a tuple with the CertificateDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetKeyStoreCertificateDetailsResponse) GetCertificateDetailsOk() ([]CertificateDetail, bool) {
	if o == nil || IsNil(o.CertificateDetails) {
		return nil, false
	}
	return o.CertificateDetails, true
}

// HasCertificateDetails returns a boolean if a field has been set.
func (o *GetKeyStoreCertificateDetailsResponse) HasCertificateDetails() bool {
	if o != nil && !IsNil(o.CertificateDetails) {
		return true
	}

	return false
}

// SetCertificateDetails gets a reference to the given []CertificateDetail and assigns it to the CertificateDetails field.
func (o *GetKeyStoreCertificateDetailsResponse) SetCertificateDetails(v []CertificateDetail) {
	o.CertificateDetails = v
}

func (o GetKeyStoreCertificateDetailsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetKeyStoreCertificateDetailsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.CertificateDetails) {
		toSerialize["certificateDetails"] = o.CertificateDetails
	}
	return toSerialize, nil
}

type NullableGetKeyStoreCertificateDetailsResponse struct {
	value *GetKeyStoreCertificateDetailsResponse
	isSet bool
}

func (v NullableGetKeyStoreCertificateDetailsResponse) Get() *GetKeyStoreCertificateDetailsResponse {
	return v.value
}

func (v *NullableGetKeyStoreCertificateDetailsResponse) Set(val *GetKeyStoreCertificateDetailsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetKeyStoreCertificateDetailsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetKeyStoreCertificateDetailsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetKeyStoreCertificateDetailsResponse(val *GetKeyStoreCertificateDetailsResponse) *NullableGetKeyStoreCertificateDetailsResponse {
	return &NullableGetKeyStoreCertificateDetailsResponse{value: val, isSet: true}
}

func (v NullableGetKeyStoreCertificateDetailsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetKeyStoreCertificateDetailsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
