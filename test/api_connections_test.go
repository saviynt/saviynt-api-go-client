/*
Saviynt Connections API

Testing ConnectionsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package test

import (
	"context"
	"fmt"
	"strings"
	"testing"
	"time"

	saviyntapigoclient "github.com/saviynt/saviynt-api-go-client"
	"github.com/saviynt/saviynt-api-go-client/connections"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_connections_ConnectionsAPIService(t *testing.T) {
	apiClient, _, skipTests, skipMsg, err := client()
	require.Nil(t, err)

	ctx := context.Background()

	t.Run("Test ConnectionsAPIService TestConnection", func(t *testing.T) {
		if skipTests && strings.TrimSpace(skipMsg) != "" {
			t.Skip(skipMsg)
		} else if skipTests {
			t.Skip(MsgSkipTest)
		}
		connName := "hellow1"
		adConn := connections.ADConnector{
			BaseConnector: connections.BaseConnector{
				Connectiontype: "AD",
				ConnectionName: connName,
				Description:    saviyntapigoclient.Pointer("Updated at " + time.Now().UTC().Format(time.RFC3339)),
			},
			URL:      stringPtr("ldap://test-ad.example.com"),
			USERNAME: stringPtr("admin"),
			PASSWORD: "MyOffice12#",
		}

		testConnReq := connections.TestConnectionRequest{
			ADConnector: &adConn,
		}

		req := apiClient.Connections.TestConnection(ctx).TestConnectionRequest(testConnReq)

		resp, httpRes, err := req.Execute()
		fmt.Printf("Response: %+v\n", resp)

		require.Nil(t, err)
		require.NotNil(t, httpRes)
		assert.Equal(t, 200, httpRes.StatusCode)
		assert.Equal(t, "0", *resp.ErrorCode)
	})
}

// Helper function to return a pointer to a string
func stringPtr(s string) *string {
	return &s
}
