/*
Saviynt Endpoints API

Saviynt Endpoints API

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpoints

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateEndpointResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateEndpointResponse{}

// UpdateEndpointResponse struct for UpdateEndpointResponse
type UpdateEndpointResponse struct {
	Msg string `json:"msg"`
	ErrorCode string `json:"errorCode"`
}

type _UpdateEndpointResponse UpdateEndpointResponse

// NewUpdateEndpointResponse instantiates a new UpdateEndpointResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateEndpointResponse(msg string, errorCode string) *UpdateEndpointResponse {
	this := UpdateEndpointResponse{}
	this.Msg = msg
	this.ErrorCode = errorCode
	return &this
}

// NewUpdateEndpointResponseWithDefaults instantiates a new UpdateEndpointResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateEndpointResponseWithDefaults() *UpdateEndpointResponse {
	this := UpdateEndpointResponse{}
	return &this
}

// GetMsg returns the Msg field value
func (o *UpdateEndpointResponse) GetMsg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Msg
}

// GetMsgOk returns a tuple with the Msg field value
// and a boolean to check if the value has been set.
func (o *UpdateEndpointResponse) GetMsgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Msg, true
}

// SetMsg sets field value
func (o *UpdateEndpointResponse) SetMsg(v string) {
	o.Msg = v
}

// GetErrorCode returns the ErrorCode field value
func (o *UpdateEndpointResponse) GetErrorCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value
// and a boolean to check if the value has been set.
func (o *UpdateEndpointResponse) GetErrorCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorCode, true
}

// SetErrorCode sets field value
func (o *UpdateEndpointResponse) SetErrorCode(v string) {
	o.ErrorCode = v
}

func (o UpdateEndpointResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateEndpointResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["msg"] = o.Msg
	toSerialize["errorCode"] = o.ErrorCode
	return toSerialize, nil
}

func (o *UpdateEndpointResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"msg",
		"errorCode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateEndpointResponse := _UpdateEndpointResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateEndpointResponse)

	if err != nil {
		return err
	}

	*o = UpdateEndpointResponse(varUpdateEndpointResponse)

	return err
}

type NullableUpdateEndpointResponse struct {
	value *UpdateEndpointResponse
	isSet bool
}

func (v NullableUpdateEndpointResponse) Get() *UpdateEndpointResponse {
	return v.value
}

func (v *NullableUpdateEndpointResponse) Set(val *UpdateEndpointResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateEndpointResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateEndpointResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateEndpointResponse(val *UpdateEndpointResponse) *NullableUpdateEndpointResponse {
	return &NullableUpdateEndpointResponse{value: val, isSet: true}
}

func (v NullableUpdateEndpointResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateEndpointResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


