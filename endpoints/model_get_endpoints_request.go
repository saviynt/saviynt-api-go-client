/*
Saviynt Endpoints API

Saviynt Endpoints API

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpoints

import (
	"encoding/json"
)

// checks if the GetEndpointsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEndpointsRequest{}

// GetEndpointsRequest struct for GetEndpointsRequest
type GetEndpointsRequest struct {
	// Filter by connection type
	ConnectionType *string `json:"connectionType,omitempty"`
	// Filter by endpoint key(s)
	Endpointkey []int32 `json:"endpointkey,omitempty"`
	// Filter by endpoint name
	Endpointname *string `json:"endpointname,omitempty"`
	// Maximum number of results to return. Maximium is 500.
	Max *int32 `json:"max,omitempty"`
	// Pagination offset
	Offset *int32 `json:"offset,omitempty"`
	// Custom filter criteria
	FilterCriteria map[string]interface{} `json:"filterCriteria,omitempty"`
}

// NewGetEndpointsRequest instantiates a new GetEndpointsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEndpointsRequest() *GetEndpointsRequest {
	this := GetEndpointsRequest{}
	return &this
}

// NewGetEndpointsRequestWithDefaults instantiates a new GetEndpointsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEndpointsRequestWithDefaults() *GetEndpointsRequest {
	this := GetEndpointsRequest{}
	return &this
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *GetEndpointsRequest) GetConnectionType() string {
	if o == nil || IsNil(o.ConnectionType) {
		var ret string
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpointsRequest) GetConnectionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionType) {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *GetEndpointsRequest) HasConnectionType() bool {
	if o != nil && !IsNil(o.ConnectionType) {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given string and assigns it to the ConnectionType field.
func (o *GetEndpointsRequest) SetConnectionType(v string) {
	o.ConnectionType = &v
}

// GetEndpointkey returns the Endpointkey field value if set, zero value otherwise.
func (o *GetEndpointsRequest) GetEndpointkey() []int32 {
	if o == nil || IsNil(o.Endpointkey) {
		var ret []int32
		return ret
	}
	return o.Endpointkey
}

// GetEndpointkeyOk returns a tuple with the Endpointkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpointsRequest) GetEndpointkeyOk() ([]int32, bool) {
	if o == nil || IsNil(o.Endpointkey) {
		return nil, false
	}
	return o.Endpointkey, true
}

// HasEndpointkey returns a boolean if a field has been set.
func (o *GetEndpointsRequest) HasEndpointkey() bool {
	if o != nil && !IsNil(o.Endpointkey) {
		return true
	}

	return false
}

// SetEndpointkey gets a reference to the given []int32 and assigns it to the Endpointkey field.
func (o *GetEndpointsRequest) SetEndpointkey(v []int32) {
	o.Endpointkey = v
}

// GetEndpointname returns the Endpointname field value if set, zero value otherwise.
func (o *GetEndpointsRequest) GetEndpointname() string {
	if o == nil || IsNil(o.Endpointname) {
		var ret string
		return ret
	}
	return *o.Endpointname
}

// GetEndpointnameOk returns a tuple with the Endpointname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpointsRequest) GetEndpointnameOk() (*string, bool) {
	if o == nil || IsNil(o.Endpointname) {
		return nil, false
	}
	return o.Endpointname, true
}

// HasEndpointname returns a boolean if a field has been set.
func (o *GetEndpointsRequest) HasEndpointname() bool {
	if o != nil && !IsNil(o.Endpointname) {
		return true
	}

	return false
}

// SetEndpointname gets a reference to the given string and assigns it to the Endpointname field.
func (o *GetEndpointsRequest) SetEndpointname(v string) {
	o.Endpointname = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *GetEndpointsRequest) GetMax() int32 {
	if o == nil || IsNil(o.Max) {
		var ret int32
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpointsRequest) GetMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *GetEndpointsRequest) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given int32 and assigns it to the Max field.
func (o *GetEndpointsRequest) SetMax(v int32) {
	o.Max = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *GetEndpointsRequest) GetOffset() int32 {
	if o == nil || IsNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpointsRequest) GetOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *GetEndpointsRequest) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *GetEndpointsRequest) SetOffset(v int32) {
	o.Offset = &v
}

// GetFilterCriteria returns the FilterCriteria field value if set, zero value otherwise.
func (o *GetEndpointsRequest) GetFilterCriteria() map[string]interface{} {
	if o == nil || IsNil(o.FilterCriteria) {
		var ret map[string]interface{}
		return ret
	}
	return o.FilterCriteria
}

// GetFilterCriteriaOk returns a tuple with the FilterCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpointsRequest) GetFilterCriteriaOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.FilterCriteria) {
		return map[string]interface{}{}, false
	}
	return o.FilterCriteria, true
}

// HasFilterCriteria returns a boolean if a field has been set.
func (o *GetEndpointsRequest) HasFilterCriteria() bool {
	if o != nil && !IsNil(o.FilterCriteria) {
		return true
	}

	return false
}

// SetFilterCriteria gets a reference to the given map[string]interface{} and assigns it to the FilterCriteria field.
func (o *GetEndpointsRequest) SetFilterCriteria(v map[string]interface{}) {
	o.FilterCriteria = v
}

func (o GetEndpointsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEndpointsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectionType) {
		toSerialize["connectionType"] = o.ConnectionType
	}
	if !IsNil(o.Endpointkey) {
		toSerialize["endpointkey"] = o.Endpointkey
	}
	if !IsNil(o.Endpointname) {
		toSerialize["endpointname"] = o.Endpointname
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !IsNil(o.FilterCriteria) {
		toSerialize["filterCriteria"] = o.FilterCriteria
	}
	return toSerialize, nil
}

type NullableGetEndpointsRequest struct {
	value *GetEndpointsRequest
	isSet bool
}

func (v NullableGetEndpointsRequest) Get() *GetEndpointsRequest {
	return v.value
}

func (v *NullableGetEndpointsRequest) Set(val *GetEndpointsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEndpointsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEndpointsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEndpointsRequest(val *GetEndpointsRequest) *NullableGetEndpointsRequest {
	return &NullableGetEndpointsRequest{value: val, isSet: true}
}

func (v NullableGetEndpointsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEndpointsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


