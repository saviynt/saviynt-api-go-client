/*
Account Management API

API for managing accounts in Saviynt/SSM. - **Create Endpoint**: Creates a new endpoint. - **Update Endpoint**: Updates an existing endpoint based on its name and roletype. - **Get Endpoint List**: Returns a list of endpoints based on search criteria.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpoints

import (
	"encoding/json"
)

// checks if the GetEndpointsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEndpointsRequest{}

// GetEndpointsRequest struct for GetEndpointsRequest
type GetEndpointsRequest struct {
	// Specify a name for the endpoint. Provide a logical name that will help you easily identify it.
	Endpointname *string `json:"endpointname,omitempty"`
	//  Enter a user-friendly display name for the endpoint that will be displayed in the user interface. Display Name can be different from Endpoint Name.
	DisplayName *string `json:"displayName,omitempty"`
	// Specify the Security system for which you want to create an endpoint.
	ConnectionType *string `json:"connectionType,omitempty"`
	// Endpoint key. Spcify the key(s) in array
	Endpointkey *string `json:"endpointkey,omitempty"`
	// Description for the endpoint.
	Max *string `json:"max,omitempty"`
	// Owner of the endpoint. If ownerType is User, specify the username of the owner. If ownerType is Usergroup, sepecify the name of the User group
	Owner          *string                `json:"owner,omitempty"`
	FilterCriteria map[string]interface{} `json:"filterCriteria,omitempty"`
}

// NewGetEndpointsRequest instantiates a new GetEndpointsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEndpointsRequest() *GetEndpointsRequest {
	this := GetEndpointsRequest{}
	return &this
}

// NewGetEndpointsRequestWithDefaults instantiates a new GetEndpointsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEndpointsRequestWithDefaults() *GetEndpointsRequest {
	this := GetEndpointsRequest{}
	return &this
}

// GetEndpointname returns the Endpointname field value if set, zero value otherwise.
func (o *GetEndpointsRequest) GetEndpointname() string {
	if o == nil || IsNil(o.Endpointname) {
		var ret string
		return ret
	}
	return *o.Endpointname
}

// GetEndpointnameOk returns a tuple with the Endpointname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpointsRequest) GetEndpointnameOk() (*string, bool) {
	if o == nil || IsNil(o.Endpointname) {
		return nil, false
	}
	return o.Endpointname, true
}

// HasEndpointname returns a boolean if a field has been set.
func (o *GetEndpointsRequest) HasEndpointname() bool {
	if o != nil && !IsNil(o.Endpointname) {
		return true
	}

	return false
}

// SetEndpointname gets a reference to the given string and assigns it to the Endpointname field.
func (o *GetEndpointsRequest) SetEndpointname(v string) {
	o.Endpointname = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *GetEndpointsRequest) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpointsRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *GetEndpointsRequest) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *GetEndpointsRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *GetEndpointsRequest) GetConnectionType() string {
	if o == nil || IsNil(o.ConnectionType) {
		var ret string
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpointsRequest) GetConnectionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionType) {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *GetEndpointsRequest) HasConnectionType() bool {
	if o != nil && !IsNil(o.ConnectionType) {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given string and assigns it to the ConnectionType field.
func (o *GetEndpointsRequest) SetConnectionType(v string) {
	o.ConnectionType = &v
}

// GetEndpointkey returns the Endpointkey field value if set, zero value otherwise.
func (o *GetEndpointsRequest) GetEndpointkey() string {
	if o == nil || IsNil(o.Endpointkey) {
		var ret string
		return ret
	}
	return *o.Endpointkey
}

// GetEndpointkeyOk returns a tuple with the Endpointkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpointsRequest) GetEndpointkeyOk() (*string, bool) {
	if o == nil || IsNil(o.Endpointkey) {
		return nil, false
	}
	return o.Endpointkey, true
}

// HasEndpointkey returns a boolean if a field has been set.
func (o *GetEndpointsRequest) HasEndpointkey() bool {
	if o != nil && !IsNil(o.Endpointkey) {
		return true
	}

	return false
}

// SetEndpointkey gets a reference to the given string and assigns it to the Endpointkey field.
func (o *GetEndpointsRequest) SetEndpointkey(v string) {
	o.Endpointkey = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *GetEndpointsRequest) GetMax() string {
	if o == nil || IsNil(o.Max) {
		var ret string
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpointsRequest) GetMaxOk() (*string, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *GetEndpointsRequest) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given string and assigns it to the Max field.
func (o *GetEndpointsRequest) SetMax(v string) {
	o.Max = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *GetEndpointsRequest) GetOwner() string {
	if o == nil || IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpointsRequest) GetOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *GetEndpointsRequest) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *GetEndpointsRequest) SetOwner(v string) {
	o.Owner = &v
}

// GetFilterCriteria returns the FilterCriteria field value if set, zero value otherwise.
func (o *GetEndpointsRequest) GetFilterCriteria() map[string]interface{} {
	if o == nil || IsNil(o.FilterCriteria) {
		var ret map[string]interface{}
		return ret
	}
	return o.FilterCriteria
}

// GetFilterCriteriaOk returns a tuple with the FilterCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpointsRequest) GetFilterCriteriaOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.FilterCriteria) {
		return map[string]interface{}{}, false
	}
	return o.FilterCriteria, true
}

// HasFilterCriteria returns a boolean if a field has been set.
func (o *GetEndpointsRequest) HasFilterCriteria() bool {
	if o != nil && !IsNil(o.FilterCriteria) {
		return true
	}

	return false
}

// SetFilterCriteria gets a reference to the given map[string]interface{} and assigns it to the FilterCriteria field.
func (o *GetEndpointsRequest) SetFilterCriteria(v map[string]interface{}) {
	o.FilterCriteria = v
}

func (o GetEndpointsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEndpointsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Endpointname) {
		toSerialize["endpointname"] = o.Endpointname
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.ConnectionType) {
		toSerialize["connectionType"] = o.ConnectionType
	}
	if !IsNil(o.Endpointkey) {
		toSerialize["endpointkey"] = o.Endpointkey
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.FilterCriteria) {
		toSerialize["filterCriteria"] = o.FilterCriteria
	}
	return toSerialize, nil
}

type NullableGetEndpointsRequest struct {
	value *GetEndpointsRequest
	isSet bool
}

func (v NullableGetEndpointsRequest) Get() *GetEndpointsRequest {
	return v.value
}

func (v *NullableGetEndpointsRequest) Set(val *GetEndpointsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEndpointsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEndpointsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEndpointsRequest(val *GetEndpointsRequest) *NullableGetEndpointsRequest {
	return &NullableGetEndpointsRequest{value: val, isSet: true}
}

func (v NullableGetEndpointsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEndpointsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
