/*
Saviynt Endpoints API

Saviynt Endpoints API

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpoints

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateEndpointRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateEndpointRequest{}

// UpdateEndpointRequest struct for UpdateEndpointRequest
type UpdateEndpointRequest struct {
	// Access query
	Accessquery *string `json:"accessquery,omitempty"`
	AccountNameRule *string `json:"accountNameRule,omitempty"`
	// Flag to block inflight requests
	BlockInflightRequest *string `json:"blockInflightRequest,omitempty"`
	// Connection configuration in JSON format (escaped). Supports valid case-senstive string values such as “None”, “DropDownSingle”, “Table”, and “TableOnlyAdd”
	Connectionconfig *string `json:"connectionconfig,omitempty"`
	// Flag to create enterprise task for remove account
	CreateEntTaskforRemoveAcc *string `json:"createEntTaskforRemoveAcc,omitempty"`
	// Description of the endpoint
	Description *string `json:"description,omitempty"`
	// Flag to disable modify account functionality
	DisableModifyAccount *string `json:"disableModifyAccount,omitempty"`
	// Flag to disable new account request if account exists
	DisableNewAccountRequestIfAccountExists *string `json:"disableNewAccountRequestIfAccountExists,omitempty"`
	// Flag to disable remove account functionality
	DisableRemoveAccount *string `json:"disableRemoveAccount,omitempty"`
	// Name displayed in the user interface
	DisplayName *string `json:"displayName,omitempty"`
	// Flag to enable copy access
	EnableCopyAccess *string `json:"enableCopyAccess,omitempty"`
	// Name of the endpoint to update
	Endpointname string `json:"endpointname"`
	// Owner identifier
	Owner *string `json:"owner,omitempty"`
	// Type of owner
	OwnerType *string `json:"ownerType,omitempty"`
	RequestOption *string `json:"requestOption,omitempty"`
	// Supports valid boolean values are true and falserequestedQuery/selectedQuery Supports string values in double quotes
	Required *string `json:"required,omitempty"`
	// Resource owner identifier
	ResourceOwner *string `json:"resourceOwner,omitempty"`
	// Type of resource owner
	ResourceOwnerType *string `json:"resourceOwnerType,omitempty"`
	// Configuration for requestable role types (available from v23.9)
	RequestableRoleType []UpdateEndpointRequestRequestableRoleTypeInner `json:"requestableRoleType,omitempty"`
	// Supports valid case-senstive string values such as “Enabler”, “Transactional”, “EmergencyAccess”, “Enterprise”, and “Application”
	RoleType *string `json:"roleType,omitempty"`
	// Security system that encapsulates the endpoint
	Securitysystem *string `json:"securitysystem,omitempty"`
	// Supports valid case-sensitive string values such as “All”, “ShowOnApplicationRequest”, and “ShowOnServiceAccountRequest”. specify the value to display the roles on Application Requests, Service Account Requests, or both. This parameter is available from the Release v24.6 onwards.
	ShowOn *string `json:"showOn,omitempty"`
	// Rule for correlating users to accounts
	UserAccountCorrelationRule *string `json:"userAccountCorrelationRule,omitempty"`
}

type _UpdateEndpointRequest UpdateEndpointRequest

// NewUpdateEndpointRequest instantiates a new UpdateEndpointRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateEndpointRequest(endpointname string) *UpdateEndpointRequest {
	this := UpdateEndpointRequest{}
	this.Endpointname = endpointname
	return &this
}

// NewUpdateEndpointRequestWithDefaults instantiates a new UpdateEndpointRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateEndpointRequestWithDefaults() *UpdateEndpointRequest {
	this := UpdateEndpointRequest{}
	return &this
}

// GetAccessquery returns the Accessquery field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetAccessquery() string {
	if o == nil || IsNil(o.Accessquery) {
		var ret string
		return ret
	}
	return *o.Accessquery
}

// GetAccessqueryOk returns a tuple with the Accessquery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetAccessqueryOk() (*string, bool) {
	if o == nil || IsNil(o.Accessquery) {
		return nil, false
	}
	return o.Accessquery, true
}

// HasAccessquery returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasAccessquery() bool {
	if o != nil && !IsNil(o.Accessquery) {
		return true
	}

	return false
}

// SetAccessquery gets a reference to the given string and assigns it to the Accessquery field.
func (o *UpdateEndpointRequest) SetAccessquery(v string) {
	o.Accessquery = &v
}

// GetAccountNameRule returns the AccountNameRule field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetAccountNameRule() string {
	if o == nil || IsNil(o.AccountNameRule) {
		var ret string
		return ret
	}
	return *o.AccountNameRule
}

// GetAccountNameRuleOk returns a tuple with the AccountNameRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetAccountNameRuleOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNameRule) {
		return nil, false
	}
	return o.AccountNameRule, true
}

// HasAccountNameRule returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasAccountNameRule() bool {
	if o != nil && !IsNil(o.AccountNameRule) {
		return true
	}

	return false
}

// SetAccountNameRule gets a reference to the given string and assigns it to the AccountNameRule field.
func (o *UpdateEndpointRequest) SetAccountNameRule(v string) {
	o.AccountNameRule = &v
}

// GetBlockInflightRequest returns the BlockInflightRequest field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetBlockInflightRequest() string {
	if o == nil || IsNil(o.BlockInflightRequest) {
		var ret string
		return ret
	}
	return *o.BlockInflightRequest
}

// GetBlockInflightRequestOk returns a tuple with the BlockInflightRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetBlockInflightRequestOk() (*string, bool) {
	if o == nil || IsNil(o.BlockInflightRequest) {
		return nil, false
	}
	return o.BlockInflightRequest, true
}

// HasBlockInflightRequest returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasBlockInflightRequest() bool {
	if o != nil && !IsNil(o.BlockInflightRequest) {
		return true
	}

	return false
}

// SetBlockInflightRequest gets a reference to the given string and assigns it to the BlockInflightRequest field.
func (o *UpdateEndpointRequest) SetBlockInflightRequest(v string) {
	o.BlockInflightRequest = &v
}

// GetConnectionconfig returns the Connectionconfig field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetConnectionconfig() string {
	if o == nil || IsNil(o.Connectionconfig) {
		var ret string
		return ret
	}
	return *o.Connectionconfig
}

// GetConnectionconfigOk returns a tuple with the Connectionconfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetConnectionconfigOk() (*string, bool) {
	if o == nil || IsNil(o.Connectionconfig) {
		return nil, false
	}
	return o.Connectionconfig, true
}

// HasConnectionconfig returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasConnectionconfig() bool {
	if o != nil && !IsNil(o.Connectionconfig) {
		return true
	}

	return false
}

// SetConnectionconfig gets a reference to the given string and assigns it to the Connectionconfig field.
func (o *UpdateEndpointRequest) SetConnectionconfig(v string) {
	o.Connectionconfig = &v
}

// GetCreateEntTaskforRemoveAcc returns the CreateEntTaskforRemoveAcc field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetCreateEntTaskforRemoveAcc() string {
	if o == nil || IsNil(o.CreateEntTaskforRemoveAcc) {
		var ret string
		return ret
	}
	return *o.CreateEntTaskforRemoveAcc
}

// GetCreateEntTaskforRemoveAccOk returns a tuple with the CreateEntTaskforRemoveAcc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetCreateEntTaskforRemoveAccOk() (*string, bool) {
	if o == nil || IsNil(o.CreateEntTaskforRemoveAcc) {
		return nil, false
	}
	return o.CreateEntTaskforRemoveAcc, true
}

// HasCreateEntTaskforRemoveAcc returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasCreateEntTaskforRemoveAcc() bool {
	if o != nil && !IsNil(o.CreateEntTaskforRemoveAcc) {
		return true
	}

	return false
}

// SetCreateEntTaskforRemoveAcc gets a reference to the given string and assigns it to the CreateEntTaskforRemoveAcc field.
func (o *UpdateEndpointRequest) SetCreateEntTaskforRemoveAcc(v string) {
	o.CreateEntTaskforRemoveAcc = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateEndpointRequest) SetDescription(v string) {
	o.Description = &v
}

// GetDisableModifyAccount returns the DisableModifyAccount field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetDisableModifyAccount() string {
	if o == nil || IsNil(o.DisableModifyAccount) {
		var ret string
		return ret
	}
	return *o.DisableModifyAccount
}

// GetDisableModifyAccountOk returns a tuple with the DisableModifyAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetDisableModifyAccountOk() (*string, bool) {
	if o == nil || IsNil(o.DisableModifyAccount) {
		return nil, false
	}
	return o.DisableModifyAccount, true
}

// HasDisableModifyAccount returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasDisableModifyAccount() bool {
	if o != nil && !IsNil(o.DisableModifyAccount) {
		return true
	}

	return false
}

// SetDisableModifyAccount gets a reference to the given string and assigns it to the DisableModifyAccount field.
func (o *UpdateEndpointRequest) SetDisableModifyAccount(v string) {
	o.DisableModifyAccount = &v
}

// GetDisableNewAccountRequestIfAccountExists returns the DisableNewAccountRequestIfAccountExists field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetDisableNewAccountRequestIfAccountExists() string {
	if o == nil || IsNil(o.DisableNewAccountRequestIfAccountExists) {
		var ret string
		return ret
	}
	return *o.DisableNewAccountRequestIfAccountExists
}

// GetDisableNewAccountRequestIfAccountExistsOk returns a tuple with the DisableNewAccountRequestIfAccountExists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetDisableNewAccountRequestIfAccountExistsOk() (*string, bool) {
	if o == nil || IsNil(o.DisableNewAccountRequestIfAccountExists) {
		return nil, false
	}
	return o.DisableNewAccountRequestIfAccountExists, true
}

// HasDisableNewAccountRequestIfAccountExists returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasDisableNewAccountRequestIfAccountExists() bool {
	if o != nil && !IsNil(o.DisableNewAccountRequestIfAccountExists) {
		return true
	}

	return false
}

// SetDisableNewAccountRequestIfAccountExists gets a reference to the given string and assigns it to the DisableNewAccountRequestIfAccountExists field.
func (o *UpdateEndpointRequest) SetDisableNewAccountRequestIfAccountExists(v string) {
	o.DisableNewAccountRequestIfAccountExists = &v
}

// GetDisableRemoveAccount returns the DisableRemoveAccount field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetDisableRemoveAccount() string {
	if o == nil || IsNil(o.DisableRemoveAccount) {
		var ret string
		return ret
	}
	return *o.DisableRemoveAccount
}

// GetDisableRemoveAccountOk returns a tuple with the DisableRemoveAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetDisableRemoveAccountOk() (*string, bool) {
	if o == nil || IsNil(o.DisableRemoveAccount) {
		return nil, false
	}
	return o.DisableRemoveAccount, true
}

// HasDisableRemoveAccount returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasDisableRemoveAccount() bool {
	if o != nil && !IsNil(o.DisableRemoveAccount) {
		return true
	}

	return false
}

// SetDisableRemoveAccount gets a reference to the given string and assigns it to the DisableRemoveAccount field.
func (o *UpdateEndpointRequest) SetDisableRemoveAccount(v string) {
	o.DisableRemoveAccount = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *UpdateEndpointRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetEnableCopyAccess returns the EnableCopyAccess field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetEnableCopyAccess() string {
	if o == nil || IsNil(o.EnableCopyAccess) {
		var ret string
		return ret
	}
	return *o.EnableCopyAccess
}

// GetEnableCopyAccessOk returns a tuple with the EnableCopyAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetEnableCopyAccessOk() (*string, bool) {
	if o == nil || IsNil(o.EnableCopyAccess) {
		return nil, false
	}
	return o.EnableCopyAccess, true
}

// HasEnableCopyAccess returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasEnableCopyAccess() bool {
	if o != nil && !IsNil(o.EnableCopyAccess) {
		return true
	}

	return false
}

// SetEnableCopyAccess gets a reference to the given string and assigns it to the EnableCopyAccess field.
func (o *UpdateEndpointRequest) SetEnableCopyAccess(v string) {
	o.EnableCopyAccess = &v
}

// GetEndpointname returns the Endpointname field value
func (o *UpdateEndpointRequest) GetEndpointname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Endpointname
}

// GetEndpointnameOk returns a tuple with the Endpointname field value
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetEndpointnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpointname, true
}

// SetEndpointname sets field value
func (o *UpdateEndpointRequest) SetEndpointname(v string) {
	o.Endpointname = v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetOwner() string {
	if o == nil || IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *UpdateEndpointRequest) SetOwner(v string) {
	o.Owner = &v
}

// GetOwnerType returns the OwnerType field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetOwnerType() string {
	if o == nil || IsNil(o.OwnerType) {
		var ret string
		return ret
	}
	return *o.OwnerType
}

// GetOwnerTypeOk returns a tuple with the OwnerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetOwnerTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerType) {
		return nil, false
	}
	return o.OwnerType, true
}

// HasOwnerType returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasOwnerType() bool {
	if o != nil && !IsNil(o.OwnerType) {
		return true
	}

	return false
}

// SetOwnerType gets a reference to the given string and assigns it to the OwnerType field.
func (o *UpdateEndpointRequest) SetOwnerType(v string) {
	o.OwnerType = &v
}

// GetRequestOption returns the RequestOption field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetRequestOption() string {
	if o == nil || IsNil(o.RequestOption) {
		var ret string
		return ret
	}
	return *o.RequestOption
}

// GetRequestOptionOk returns a tuple with the RequestOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetRequestOptionOk() (*string, bool) {
	if o == nil || IsNil(o.RequestOption) {
		return nil, false
	}
	return o.RequestOption, true
}

// HasRequestOption returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasRequestOption() bool {
	if o != nil && !IsNil(o.RequestOption) {
		return true
	}

	return false
}

// SetRequestOption gets a reference to the given string and assigns it to the RequestOption field.
func (o *UpdateEndpointRequest) SetRequestOption(v string) {
	o.RequestOption = &v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetRequired() string {
	if o == nil || IsNil(o.Required) {
		var ret string
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetRequiredOk() (*string, bool) {
	if o == nil || IsNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasRequired() bool {
	if o != nil && !IsNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given string and assigns it to the Required field.
func (o *UpdateEndpointRequest) SetRequired(v string) {
	o.Required = &v
}

// GetResourceOwner returns the ResourceOwner field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetResourceOwner() string {
	if o == nil || IsNil(o.ResourceOwner) {
		var ret string
		return ret
	}
	return *o.ResourceOwner
}

// GetResourceOwnerOk returns a tuple with the ResourceOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetResourceOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceOwner) {
		return nil, false
	}
	return o.ResourceOwner, true
}

// HasResourceOwner returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasResourceOwner() bool {
	if o != nil && !IsNil(o.ResourceOwner) {
		return true
	}

	return false
}

// SetResourceOwner gets a reference to the given string and assigns it to the ResourceOwner field.
func (o *UpdateEndpointRequest) SetResourceOwner(v string) {
	o.ResourceOwner = &v
}

// GetResourceOwnerType returns the ResourceOwnerType field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetResourceOwnerType() string {
	if o == nil || IsNil(o.ResourceOwnerType) {
		var ret string
		return ret
	}
	return *o.ResourceOwnerType
}

// GetResourceOwnerTypeOk returns a tuple with the ResourceOwnerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetResourceOwnerTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceOwnerType) {
		return nil, false
	}
	return o.ResourceOwnerType, true
}

// HasResourceOwnerType returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasResourceOwnerType() bool {
	if o != nil && !IsNil(o.ResourceOwnerType) {
		return true
	}

	return false
}

// SetResourceOwnerType gets a reference to the given string and assigns it to the ResourceOwnerType field.
func (o *UpdateEndpointRequest) SetResourceOwnerType(v string) {
	o.ResourceOwnerType = &v
}

// GetRequestableRoleType returns the RequestableRoleType field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetRequestableRoleType() []UpdateEndpointRequestRequestableRoleTypeInner {
	if o == nil || IsNil(o.RequestableRoleType) {
		var ret []UpdateEndpointRequestRequestableRoleTypeInner
		return ret
	}
	return o.RequestableRoleType
}

// GetRequestableRoleTypeOk returns a tuple with the RequestableRoleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetRequestableRoleTypeOk() ([]UpdateEndpointRequestRequestableRoleTypeInner, bool) {
	if o == nil || IsNil(o.RequestableRoleType) {
		return nil, false
	}
	return o.RequestableRoleType, true
}

// HasRequestableRoleType returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasRequestableRoleType() bool {
	if o != nil && !IsNil(o.RequestableRoleType) {
		return true
	}

	return false
}

// SetRequestableRoleType gets a reference to the given []UpdateEndpointRequestRequestableRoleTypeInner and assigns it to the RequestableRoleType field.
func (o *UpdateEndpointRequest) SetRequestableRoleType(v []UpdateEndpointRequestRequestableRoleTypeInner) {
	o.RequestableRoleType = v
}

// GetRoleType returns the RoleType field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetRoleType() string {
	if o == nil || IsNil(o.RoleType) {
		var ret string
		return ret
	}
	return *o.RoleType
}

// GetRoleTypeOk returns a tuple with the RoleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetRoleTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoleType) {
		return nil, false
	}
	return o.RoleType, true
}

// HasRoleType returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasRoleType() bool {
	if o != nil && !IsNil(o.RoleType) {
		return true
	}

	return false
}

// SetRoleType gets a reference to the given string and assigns it to the RoleType field.
func (o *UpdateEndpointRequest) SetRoleType(v string) {
	o.RoleType = &v
}

// GetSecuritysystem returns the Securitysystem field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetSecuritysystem() string {
	if o == nil || IsNil(o.Securitysystem) {
		var ret string
		return ret
	}
	return *o.Securitysystem
}

// GetSecuritysystemOk returns a tuple with the Securitysystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetSecuritysystemOk() (*string, bool) {
	if o == nil || IsNil(o.Securitysystem) {
		return nil, false
	}
	return o.Securitysystem, true
}

// HasSecuritysystem returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasSecuritysystem() bool {
	if o != nil && !IsNil(o.Securitysystem) {
		return true
	}

	return false
}

// SetSecuritysystem gets a reference to the given string and assigns it to the Securitysystem field.
func (o *UpdateEndpointRequest) SetSecuritysystem(v string) {
	o.Securitysystem = &v
}

// GetShowOn returns the ShowOn field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetShowOn() string {
	if o == nil || IsNil(o.ShowOn) {
		var ret string
		return ret
	}
	return *o.ShowOn
}

// GetShowOnOk returns a tuple with the ShowOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetShowOnOk() (*string, bool) {
	if o == nil || IsNil(o.ShowOn) {
		return nil, false
	}
	return o.ShowOn, true
}

// HasShowOn returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasShowOn() bool {
	if o != nil && !IsNil(o.ShowOn) {
		return true
	}

	return false
}

// SetShowOn gets a reference to the given string and assigns it to the ShowOn field.
func (o *UpdateEndpointRequest) SetShowOn(v string) {
	o.ShowOn = &v
}

// GetUserAccountCorrelationRule returns the UserAccountCorrelationRule field value if set, zero value otherwise.
func (o *UpdateEndpointRequest) GetUserAccountCorrelationRule() string {
	if o == nil || IsNil(o.UserAccountCorrelationRule) {
		var ret string
		return ret
	}
	return *o.UserAccountCorrelationRule
}

// GetUserAccountCorrelationRuleOk returns a tuple with the UserAccountCorrelationRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEndpointRequest) GetUserAccountCorrelationRuleOk() (*string, bool) {
	if o == nil || IsNil(o.UserAccountCorrelationRule) {
		return nil, false
	}
	return o.UserAccountCorrelationRule, true
}

// HasUserAccountCorrelationRule returns a boolean if a field has been set.
func (o *UpdateEndpointRequest) HasUserAccountCorrelationRule() bool {
	if o != nil && !IsNil(o.UserAccountCorrelationRule) {
		return true
	}

	return false
}

// SetUserAccountCorrelationRule gets a reference to the given string and assigns it to the UserAccountCorrelationRule field.
func (o *UpdateEndpointRequest) SetUserAccountCorrelationRule(v string) {
	o.UserAccountCorrelationRule = &v
}

func (o UpdateEndpointRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateEndpointRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Accessquery) {
		toSerialize["accessquery"] = o.Accessquery
	}
	if !IsNil(o.AccountNameRule) {
		toSerialize["accountNameRule"] = o.AccountNameRule
	}
	if !IsNil(o.BlockInflightRequest) {
		toSerialize["blockInflightRequest"] = o.BlockInflightRequest
	}
	if !IsNil(o.Connectionconfig) {
		toSerialize["connectionconfig"] = o.Connectionconfig
	}
	if !IsNil(o.CreateEntTaskforRemoveAcc) {
		toSerialize["createEntTaskforRemoveAcc"] = o.CreateEntTaskforRemoveAcc
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisableModifyAccount) {
		toSerialize["disableModifyAccount"] = o.DisableModifyAccount
	}
	if !IsNil(o.DisableNewAccountRequestIfAccountExists) {
		toSerialize["disableNewAccountRequestIfAccountExists"] = o.DisableNewAccountRequestIfAccountExists
	}
	if !IsNil(o.DisableRemoveAccount) {
		toSerialize["disableRemoveAccount"] = o.DisableRemoveAccount
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.EnableCopyAccess) {
		toSerialize["enableCopyAccess"] = o.EnableCopyAccess
	}
	toSerialize["endpointname"] = o.Endpointname
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.OwnerType) {
		toSerialize["ownerType"] = o.OwnerType
	}
	if !IsNil(o.RequestOption) {
		toSerialize["requestOption"] = o.RequestOption
	}
	if !IsNil(o.Required) {
		toSerialize["required"] = o.Required
	}
	if !IsNil(o.ResourceOwner) {
		toSerialize["resourceOwner"] = o.ResourceOwner
	}
	if !IsNil(o.ResourceOwnerType) {
		toSerialize["resourceOwnerType"] = o.ResourceOwnerType
	}
	if !IsNil(o.RequestableRoleType) {
		toSerialize["requestableRoleType"] = o.RequestableRoleType
	}
	if !IsNil(o.RoleType) {
		toSerialize["roleType"] = o.RoleType
	}
	if !IsNil(o.Securitysystem) {
		toSerialize["securitysystem"] = o.Securitysystem
	}
	if !IsNil(o.ShowOn) {
		toSerialize["showOn"] = o.ShowOn
	}
	if !IsNil(o.UserAccountCorrelationRule) {
		toSerialize["userAccountCorrelationRule"] = o.UserAccountCorrelationRule
	}
	return toSerialize, nil
}

func (o *UpdateEndpointRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"endpointname",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateEndpointRequest := _UpdateEndpointRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateEndpointRequest)

	if err != nil {
		return err
	}

	*o = UpdateEndpointRequest(varUpdateEndpointRequest)

	return err
}

type NullableUpdateEndpointRequest struct {
	value *UpdateEndpointRequest
	isSet bool
}

func (v NullableUpdateEndpointRequest) Get() *UpdateEndpointRequest {
	return v.value
}

func (v *NullableUpdateEndpointRequest) Set(val *UpdateEndpointRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateEndpointRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateEndpointRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateEndpointRequest(val *UpdateEndpointRequest) *NullableUpdateEndpointRequest {
	return &NullableUpdateEndpointRequest{value: val, isSet: true}
}

func (v NullableUpdateEndpointRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateEndpointRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


