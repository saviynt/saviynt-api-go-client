/*
Saviynt Endpoints API

Saviynt Endpoints API

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpoints

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetEndpointsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEndpointsResponse{}

// GetEndpointsResponse struct for GetEndpointsResponse
type GetEndpointsResponse struct {
	Endpoints []Endpoint `json:"endpoints,omitempty"`
	// Number of endpoints returned
	DisplayCount *int32 `json:"displayCount,omitempty"`
	// Error code (0 indicates success)
	ErrorCode string `json:"errorCode"`
	// Total number of endpoints matching the criteria
	TotalCount *int32 `json:"totalCount,omitempty"`
	// Response message
	Message string `json:"message"`
}

type _GetEndpointsResponse GetEndpointsResponse

// NewGetEndpointsResponse instantiates a new GetEndpointsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEndpointsResponse(errorCode string, message string) *GetEndpointsResponse {
	this := GetEndpointsResponse{}
	this.ErrorCode = errorCode
	this.Message = message
	return &this
}

// NewGetEndpointsResponseWithDefaults instantiates a new GetEndpointsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEndpointsResponseWithDefaults() *GetEndpointsResponse {
	this := GetEndpointsResponse{}
	return &this
}

// GetEndpoints returns the Endpoints field value if set, zero value otherwise.
func (o *GetEndpointsResponse) GetEndpoints() []Endpoint {
	if o == nil || IsNil(o.Endpoints) {
		var ret []Endpoint
		return ret
	}
	return o.Endpoints
}

// GetEndpointsOk returns a tuple with the Endpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpointsResponse) GetEndpointsOk() ([]Endpoint, bool) {
	if o == nil || IsNil(o.Endpoints) {
		return nil, false
	}
	return o.Endpoints, true
}

// HasEndpoints returns a boolean if a field has been set.
func (o *GetEndpointsResponse) HasEndpoints() bool {
	if o != nil && !IsNil(o.Endpoints) {
		return true
	}

	return false
}

// SetEndpoints gets a reference to the given []Endpoint and assigns it to the Endpoints field.
func (o *GetEndpointsResponse) SetEndpoints(v []Endpoint) {
	o.Endpoints = v
}

// GetDisplayCount returns the DisplayCount field value if set, zero value otherwise.
func (o *GetEndpointsResponse) GetDisplayCount() int32 {
	if o == nil || IsNil(o.DisplayCount) {
		var ret int32
		return ret
	}
	return *o.DisplayCount
}

// GetDisplayCountOk returns a tuple with the DisplayCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpointsResponse) GetDisplayCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DisplayCount) {
		return nil, false
	}
	return o.DisplayCount, true
}

// HasDisplayCount returns a boolean if a field has been set.
func (o *GetEndpointsResponse) HasDisplayCount() bool {
	if o != nil && !IsNil(o.DisplayCount) {
		return true
	}

	return false
}

// SetDisplayCount gets a reference to the given int32 and assigns it to the DisplayCount field.
func (o *GetEndpointsResponse) SetDisplayCount(v int32) {
	o.DisplayCount = &v
}

// GetErrorCode returns the ErrorCode field value
func (o *GetEndpointsResponse) GetErrorCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value
// and a boolean to check if the value has been set.
func (o *GetEndpointsResponse) GetErrorCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorCode, true
}

// SetErrorCode sets field value
func (o *GetEndpointsResponse) SetErrorCode(v string) {
	o.ErrorCode = v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *GetEndpointsResponse) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpointsResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *GetEndpointsResponse) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *GetEndpointsResponse) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetMessage returns the Message field value
func (o *GetEndpointsResponse) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *GetEndpointsResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *GetEndpointsResponse) SetMessage(v string) {
	o.Message = v
}

func (o GetEndpointsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEndpointsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Endpoints) {
		toSerialize["endpoints"] = o.Endpoints
	}
	if !IsNil(o.DisplayCount) {
		toSerialize["displayCount"] = o.DisplayCount
	}
	toSerialize["errorCode"] = o.ErrorCode
	if !IsNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

func (o *GetEndpointsResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"errorCode",
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetEndpointsResponse := _GetEndpointsResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetEndpointsResponse)

	if err != nil {
		return err
	}

	*o = GetEndpointsResponse(varGetEndpointsResponse)

	return err
}

type NullableGetEndpointsResponse struct {
	value *GetEndpointsResponse
	isSet bool
}

func (v NullableGetEndpointsResponse) Get() *GetEndpointsResponse {
	return v.value
}

func (v *NullableGetEndpointsResponse) Set(val *GetEndpointsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEndpointsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEndpointsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEndpointsResponse(val *GetEndpointsResponse) *NullableGetEndpointsResponse {
	return &NullableGetEndpointsResponse{value: val, isSet: true}
}

func (v NullableGetEndpointsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEndpointsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


