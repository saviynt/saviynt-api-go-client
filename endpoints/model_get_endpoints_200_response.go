/*
Account Management API

API for managing accounts in Saviynt/SSM. - **Create Endpoint**: Creates a new endpoint. - **Update Endpoint**: Updates an existing endpoint based on its name and roletype. - **Get Endpoint List**: Returns a list of endpoints based on search criteria. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package endpoints

import (
	"encoding/json"
)

// checks if the GetEndpoints200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEndpoints200Response{}

// GetEndpoints200Response struct for GetEndpoints200Response
type GetEndpoints200Response struct {
	// A message indicating the outcome of the operation.
	Message *string `json:"message,omitempty"`
	// An error code where '0' signifies success and '1' signifies an unsuccessful operation.
	ErrorCode *string `json:"errorCode,omitempty"`
	// The number of items currently displayed (e.g., on the current page or view).
	DisplayCount *int32 `json:"displayCount,omitempty"`
	// The total number of items available in the dataset, irrespective of the current display settings.
	TotalCount *int32 `json:"totalCount,omitempty"`
	// A collection of endpoints.
	Endpoints []GetEndpoints200ResponseEndpointsInner `json:"endpoints,omitempty"`
}

// NewGetEndpoints200Response instantiates a new GetEndpoints200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEndpoints200Response() *GetEndpoints200Response {
	this := GetEndpoints200Response{}
	return &this
}

// NewGetEndpoints200ResponseWithDefaults instantiates a new GetEndpoints200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEndpoints200ResponseWithDefaults() *GetEndpoints200Response {
	this := GetEndpoints200Response{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GetEndpoints200Response) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpoints200Response) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *GetEndpoints200Response) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GetEndpoints200Response) SetMessage(v string) {
	o.Message = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *GetEndpoints200Response) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpoints200Response) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *GetEndpoints200Response) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *GetEndpoints200Response) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetDisplayCount returns the DisplayCount field value if set, zero value otherwise.
func (o *GetEndpoints200Response) GetDisplayCount() int32 {
	if o == nil || IsNil(o.DisplayCount) {
		var ret int32
		return ret
	}
	return *o.DisplayCount
}

// GetDisplayCountOk returns a tuple with the DisplayCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpoints200Response) GetDisplayCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DisplayCount) {
		return nil, false
	}
	return o.DisplayCount, true
}

// HasDisplayCount returns a boolean if a field has been set.
func (o *GetEndpoints200Response) HasDisplayCount() bool {
	if o != nil && !IsNil(o.DisplayCount) {
		return true
	}

	return false
}

// SetDisplayCount gets a reference to the given int32 and assigns it to the DisplayCount field.
func (o *GetEndpoints200Response) SetDisplayCount(v int32) {
	o.DisplayCount = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *GetEndpoints200Response) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpoints200Response) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *GetEndpoints200Response) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *GetEndpoints200Response) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetEndpoints returns the Endpoints field value if set, zero value otherwise.
func (o *GetEndpoints200Response) GetEndpoints() []GetEndpoints200ResponseEndpointsInner {
	if o == nil || IsNil(o.Endpoints) {
		var ret []GetEndpoints200ResponseEndpointsInner
		return ret
	}
	return o.Endpoints
}

// GetEndpointsOk returns a tuple with the Endpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEndpoints200Response) GetEndpointsOk() ([]GetEndpoints200ResponseEndpointsInner, bool) {
	if o == nil || IsNil(o.Endpoints) {
		return nil, false
	}
	return o.Endpoints, true
}

// HasEndpoints returns a boolean if a field has been set.
func (o *GetEndpoints200Response) HasEndpoints() bool {
	if o != nil && !IsNil(o.Endpoints) {
		return true
	}

	return false
}

// SetEndpoints gets a reference to the given []GetEndpoints200ResponseEndpointsInner and assigns it to the Endpoints field.
func (o *GetEndpoints200Response) SetEndpoints(v []GetEndpoints200ResponseEndpointsInner) {
	o.Endpoints = v
}

func (o GetEndpoints200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEndpoints200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.DisplayCount) {
		toSerialize["displayCount"] = o.DisplayCount
	}
	if !IsNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	if !IsNil(o.Endpoints) {
		toSerialize["endpoints"] = o.Endpoints
	}
	return toSerialize, nil
}

type NullableGetEndpoints200Response struct {
	value *GetEndpoints200Response
	isSet bool
}

func (v NullableGetEndpoints200Response) Get() *GetEndpoints200Response {
	return v.value
}

func (v *NullableGetEndpoints200Response) Set(val *GetEndpoints200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEndpoints200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEndpoints200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEndpoints200Response(val *GetEndpoints200Response) *NullableGetEndpoints200Response {
	return &NullableGetEndpoints200Response{value: val, isSet: true}
}

func (v NullableGetEndpoints200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEndpoints200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


