/*
Connection Management API

Use this API to create a connection in Saviynt Identity Cloud.  The Authorization header must have \"Bearer {token}\".  **Mandatory Parameters:** - **connectionname**: Specify the name to identify the connection. - **connectiontype**: Specify a connection type. For example, if your target application is Active Directory, specify the connection type as \"AD\".  **Optional Parameters:** - **description**: Provide a description for the connection. - **defaultsavroles**: Specify the SAV role(s) required for managing this connection along with its associated security systems, endpoints, accounts, and entitlements. - **emailTemplate**: Specify the email template applicable for notifications. - **sslCertificate**: Specify the SSL certificate(s) to secure the connection between EIC and the target application. - **vaultConfiguration**: Specify the path of the vault to obtain secret data (suffix the connector name to make it unique). - **saveinvault**: Set to true to save the encrypted attribute in the configured vault.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connections

import (
	"encoding/json"
)

// checks if the CreateOrUpdateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrUpdateResponse{}

// CreateOrUpdateResponse struct for CreateOrUpdateResponse
type CreateOrUpdateResponse struct {
	ConnectionKey *int32  `json:"connectionKey,omitempty"`
	Msg           *string `json:"msg,omitempty"`
	ErrorCode     *string `json:"errorCode,omitempty"`
}

// NewCreateOrUpdateResponse instantiates a new CreateOrUpdateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateResponse() *CreateOrUpdateResponse {
	this := CreateOrUpdateResponse{}
	return &this
}

// NewCreateOrUpdateResponseWithDefaults instantiates a new CreateOrUpdateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateResponseWithDefaults() *CreateOrUpdateResponse {
	this := CreateOrUpdateResponse{}
	return &this
}

// GetConnectionKey returns the ConnectionKey field value if set, zero value otherwise.
func (o *CreateOrUpdateResponse) GetConnectionKey() int32 {
	if o == nil || IsNil(o.ConnectionKey) {
		var ret int32
		return ret
	}
	return *o.ConnectionKey
}

// GetConnectionKeyOk returns a tuple with the ConnectionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateResponse) GetConnectionKeyOk() (*int32, bool) {
	if o == nil || IsNil(o.ConnectionKey) {
		return nil, false
	}
	return o.ConnectionKey, true
}

// HasConnectionKey returns a boolean if a field has been set.
func (o *CreateOrUpdateResponse) HasConnectionKey() bool {
	if o != nil && !IsNil(o.ConnectionKey) {
		return true
	}

	return false
}

// SetConnectionKey gets a reference to the given int32 and assigns it to the ConnectionKey field.
func (o *CreateOrUpdateResponse) SetConnectionKey(v int32) {
	o.ConnectionKey = &v
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *CreateOrUpdateResponse) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateResponse) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *CreateOrUpdateResponse) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *CreateOrUpdateResponse) SetMsg(v string) {
	o.Msg = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *CreateOrUpdateResponse) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateResponse) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *CreateOrUpdateResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *CreateOrUpdateResponse) SetErrorCode(v string) {
	o.ErrorCode = &v
}

func (o CreateOrUpdateResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrUpdateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectionKey) {
		toSerialize["connectionKey"] = o.ConnectionKey
	}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	return toSerialize, nil
}

type NullableCreateOrUpdateResponse struct {
	value *CreateOrUpdateResponse
	isSet bool
}

func (v NullableCreateOrUpdateResponse) Get() *CreateOrUpdateResponse {
	return v.value
}

func (v *NullableCreateOrUpdateResponse) Set(val *CreateOrUpdateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateResponse(val *CreateOrUpdateResponse) *NullableCreateOrUpdateResponse {
	return &NullableCreateOrUpdateResponse{value: val, isSet: true}
}

func (v NullableCreateOrUpdateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
