/*
testConnection Management API

Use this API to create a connection in Saviynt Identity Cloud.  The Authorization header must have \"Bearer {token}\".  **Mandatory Parameters:** - **connectionname**: Specify the name to identify the connection. - **connectiontype**: Specify a connection type. For example, if your target application is Active Directory, specify the connection type as \"AD\".  **Optional Parameters:** - **description**: Provide a description for the connection. - **defaultsavroles**: Specify the SAV role(s) required for managing this connection along with its associated security systems, endpoints, accounts, and entitlements. - **emailTemplate**: Specify the email template applicable for notifications. - **sslCertificate**: Specify the SSL certificate(s) to secure the connection between EIC and the target application. - **vaultConfiguration**: Specify the path of the vault to obtain secret data (suffix the connector name to make it unique). - **saveinvault**: Set to true to save the encrypted attribute in the configured vault.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connections

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the RESTConnector type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RESTConnector{}

// RESTConnector struct for RESTConnector
type RESTConnector struct {
	BaseConnector
	ConnectionJSON map[string]interface{} `json:"ConnectionJSON,omitempty"`
	// Property for ImportUserJSON
	ImportUserJSON          *string `json:"ImportUserJSON,omitempty"`
	ImportAccountEntJSON    *string `json:"ImportAccountEntJSON,omitempty"`
	STATUS_THRESHOLD_CONFIG *string `json:"STATUS_THRESHOLD_CONFIG,omitempty"`
	CreateAccountJSON       *string `json:"CreateAccountJSON,omitempty"`
	UpdateAccountJSON       *string `json:"UpdateAccountJSON,omitempty"`
	EnableAccountJSON       *string `json:"EnableAccountJSON,omitempty"`
	DisableAccountJSON      *string `json:"DisableAccountJSON,omitempty"`
	AddAccessJSON           *string `json:"AddAccessJSON,omitempty"`
	RemoveAccessJSON        *string `json:"RemoveAccessJSON,omitempty"`
	// Property for UpdateUserJSON
	UpdateUserJSON    *string `json:"UpdateUserJSON,omitempty"`
	ChangePassJSON    *string `json:"ChangePassJSON,omitempty"`
	RemoveAccountJSON *string `json:"RemoveAccountJSON,omitempty"`
	TicketStatusJSON  *string `json:"TicketStatusJSON,omitempty"`
	CreateTicketJSON  *string `json:"CreateTicketJSON,omitempty"`
	ENDPOINTS_FILTER  *string `json:"ENDPOINTS_FILTER,omitempty"`
	PasswdPolicyJSON  *string `json:"PasswdPolicyJSON,omitempty"`
	// We can use this attribute to define the provisioningLimit,showLogs and connectionTimeoutConfig.
	ConfigJSON           *string `json:"ConfigJSON,omitempty"`
	AddFFIDAccessJSON    *string `json:"AddFFIDAccessJSON,omitempty"`
	RemoveFFIDAccessJSON *string `json:"RemoveFFIDAccessJSON,omitempty"`
	MODIFYUSERDATAJSON   *string `json:"MODIFYUSERDATAJSON,omitempty"`
	SendOtpJSON          *string `json:"SendOtpJSON,omitempty"`
	ValidateOtpJSON      *string `json:"ValidateOtpJSON,omitempty"`
	PAM_CONFIG           *string `json:"PAM_CONFIG,omitempty"`
}

type _RESTConnector RESTConnector

// NewRESTConnector instantiates a new RESTConnector object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRESTConnector(connectionName string, connectiontype string) *RESTConnector {
	this := RESTConnector{}
	this.ConnectionName = connectionName
	this.Connectiontype = connectiontype
	return &this
}

// NewRESTConnectorWithDefaults instantiates a new RESTConnector object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRESTConnectorWithDefaults() *RESTConnector {
	this := RESTConnector{}
	return &this
}

// GetConnectionJSON returns the ConnectionJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetConnectionJSON() map[string]interface{} {
	if o == nil || IsNil(o.ConnectionJSON) {
		var ret map[string]interface{}
		return ret
	}
	return o.ConnectionJSON
}

// GetConnectionJSONOk returns a tuple with the ConnectionJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetConnectionJSONOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ConnectionJSON) {
		return map[string]interface{}{}, false
	}
	return o.ConnectionJSON, true
}

// HasConnectionJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasConnectionJSON() bool {
	if o != nil && !IsNil(o.ConnectionJSON) {
		return true
	}

	return false
}

// SetConnectionJSON gets a reference to the given map[string]interface{} and assigns it to the ConnectionJSON field.
func (o *RESTConnector) SetConnectionJSON(v map[string]interface{}) {
	o.ConnectionJSON = v
}

// GetImportUserJSON returns the ImportUserJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetImportUserJSON() string {
	if o == nil || IsNil(o.ImportUserJSON) {
		var ret string
		return ret
	}
	return *o.ImportUserJSON
}

// GetImportUserJSONOk returns a tuple with the ImportUserJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetImportUserJSONOk() (*string, bool) {
	if o == nil || IsNil(o.ImportUserJSON) {
		return nil, false
	}
	return o.ImportUserJSON, true
}

// HasImportUserJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasImportUserJSON() bool {
	if o != nil && !IsNil(o.ImportUserJSON) {
		return true
	}

	return false
}

// SetImportUserJSON gets a reference to the given string and assigns it to the ImportUserJSON field.
func (o *RESTConnector) SetImportUserJSON(v string) {
	o.ImportUserJSON = &v
}

// GetImportAccountEntJSON returns the ImportAccountEntJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetImportAccountEntJSON() string {
	if o == nil || IsNil(o.ImportAccountEntJSON) {
		var ret string
		return ret
	}
	return *o.ImportAccountEntJSON
}

// GetImportAccountEntJSONOk returns a tuple with the ImportAccountEntJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetImportAccountEntJSONOk() (*string, bool) {
	if o == nil || IsNil(o.ImportAccountEntJSON) {
		return nil, false
	}
	return o.ImportAccountEntJSON, true
}

// HasImportAccountEntJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasImportAccountEntJSON() bool {
	if o != nil && !IsNil(o.ImportAccountEntJSON) {
		return true
	}

	return false
}

// SetImportAccountEntJSON gets a reference to the given string and assigns it to the ImportAccountEntJSON field.
func (o *RESTConnector) SetImportAccountEntJSON(v string) {
	o.ImportAccountEntJSON = &v
}

// GetSTATUS_THRESHOLD_CONFIG returns the STATUS_THRESHOLD_CONFIG field value if set, zero value otherwise.
func (o *RESTConnector) GetSTATUS_THRESHOLD_CONFIG() string {
	if o == nil || IsNil(o.STATUS_THRESHOLD_CONFIG) {
		var ret string
		return ret
	}
	return *o.STATUS_THRESHOLD_CONFIG
}

// GetSTATUS_THRESHOLD_CONFIGOk returns a tuple with the STATUS_THRESHOLD_CONFIG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetSTATUS_THRESHOLD_CONFIGOk() (*string, bool) {
	if o == nil || IsNil(o.STATUS_THRESHOLD_CONFIG) {
		return nil, false
	}
	return o.STATUS_THRESHOLD_CONFIG, true
}

// HasSTATUS_THRESHOLD_CONFIG returns a boolean if a field has been set.
func (o *RESTConnector) HasSTATUS_THRESHOLD_CONFIG() bool {
	if o != nil && !IsNil(o.STATUS_THRESHOLD_CONFIG) {
		return true
	}

	return false
}

// SetSTATUS_THRESHOLD_CONFIG gets a reference to the given string and assigns it to the STATUS_THRESHOLD_CONFIG field.
func (o *RESTConnector) SetSTATUS_THRESHOLD_CONFIG(v string) {
	o.STATUS_THRESHOLD_CONFIG = &v
}

// GetCreateAccountJSON returns the CreateAccountJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetCreateAccountJSON() string {
	if o == nil || IsNil(o.CreateAccountJSON) {
		var ret string
		return ret
	}
	return *o.CreateAccountJSON
}

// GetCreateAccountJSONOk returns a tuple with the CreateAccountJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetCreateAccountJSONOk() (*string, bool) {
	if o == nil || IsNil(o.CreateAccountJSON) {
		return nil, false
	}
	return o.CreateAccountJSON, true
}

// HasCreateAccountJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasCreateAccountJSON() bool {
	if o != nil && !IsNil(o.CreateAccountJSON) {
		return true
	}

	return false
}

// SetCreateAccountJSON gets a reference to the given string and assigns it to the CreateAccountJSON field.
func (o *RESTConnector) SetCreateAccountJSON(v string) {
	o.CreateAccountJSON = &v
}

// GetUpdateAccountJSON returns the UpdateAccountJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetUpdateAccountJSON() string {
	if o == nil || IsNil(o.UpdateAccountJSON) {
		var ret string
		return ret
	}
	return *o.UpdateAccountJSON
}

// GetUpdateAccountJSONOk returns a tuple with the UpdateAccountJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetUpdateAccountJSONOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateAccountJSON) {
		return nil, false
	}
	return o.UpdateAccountJSON, true
}

// HasUpdateAccountJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasUpdateAccountJSON() bool {
	if o != nil && !IsNil(o.UpdateAccountJSON) {
		return true
	}

	return false
}

// SetUpdateAccountJSON gets a reference to the given string and assigns it to the UpdateAccountJSON field.
func (o *RESTConnector) SetUpdateAccountJSON(v string) {
	o.UpdateAccountJSON = &v
}

// GetEnableAccountJSON returns the EnableAccountJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetEnableAccountJSON() string {
	if o == nil || IsNil(o.EnableAccountJSON) {
		var ret string
		return ret
	}
	return *o.EnableAccountJSON
}

// GetEnableAccountJSONOk returns a tuple with the EnableAccountJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetEnableAccountJSONOk() (*string, bool) {
	if o == nil || IsNil(o.EnableAccountJSON) {
		return nil, false
	}
	return o.EnableAccountJSON, true
}

// HasEnableAccountJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasEnableAccountJSON() bool {
	if o != nil && !IsNil(o.EnableAccountJSON) {
		return true
	}

	return false
}

// SetEnableAccountJSON gets a reference to the given string and assigns it to the EnableAccountJSON field.
func (o *RESTConnector) SetEnableAccountJSON(v string) {
	o.EnableAccountJSON = &v
}

// GetDisableAccountJSON returns the DisableAccountJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetDisableAccountJSON() string {
	if o == nil || IsNil(o.DisableAccountJSON) {
		var ret string
		return ret
	}
	return *o.DisableAccountJSON
}

// GetDisableAccountJSONOk returns a tuple with the DisableAccountJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetDisableAccountJSONOk() (*string, bool) {
	if o == nil || IsNil(o.DisableAccountJSON) {
		return nil, false
	}
	return o.DisableAccountJSON, true
}

// HasDisableAccountJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasDisableAccountJSON() bool {
	if o != nil && !IsNil(o.DisableAccountJSON) {
		return true
	}

	return false
}

// SetDisableAccountJSON gets a reference to the given string and assigns it to the DisableAccountJSON field.
func (o *RESTConnector) SetDisableAccountJSON(v string) {
	o.DisableAccountJSON = &v
}

// GetAddAccessJSON returns the AddAccessJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetAddAccessJSON() string {
	if o == nil || IsNil(o.AddAccessJSON) {
		var ret string
		return ret
	}
	return *o.AddAccessJSON
}

// GetAddAccessJSONOk returns a tuple with the AddAccessJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetAddAccessJSONOk() (*string, bool) {
	if o == nil || IsNil(o.AddAccessJSON) {
		return nil, false
	}
	return o.AddAccessJSON, true
}

// HasAddAccessJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasAddAccessJSON() bool {
	if o != nil && !IsNil(o.AddAccessJSON) {
		return true
	}

	return false
}

// SetAddAccessJSON gets a reference to the given string and assigns it to the AddAccessJSON field.
func (o *RESTConnector) SetAddAccessJSON(v string) {
	o.AddAccessJSON = &v
}

// GetRemoveAccessJSON returns the RemoveAccessJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetRemoveAccessJSON() string {
	if o == nil || IsNil(o.RemoveAccessJSON) {
		var ret string
		return ret
	}
	return *o.RemoveAccessJSON
}

// GetRemoveAccessJSONOk returns a tuple with the RemoveAccessJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetRemoveAccessJSONOk() (*string, bool) {
	if o == nil || IsNil(o.RemoveAccessJSON) {
		return nil, false
	}
	return o.RemoveAccessJSON, true
}

// HasRemoveAccessJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasRemoveAccessJSON() bool {
	if o != nil && !IsNil(o.RemoveAccessJSON) {
		return true
	}

	return false
}

// SetRemoveAccessJSON gets a reference to the given string and assigns it to the RemoveAccessJSON field.
func (o *RESTConnector) SetRemoveAccessJSON(v string) {
	o.RemoveAccessJSON = &v
}

// GetUpdateUserJSON returns the UpdateUserJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetUpdateUserJSON() string {
	if o == nil || IsNil(o.UpdateUserJSON) {
		var ret string
		return ret
	}
	return *o.UpdateUserJSON
}

// GetUpdateUserJSONOk returns a tuple with the UpdateUserJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetUpdateUserJSONOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateUserJSON) {
		return nil, false
	}
	return o.UpdateUserJSON, true
}

// HasUpdateUserJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasUpdateUserJSON() bool {
	if o != nil && !IsNil(o.UpdateUserJSON) {
		return true
	}

	return false
}

// SetUpdateUserJSON gets a reference to the given string and assigns it to the UpdateUserJSON field.
func (o *RESTConnector) SetUpdateUserJSON(v string) {
	o.UpdateUserJSON = &v
}

// GetChangePassJSON returns the ChangePassJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetChangePassJSON() string {
	if o == nil || IsNil(o.ChangePassJSON) {
		var ret string
		return ret
	}
	return *o.ChangePassJSON
}

// GetChangePassJSONOk returns a tuple with the ChangePassJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetChangePassJSONOk() (*string, bool) {
	if o == nil || IsNil(o.ChangePassJSON) {
		return nil, false
	}
	return o.ChangePassJSON, true
}

// HasChangePassJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasChangePassJSON() bool {
	if o != nil && !IsNil(o.ChangePassJSON) {
		return true
	}

	return false
}

// SetChangePassJSON gets a reference to the given string and assigns it to the ChangePassJSON field.
func (o *RESTConnector) SetChangePassJSON(v string) {
	o.ChangePassJSON = &v
}

// GetRemoveAccountJSON returns the RemoveAccountJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetRemoveAccountJSON() string {
	if o == nil || IsNil(o.RemoveAccountJSON) {
		var ret string
		return ret
	}
	return *o.RemoveAccountJSON
}

// GetRemoveAccountJSONOk returns a tuple with the RemoveAccountJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetRemoveAccountJSONOk() (*string, bool) {
	if o == nil || IsNil(o.RemoveAccountJSON) {
		return nil, false
	}
	return o.RemoveAccountJSON, true
}

// HasRemoveAccountJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasRemoveAccountJSON() bool {
	if o != nil && !IsNil(o.RemoveAccountJSON) {
		return true
	}

	return false
}

// SetRemoveAccountJSON gets a reference to the given string and assigns it to the RemoveAccountJSON field.
func (o *RESTConnector) SetRemoveAccountJSON(v string) {
	o.RemoveAccountJSON = &v
}

// GetTicketStatusJSON returns the TicketStatusJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetTicketStatusJSON() string {
	if o == nil || IsNil(o.TicketStatusJSON) {
		var ret string
		return ret
	}
	return *o.TicketStatusJSON
}

// GetTicketStatusJSONOk returns a tuple with the TicketStatusJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetTicketStatusJSONOk() (*string, bool) {
	if o == nil || IsNil(o.TicketStatusJSON) {
		return nil, false
	}
	return o.TicketStatusJSON, true
}

// HasTicketStatusJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasTicketStatusJSON() bool {
	if o != nil && !IsNil(o.TicketStatusJSON) {
		return true
	}

	return false
}

// SetTicketStatusJSON gets a reference to the given string and assigns it to the TicketStatusJSON field.
func (o *RESTConnector) SetTicketStatusJSON(v string) {
	o.TicketStatusJSON = &v
}

// GetCreateTicketJSON returns the CreateTicketJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetCreateTicketJSON() string {
	if o == nil || IsNil(o.CreateTicketJSON) {
		var ret string
		return ret
	}
	return *o.CreateTicketJSON
}

// GetCreateTicketJSONOk returns a tuple with the CreateTicketJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetCreateTicketJSONOk() (*string, bool) {
	if o == nil || IsNil(o.CreateTicketJSON) {
		return nil, false
	}
	return o.CreateTicketJSON, true
}

// HasCreateTicketJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasCreateTicketJSON() bool {
	if o != nil && !IsNil(o.CreateTicketJSON) {
		return true
	}

	return false
}

// SetCreateTicketJSON gets a reference to the given string and assigns it to the CreateTicketJSON field.
func (o *RESTConnector) SetCreateTicketJSON(v string) {
	o.CreateTicketJSON = &v
}

// GetENDPOINTS_FILTER returns the ENDPOINTS_FILTER field value if set, zero value otherwise.
func (o *RESTConnector) GetENDPOINTS_FILTER() string {
	if o == nil || IsNil(o.ENDPOINTS_FILTER) {
		var ret string
		return ret
	}
	return *o.ENDPOINTS_FILTER
}

// GetENDPOINTS_FILTEROk returns a tuple with the ENDPOINTS_FILTER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetENDPOINTS_FILTEROk() (*string, bool) {
	if o == nil || IsNil(o.ENDPOINTS_FILTER) {
		return nil, false
	}
	return o.ENDPOINTS_FILTER, true
}

// HasENDPOINTS_FILTER returns a boolean if a field has been set.
func (o *RESTConnector) HasENDPOINTS_FILTER() bool {
	if o != nil && !IsNil(o.ENDPOINTS_FILTER) {
		return true
	}

	return false
}

// SetENDPOINTS_FILTER gets a reference to the given string and assigns it to the ENDPOINTS_FILTER field.
func (o *RESTConnector) SetENDPOINTS_FILTER(v string) {
	o.ENDPOINTS_FILTER = &v
}

// GetPasswdPolicyJSON returns the PasswdPolicyJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetPasswdPolicyJSON() string {
	if o == nil || IsNil(o.PasswdPolicyJSON) {
		var ret string
		return ret
	}
	return *o.PasswdPolicyJSON
}

// GetPasswdPolicyJSONOk returns a tuple with the PasswdPolicyJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetPasswdPolicyJSONOk() (*string, bool) {
	if o == nil || IsNil(o.PasswdPolicyJSON) {
		return nil, false
	}
	return o.PasswdPolicyJSON, true
}

// HasPasswdPolicyJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasPasswdPolicyJSON() bool {
	if o != nil && !IsNil(o.PasswdPolicyJSON) {
		return true
	}

	return false
}

// SetPasswdPolicyJSON gets a reference to the given string and assigns it to the PasswdPolicyJSON field.
func (o *RESTConnector) SetPasswdPolicyJSON(v string) {
	o.PasswdPolicyJSON = &v
}

// GetConfigJSON returns the ConfigJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetConfigJSON() string {
	if o == nil || IsNil(o.ConfigJSON) {
		var ret string
		return ret
	}
	return *o.ConfigJSON
}

// GetConfigJSONOk returns a tuple with the ConfigJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetConfigJSONOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigJSON) {
		return nil, false
	}
	return o.ConfigJSON, true
}

// HasConfigJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasConfigJSON() bool {
	if o != nil && !IsNil(o.ConfigJSON) {
		return true
	}

	return false
}

// SetConfigJSON gets a reference to the given string and assigns it to the ConfigJSON field.
func (o *RESTConnector) SetConfigJSON(v string) {
	o.ConfigJSON = &v
}

// GetAddFFIDAccessJSON returns the AddFFIDAccessJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetAddFFIDAccessJSON() string {
	if o == nil || IsNil(o.AddFFIDAccessJSON) {
		var ret string
		return ret
	}
	return *o.AddFFIDAccessJSON
}

// GetAddFFIDAccessJSONOk returns a tuple with the AddFFIDAccessJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetAddFFIDAccessJSONOk() (*string, bool) {
	if o == nil || IsNil(o.AddFFIDAccessJSON) {
		return nil, false
	}
	return o.AddFFIDAccessJSON, true
}

// HasAddFFIDAccessJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasAddFFIDAccessJSON() bool {
	if o != nil && !IsNil(o.AddFFIDAccessJSON) {
		return true
	}

	return false
}

// SetAddFFIDAccessJSON gets a reference to the given string and assigns it to the AddFFIDAccessJSON field.
func (o *RESTConnector) SetAddFFIDAccessJSON(v string) {
	o.AddFFIDAccessJSON = &v
}

// GetRemoveFFIDAccessJSON returns the RemoveFFIDAccessJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetRemoveFFIDAccessJSON() string {
	if o == nil || IsNil(o.RemoveFFIDAccessJSON) {
		var ret string
		return ret
	}
	return *o.RemoveFFIDAccessJSON
}

// GetRemoveFFIDAccessJSONOk returns a tuple with the RemoveFFIDAccessJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetRemoveFFIDAccessJSONOk() (*string, bool) {
	if o == nil || IsNil(o.RemoveFFIDAccessJSON) {
		return nil, false
	}
	return o.RemoveFFIDAccessJSON, true
}

// HasRemoveFFIDAccessJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasRemoveFFIDAccessJSON() bool {
	if o != nil && !IsNil(o.RemoveFFIDAccessJSON) {
		return true
	}

	return false
}

// SetRemoveFFIDAccessJSON gets a reference to the given string and assigns it to the RemoveFFIDAccessJSON field.
func (o *RESTConnector) SetRemoveFFIDAccessJSON(v string) {
	o.RemoveFFIDAccessJSON = &v
}

// GetMODIFYUSERDATAJSON returns the MODIFYUSERDATAJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetMODIFYUSERDATAJSON() string {
	if o == nil || IsNil(o.MODIFYUSERDATAJSON) {
		var ret string
		return ret
	}
	return *o.MODIFYUSERDATAJSON
}

// GetMODIFYUSERDATAJSONOk returns a tuple with the MODIFYUSERDATAJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetMODIFYUSERDATAJSONOk() (*string, bool) {
	if o == nil || IsNil(o.MODIFYUSERDATAJSON) {
		return nil, false
	}
	return o.MODIFYUSERDATAJSON, true
}

// HasMODIFYUSERDATAJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasMODIFYUSERDATAJSON() bool {
	if o != nil && !IsNil(o.MODIFYUSERDATAJSON) {
		return true
	}

	return false
}

// SetMODIFYUSERDATAJSON gets a reference to the given string and assigns it to the MODIFYUSERDATAJSON field.
func (o *RESTConnector) SetMODIFYUSERDATAJSON(v string) {
	o.MODIFYUSERDATAJSON = &v
}

// GetSendOtpJSON returns the SendOtpJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetSendOtpJSON() string {
	if o == nil || IsNil(o.SendOtpJSON) {
		var ret string
		return ret
	}
	return *o.SendOtpJSON
}

// GetSendOtpJSONOk returns a tuple with the SendOtpJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetSendOtpJSONOk() (*string, bool) {
	if o == nil || IsNil(o.SendOtpJSON) {
		return nil, false
	}
	return o.SendOtpJSON, true
}

// HasSendOtpJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasSendOtpJSON() bool {
	if o != nil && !IsNil(o.SendOtpJSON) {
		return true
	}

	return false
}

// SetSendOtpJSON gets a reference to the given string and assigns it to the SendOtpJSON field.
func (o *RESTConnector) SetSendOtpJSON(v string) {
	o.SendOtpJSON = &v
}

// GetValidateOtpJSON returns the ValidateOtpJSON field value if set, zero value otherwise.
func (o *RESTConnector) GetValidateOtpJSON() string {
	if o == nil || IsNil(o.ValidateOtpJSON) {
		var ret string
		return ret
	}
	return *o.ValidateOtpJSON
}

// GetValidateOtpJSONOk returns a tuple with the ValidateOtpJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetValidateOtpJSONOk() (*string, bool) {
	if o == nil || IsNil(o.ValidateOtpJSON) {
		return nil, false
	}
	return o.ValidateOtpJSON, true
}

// HasValidateOtpJSON returns a boolean if a field has been set.
func (o *RESTConnector) HasValidateOtpJSON() bool {
	if o != nil && !IsNil(o.ValidateOtpJSON) {
		return true
	}

	return false
}

// SetValidateOtpJSON gets a reference to the given string and assigns it to the ValidateOtpJSON field.
func (o *RESTConnector) SetValidateOtpJSON(v string) {
	o.ValidateOtpJSON = &v
}

// GetPAM_CONFIG returns the PAM_CONFIG field value if set, zero value otherwise.
func (o *RESTConnector) GetPAM_CONFIG() string {
	if o == nil || IsNil(o.PAM_CONFIG) {
		var ret string
		return ret
	}
	return *o.PAM_CONFIG
}

// GetPAM_CONFIGOk returns a tuple with the PAM_CONFIG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTConnector) GetPAM_CONFIGOk() (*string, bool) {
	if o == nil || IsNil(o.PAM_CONFIG) {
		return nil, false
	}
	return o.PAM_CONFIG, true
}

// HasPAM_CONFIG returns a boolean if a field has been set.
func (o *RESTConnector) HasPAM_CONFIG() bool {
	if o != nil && !IsNil(o.PAM_CONFIG) {
		return true
	}

	return false
}

// SetPAM_CONFIG gets a reference to the given string and assigns it to the PAM_CONFIG field.
func (o *RESTConnector) SetPAM_CONFIG(v string) {
	o.PAM_CONFIG = &v
}

func (o RESTConnector) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RESTConnector) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedBaseConnector, errBaseConnector := json.Marshal(o.BaseConnector)
	if errBaseConnector != nil {
		return map[string]interface{}{}, errBaseConnector
	}
	errBaseConnector = json.Unmarshal([]byte(serializedBaseConnector), &toSerialize)
	if errBaseConnector != nil {
		return map[string]interface{}{}, errBaseConnector
	}
	if !IsNil(o.ConnectionJSON) {
		toSerialize["ConnectionJSON"] = o.ConnectionJSON
	}
	if !IsNil(o.ImportUserJSON) {
		toSerialize["ImportUserJSON"] = o.ImportUserJSON
	}
	if !IsNil(o.ImportAccountEntJSON) {
		toSerialize["ImportAccountEntJSON"] = o.ImportAccountEntJSON
	}
	if !IsNil(o.STATUS_THRESHOLD_CONFIG) {
		toSerialize["STATUS_THRESHOLD_CONFIG"] = o.STATUS_THRESHOLD_CONFIG
	}
	if !IsNil(o.CreateAccountJSON) {
		toSerialize["CreateAccountJSON"] = o.CreateAccountJSON
	}
	if !IsNil(o.UpdateAccountJSON) {
		toSerialize["UpdateAccountJSON"] = o.UpdateAccountJSON
	}
	if !IsNil(o.EnableAccountJSON) {
		toSerialize["EnableAccountJSON"] = o.EnableAccountJSON
	}
	if !IsNil(o.DisableAccountJSON) {
		toSerialize["DisableAccountJSON"] = o.DisableAccountJSON
	}
	if !IsNil(o.AddAccessJSON) {
		toSerialize["AddAccessJSON"] = o.AddAccessJSON
	}
	if !IsNil(o.RemoveAccessJSON) {
		toSerialize["RemoveAccessJSON"] = o.RemoveAccessJSON
	}
	if !IsNil(o.UpdateUserJSON) {
		toSerialize["UpdateUserJSON"] = o.UpdateUserJSON
	}
	if !IsNil(o.ChangePassJSON) {
		toSerialize["ChangePassJSON"] = o.ChangePassJSON
	}
	if !IsNil(o.RemoveAccountJSON) {
		toSerialize["RemoveAccountJSON"] = o.RemoveAccountJSON
	}
	if !IsNil(o.TicketStatusJSON) {
		toSerialize["TicketStatusJSON"] = o.TicketStatusJSON
	}
	if !IsNil(o.CreateTicketJSON) {
		toSerialize["CreateTicketJSON"] = o.CreateTicketJSON
	}
	if !IsNil(o.ENDPOINTS_FILTER) {
		toSerialize["ENDPOINTS_FILTER"] = o.ENDPOINTS_FILTER
	}
	if !IsNil(o.PasswdPolicyJSON) {
		toSerialize["PasswdPolicyJSON"] = o.PasswdPolicyJSON
	}
	if !IsNil(o.ConfigJSON) {
		toSerialize["ConfigJSON"] = o.ConfigJSON
	}
	if !IsNil(o.AddFFIDAccessJSON) {
		toSerialize["AddFFIDAccessJSON"] = o.AddFFIDAccessJSON
	}
	if !IsNil(o.RemoveFFIDAccessJSON) {
		toSerialize["RemoveFFIDAccessJSON"] = o.RemoveFFIDAccessJSON
	}
	if !IsNil(o.MODIFYUSERDATAJSON) {
		toSerialize["MODIFYUSERDATAJSON"] = o.MODIFYUSERDATAJSON
	}
	if !IsNil(o.SendOtpJSON) {
		toSerialize["SendOtpJSON"] = o.SendOtpJSON
	}
	if !IsNil(o.ValidateOtpJSON) {
		toSerialize["ValidateOtpJSON"] = o.ValidateOtpJSON
	}
	if !IsNil(o.PAM_CONFIG) {
		toSerialize["PAM_CONFIG"] = o.PAM_CONFIG
	}
	return toSerialize, nil
}

func (o *RESTConnector) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"connectionName",
		"connectiontype",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRESTConnector := _RESTConnector{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRESTConnector)

	if err != nil {
		return err
	}

	*o = RESTConnector(varRESTConnector)

	return err
}

type NullableRESTConnector struct {
	value *RESTConnector
	isSet bool
}

func (v NullableRESTConnector) Get() *RESTConnector {
	return v.value
}

func (v *NullableRESTConnector) Set(val *RESTConnector) {
	v.value = val
	v.isSet = true
}

func (v NullableRESTConnector) IsSet() bool {
	return v.isSet
}

func (v *NullableRESTConnector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRESTConnector(val *RESTConnector) *NullableRESTConnector {
	return &NullableRESTConnector{value: val, isSet: true}
}

func (v NullableRESTConnector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRESTConnector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
