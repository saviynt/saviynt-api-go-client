/*
Saviynt Connections API

Connections

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connections

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DeleteConnectionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteConnectionResponse{}

// DeleteConnectionResponse struct for DeleteConnectionResponse
type DeleteConnectionResponse struct {
	Msg string `json:"msg"`
	Errorcode string `json:"errorcode"`
}

type _DeleteConnectionResponse DeleteConnectionResponse

// NewDeleteConnectionResponse instantiates a new DeleteConnectionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteConnectionResponse(msg string, errorcode string) *DeleteConnectionResponse {
	this := DeleteConnectionResponse{}
	this.Msg = msg
	this.Errorcode = errorcode
	return &this
}

// NewDeleteConnectionResponseWithDefaults instantiates a new DeleteConnectionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteConnectionResponseWithDefaults() *DeleteConnectionResponse {
	this := DeleteConnectionResponse{}
	return &this
}

// GetMsg returns the Msg field value
func (o *DeleteConnectionResponse) GetMsg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Msg
}

// GetMsgOk returns a tuple with the Msg field value
// and a boolean to check if the value has been set.
func (o *DeleteConnectionResponse) GetMsgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Msg, true
}

// SetMsg sets field value
func (o *DeleteConnectionResponse) SetMsg(v string) {
	o.Msg = v
}

// GetErrorcode returns the Errorcode field value
func (o *DeleteConnectionResponse) GetErrorcode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Errorcode
}

// GetErrorcodeOk returns a tuple with the Errorcode field value
// and a boolean to check if the value has been set.
func (o *DeleteConnectionResponse) GetErrorcodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Errorcode, true
}

// SetErrorcode sets field value
func (o *DeleteConnectionResponse) SetErrorcode(v string) {
	o.Errorcode = v
}

func (o DeleteConnectionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteConnectionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["msg"] = o.Msg
	toSerialize["errorcode"] = o.Errorcode
	return toSerialize, nil
}

func (o *DeleteConnectionResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"msg",
		"errorcode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeleteConnectionResponse := _DeleteConnectionResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeleteConnectionResponse)

	if err != nil {
		return err
	}

	*o = DeleteConnectionResponse(varDeleteConnectionResponse)

	return err
}

type NullableDeleteConnectionResponse struct {
	value *DeleteConnectionResponse
	isSet bool
}

func (v NullableDeleteConnectionResponse) Get() *DeleteConnectionResponse {
	return v.value
}

func (v *NullableDeleteConnectionResponse) Set(val *DeleteConnectionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteConnectionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteConnectionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteConnectionResponse(val *DeleteConnectionResponse) *NullableDeleteConnectionResponse {
	return &NullableDeleteConnectionResponse{value: val, isSet: true}
}

func (v NullableDeleteConnectionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteConnectionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


