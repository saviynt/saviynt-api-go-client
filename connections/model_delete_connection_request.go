/*
Saviynt Connections API

Connections

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connections

import (
	"encoding/json"
)

// checks if the DeleteConnectionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteConnectionRequest{}

// DeleteConnectionRequest struct for DeleteConnectionRequest
type DeleteConnectionRequest struct {
	Connectionkey []string `json:"connectionkey,omitempty"`
	Updateuser *string `json:"updateuser,omitempty"`
}

// NewDeleteConnectionRequest instantiates a new DeleteConnectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteConnectionRequest() *DeleteConnectionRequest {
	this := DeleteConnectionRequest{}
	return &this
}

// NewDeleteConnectionRequestWithDefaults instantiates a new DeleteConnectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteConnectionRequestWithDefaults() *DeleteConnectionRequest {
	this := DeleteConnectionRequest{}
	return &this
}

// GetConnectionkey returns the Connectionkey field value if set, zero value otherwise.
func (o *DeleteConnectionRequest) GetConnectionkey() []string {
	if o == nil || IsNil(o.Connectionkey) {
		var ret []string
		return ret
	}
	return o.Connectionkey
}

// GetConnectionkeyOk returns a tuple with the Connectionkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteConnectionRequest) GetConnectionkeyOk() ([]string, bool) {
	if o == nil || IsNil(o.Connectionkey) {
		return nil, false
	}
	return o.Connectionkey, true
}

// HasConnectionkey returns a boolean if a field has been set.
func (o *DeleteConnectionRequest) HasConnectionkey() bool {
	if o != nil && !IsNil(o.Connectionkey) {
		return true
	}

	return false
}

// SetConnectionkey gets a reference to the given []string and assigns it to the Connectionkey field.
func (o *DeleteConnectionRequest) SetConnectionkey(v []string) {
	o.Connectionkey = v
}

// GetUpdateuser returns the Updateuser field value if set, zero value otherwise.
func (o *DeleteConnectionRequest) GetUpdateuser() string {
	if o == nil || IsNil(o.Updateuser) {
		var ret string
		return ret
	}
	return *o.Updateuser
}

// GetUpdateuserOk returns a tuple with the Updateuser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteConnectionRequest) GetUpdateuserOk() (*string, bool) {
	if o == nil || IsNil(o.Updateuser) {
		return nil, false
	}
	return o.Updateuser, true
}

// HasUpdateuser returns a boolean if a field has been set.
func (o *DeleteConnectionRequest) HasUpdateuser() bool {
	if o != nil && !IsNil(o.Updateuser) {
		return true
	}

	return false
}

// SetUpdateuser gets a reference to the given string and assigns it to the Updateuser field.
func (o *DeleteConnectionRequest) SetUpdateuser(v string) {
	o.Updateuser = &v
}

func (o DeleteConnectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteConnectionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Connectionkey) {
		toSerialize["connectionkey"] = o.Connectionkey
	}
	if !IsNil(o.Updateuser) {
		toSerialize["updateuser"] = o.Updateuser
	}
	return toSerialize, nil
}

type NullableDeleteConnectionRequest struct {
	value *DeleteConnectionRequest
	isSet bool
}

func (v NullableDeleteConnectionRequest) Get() *DeleteConnectionRequest {
	return v.value
}

func (v *NullableDeleteConnectionRequest) Set(val *DeleteConnectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteConnectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteConnectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteConnectionRequest(val *DeleteConnectionRequest) *NullableDeleteConnectionRequest {
	return &NullableDeleteConnectionRequest{value: val, isSet: true}
}

func (v NullableDeleteConnectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteConnectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


