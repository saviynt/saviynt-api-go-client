/*
testConnection Management API

Use this API to create a connection in Saviynt Identity Cloud.  The Authorization header must have \"Bearer {token}\".  **Mandatory Parameters:** - **connectionname**: Specify the name to identify the connection. - **connectiontype**: Specify a connection type. For example, if your target application is Active Directory, specify the connection type as \"AD\".  **Optional Parameters:** - **description**: Provide a description for the connection. - **defaultsavroles**: Specify the SAV role(s) required for managing this connection along with its associated security systems, endpoints, accounts, and entitlements. - **emailTemplate**: Specify the email template applicable for notifications. - **sslCertificate**: Specify the SSL certificate(s) to secure the connection between EIC and the target application. - **vaultConfiguration**: Specify the path of the vault to obtain secret data (suffix the connector name to make it unique). - **saveinvault**: Set to true to save the encrypted attribute in the configured vault.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connections

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WorkdayConnector type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkdayConnector{}

// WorkdayConnector struct for WorkdayConnector
type WorkdayConnector struct {
	BaseConnector
	// Property for USERS_LAST_IMPORT_TIME
	USERS_LAST_IMPORT_TIME *string `json:"USERS_LAST_IMPORT_TIME,omitempty"`
	// Property for ACCOUNTS_LAST_IMPORT_TIME
	ACCOUNTS_LAST_IMPORT_TIME *string `json:"ACCOUNTS_LAST_IMPORT_TIME,omitempty"`
	// Property for ACCESS_LAST_IMPORT_TIME
	ACCESS_LAST_IMPORT_TIME *string `json:"ACCESS_LAST_IMPORT_TIME,omitempty"`
	// Base URL of the Workday tenant instance
	BASE_URL *string `json:"BASE_URL,omitempty"`
	// Version of the SOAP API used for the connection.
	API_VERSION *string `json:"API_VERSION,omitempty"`
	// The name of your tenant.
	TENANT_NAME *string `json:"TENANT_NAME,omitempty"`
	// Account name of the report owner required for constructing the default URLs of RaaS reports
	REPORT_OWNER *string `json:"REPORT_OWNER,omitempty"`
	// By default, the reports are accessed through OAuth authentication
	USE_OAUTH string `json:"USE_OAUTH"`
	// if it is TRUE, descriptor attribute will be avialable in response.
	INCLUDE_REFERENCE_DESCRIPTORS *string `json:"INCLUDE_REFERENCE_DESCRIPTORS,omitempty"`
	// Set TRUE to utilize enhanced Organizational Role setup
	USE_ENHANCED_ORGROLE *string `json:"USE_ENHANCED_ORGROLE,omitempty"`
	//  it is TRUE certificate based authentication will happen.
	USEX509AUTHFORSOAP *string `json:"USE_X509AUTH_FOR_SOAP,omitempty"`
	// Specify the privateKey to be used
	X509KEY *string `json:"X509_KEY,omitempty"`
	// Specify the certificate to be used
	X509CERT *string `json:"X509_CERT,omitempty"`
	// The username to use for SOAP authentication.
	USERNAME *string `json:"USERNAME,omitempty"`
	// The password of the username used for authentication.
	PASSWORD *string `json:"PASSWORD,omitempty"`
	CLIENT_ID *string `json:"CLIENT_ID,omitempty"`
	CLIENT_SECRET *string `json:"CLIENT_SECRET,omitempty"`
	REFRESH_TOKEN *string `json:"REFRESH_TOKEN,omitempty"`
	// Specify the number of objects to return in a page for each import request from Workday
	PAGE_SIZE *string `json:"PAGE_SIZE,omitempty"`
	// Define the request payload for importing users
	USER_IMPORT_PAYLOAD *string `json:"USER_IMPORT_PAYLOAD,omitempty"`
	// Specify the User import Mapping
	USER_IMPORT_MAPPING *string `json:"USER_IMPORT_MAPPING,omitempty"`
	// Define the request payload for importing accounts
	ACCOUNT_IMPORT_PAYLOAD *string `json:"ACCOUNT_IMPORT_PAYLOAD,omitempty"`
	// Specify the Account import Mapping
	ACCOUNT_IMPORT_MAPPING *string `json:"ACCOUNT_IMPORT_MAPPING,omitempty"`
	// Specify the access types to import in a comma separated list
	ACCESS_IMPORT_LIST *string `json:"ACCESS_IMPORT_LIST,omitempty"`
	// Use this parameter if you want to override the default report mapping
	RAAS_MAPPING_JSON *string `json:"RAAS_MAPPING_JSON,omitempty"`
	// Define the access attribute mapping in addition to the default non-editable mapping for the Workday access objects
	ACCESS_IMPORT_MAPPING *string `json:"ACCESS_IMPORT_MAPPING,omitempty"`
	// Specify the custom SOAP body for the organization role import
	ORGROLE_IMPORT_PAYLOAD *string `json:"ORGROLE_IMPORT_PAYLOAD,omitempty"`
	// Specify this parameter if you want to read and import the status of an account and an entitlement.
	STATUS_THRESHOLD_CONFIG *string `json:"STATUS_THRESHOLD_CONFIG,omitempty"`
	// Define the request payload for creating an account in Workday
	CREATE_ACCOUNT_PAYLOAD *string `json:"CREATE_ACCOUNT_PAYLOAD,omitempty"`
	// Define the request payload for updating an account in Workday
	UPDATE_ACCOUNT_PAYLOAD *string `json:"UPDATE_ACCOUNT_PAYLOAD,omitempty"`
	// Define the request payload for updating an user in Workday
	UPDATE_USER_PAYLOAD *string `json:"UPDATE_USER_PAYLOAD,omitempty"`
	// Define the request payload for assigning an organizational role to an account in Workday
	ASSIGN_ORGROLE_PAYLOAD *string `json:"ASSIGN_ORGROLE_PAYLOAD,omitempty"`
	// Define the request payload for assigning an organizational role to an account in Workday
	REMOVE_ORGROLE_PAYLOAD *string `json:"REMOVE_ORGROLE_PAYLOAD,omitempty"`
	// Specify the mapping of user status
	STATUS_KEY_JSON *string `json:"STATUS_KEY_JSON,omitempty"`
	// JSON that specifies which job related attributes are to be stored as User Attributes
	USERATTRIBUTEJSON *string `json:"USERATTRIBUTEJSON,omitempty"`
	CUSTOM_CONFIG *string `json:"CUSTOM_CONFIG,omitempty"`
	PAM_CONFIG *string `json:"PAM_CONFIG,omitempty"`
	MODIFYUSERDATAJSON *string `json:"MODIFYUSERDATAJSON,omitempty"`
}

type _WorkdayConnector WorkdayConnector

// NewWorkdayConnector instantiates a new WorkdayConnector object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkdayConnector(uSEOAUTH string, connectionName string, connectiontype string) *WorkdayConnector {
	this := WorkdayConnector{}
	this.ConnectionName = connectionName
	this.Connectiontype = connectiontype
	this.USE_OAUTH = uSEOAUTH
	return &this
}

// NewWorkdayConnectorWithDefaults instantiates a new WorkdayConnector object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkdayConnectorWithDefaults() *WorkdayConnector {
	this := WorkdayConnector{}
	return &this
}

// GetUSERS_LAST_IMPORT_TIME returns the USERS_LAST_IMPORT_TIME field value if set, zero value otherwise.
func (o *WorkdayConnector) GetUSERS_LAST_IMPORT_TIME() string {
	if o == nil || IsNil(o.USERS_LAST_IMPORT_TIME) {
		var ret string
		return ret
	}
	return *o.USERS_LAST_IMPORT_TIME
}

// GetUSERS_LAST_IMPORT_TIMEOk returns a tuple with the USERS_LAST_IMPORT_TIME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetUSERS_LAST_IMPORT_TIMEOk() (*string, bool) {
	if o == nil || IsNil(o.USERS_LAST_IMPORT_TIME) {
		return nil, false
	}
	return o.USERS_LAST_IMPORT_TIME, true
}

// HasUSERS_LAST_IMPORT_TIME returns a boolean if a field has been set.
func (o *WorkdayConnector) HasUSERS_LAST_IMPORT_TIME() bool {
	if o != nil && !IsNil(o.USERS_LAST_IMPORT_TIME) {
		return true
	}

	return false
}

// SetUSERS_LAST_IMPORT_TIME gets a reference to the given string and assigns it to the USERS_LAST_IMPORT_TIME field.
func (o *WorkdayConnector) SetUSERS_LAST_IMPORT_TIME(v string) {
	o.USERS_LAST_IMPORT_TIME = &v
}

// GetACCOUNTS_LAST_IMPORT_TIME returns the ACCOUNTS_LAST_IMPORT_TIME field value if set, zero value otherwise.
func (o *WorkdayConnector) GetACCOUNTS_LAST_IMPORT_TIME() string {
	if o == nil || IsNil(o.ACCOUNTS_LAST_IMPORT_TIME) {
		var ret string
		return ret
	}
	return *o.ACCOUNTS_LAST_IMPORT_TIME
}

// GetACCOUNTS_LAST_IMPORT_TIMEOk returns a tuple with the ACCOUNTS_LAST_IMPORT_TIME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetACCOUNTS_LAST_IMPORT_TIMEOk() (*string, bool) {
	if o == nil || IsNil(o.ACCOUNTS_LAST_IMPORT_TIME) {
		return nil, false
	}
	return o.ACCOUNTS_LAST_IMPORT_TIME, true
}

// HasACCOUNTS_LAST_IMPORT_TIME returns a boolean if a field has been set.
func (o *WorkdayConnector) HasACCOUNTS_LAST_IMPORT_TIME() bool {
	if o != nil && !IsNil(o.ACCOUNTS_LAST_IMPORT_TIME) {
		return true
	}

	return false
}

// SetACCOUNTS_LAST_IMPORT_TIME gets a reference to the given string and assigns it to the ACCOUNTS_LAST_IMPORT_TIME field.
func (o *WorkdayConnector) SetACCOUNTS_LAST_IMPORT_TIME(v string) {
	o.ACCOUNTS_LAST_IMPORT_TIME = &v
}

// GetACCESS_LAST_IMPORT_TIME returns the ACCESS_LAST_IMPORT_TIME field value if set, zero value otherwise.
func (o *WorkdayConnector) GetACCESS_LAST_IMPORT_TIME() string {
	if o == nil || IsNil(o.ACCESS_LAST_IMPORT_TIME) {
		var ret string
		return ret
	}
	return *o.ACCESS_LAST_IMPORT_TIME
}

// GetACCESS_LAST_IMPORT_TIMEOk returns a tuple with the ACCESS_LAST_IMPORT_TIME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetACCESS_LAST_IMPORT_TIMEOk() (*string, bool) {
	if o == nil || IsNil(o.ACCESS_LAST_IMPORT_TIME) {
		return nil, false
	}
	return o.ACCESS_LAST_IMPORT_TIME, true
}

// HasACCESS_LAST_IMPORT_TIME returns a boolean if a field has been set.
func (o *WorkdayConnector) HasACCESS_LAST_IMPORT_TIME() bool {
	if o != nil && !IsNil(o.ACCESS_LAST_IMPORT_TIME) {
		return true
	}

	return false
}

// SetACCESS_LAST_IMPORT_TIME gets a reference to the given string and assigns it to the ACCESS_LAST_IMPORT_TIME field.
func (o *WorkdayConnector) SetACCESS_LAST_IMPORT_TIME(v string) {
	o.ACCESS_LAST_IMPORT_TIME = &v
}

// GetBASE_URL returns the BASE_URL field value if set, zero value otherwise.
func (o *WorkdayConnector) GetBASE_URL() string {
	if o == nil || IsNil(o.BASE_URL) {
		var ret string
		return ret
	}
	return *o.BASE_URL
}

// GetBASE_URLOk returns a tuple with the BASE_URL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetBASE_URLOk() (*string, bool) {
	if o == nil || IsNil(o.BASE_URL) {
		return nil, false
	}
	return o.BASE_URL, true
}

// HasBASE_URL returns a boolean if a field has been set.
func (o *WorkdayConnector) HasBASE_URL() bool {
	if o != nil && !IsNil(o.BASE_URL) {
		return true
	}

	return false
}

// SetBASE_URL gets a reference to the given string and assigns it to the BASE_URL field.
func (o *WorkdayConnector) SetBASE_URL(v string) {
	o.BASE_URL = &v
}

// GetAPI_VERSION returns the API_VERSION field value if set, zero value otherwise.
func (o *WorkdayConnector) GetAPI_VERSION() string {
	if o == nil || IsNil(o.API_VERSION) {
		var ret string
		return ret
	}
	return *o.API_VERSION
}

// GetAPI_VERSIONOk returns a tuple with the API_VERSION field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetAPI_VERSIONOk() (*string, bool) {
	if o == nil || IsNil(o.API_VERSION) {
		return nil, false
	}
	return o.API_VERSION, true
}

// HasAPI_VERSION returns a boolean if a field has been set.
func (o *WorkdayConnector) HasAPI_VERSION() bool {
	if o != nil && !IsNil(o.API_VERSION) {
		return true
	}

	return false
}

// SetAPI_VERSION gets a reference to the given string and assigns it to the API_VERSION field.
func (o *WorkdayConnector) SetAPI_VERSION(v string) {
	o.API_VERSION = &v
}

// GetTENANT_NAME returns the TENANT_NAME field value if set, zero value otherwise.
func (o *WorkdayConnector) GetTENANT_NAME() string {
	if o == nil || IsNil(o.TENANT_NAME) {
		var ret string
		return ret
	}
	return *o.TENANT_NAME
}

// GetTENANT_NAMEOk returns a tuple with the TENANT_NAME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetTENANT_NAMEOk() (*string, bool) {
	if o == nil || IsNil(o.TENANT_NAME) {
		return nil, false
	}
	return o.TENANT_NAME, true
}

// HasTENANT_NAME returns a boolean if a field has been set.
func (o *WorkdayConnector) HasTENANT_NAME() bool {
	if o != nil && !IsNil(o.TENANT_NAME) {
		return true
	}

	return false
}

// SetTENANT_NAME gets a reference to the given string and assigns it to the TENANT_NAME field.
func (o *WorkdayConnector) SetTENANT_NAME(v string) {
	o.TENANT_NAME = &v
}

// GetREPORT_OWNER returns the REPORT_OWNER field value if set, zero value otherwise.
func (o *WorkdayConnector) GetREPORT_OWNER() string {
	if o == nil || IsNil(o.REPORT_OWNER) {
		var ret string
		return ret
	}
	return *o.REPORT_OWNER
}

// GetREPORT_OWNEROk returns a tuple with the REPORT_OWNER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetREPORT_OWNEROk() (*string, bool) {
	if o == nil || IsNil(o.REPORT_OWNER) {
		return nil, false
	}
	return o.REPORT_OWNER, true
}

// HasREPORT_OWNER returns a boolean if a field has been set.
func (o *WorkdayConnector) HasREPORT_OWNER() bool {
	if o != nil && !IsNil(o.REPORT_OWNER) {
		return true
	}

	return false
}

// SetREPORT_OWNER gets a reference to the given string and assigns it to the REPORT_OWNER field.
func (o *WorkdayConnector) SetREPORT_OWNER(v string) {
	o.REPORT_OWNER = &v
}

// GetUSE_OAUTH returns the USE_OAUTH field value
func (o *WorkdayConnector) GetUSE_OAUTH() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.USE_OAUTH
}

// GetUSE_OAUTHOk returns a tuple with the USE_OAUTH field value
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetUSE_OAUTHOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.USE_OAUTH, true
}

// SetUSE_OAUTH sets field value
func (o *WorkdayConnector) SetUSE_OAUTH(v string) {
	o.USE_OAUTH = v
}

// GetINCLUDE_REFERENCE_DESCRIPTORS returns the INCLUDE_REFERENCE_DESCRIPTORS field value if set, zero value otherwise.
func (o *WorkdayConnector) GetINCLUDE_REFERENCE_DESCRIPTORS() string {
	if o == nil || IsNil(o.INCLUDE_REFERENCE_DESCRIPTORS) {
		var ret string
		return ret
	}
	return *o.INCLUDE_REFERENCE_DESCRIPTORS
}

// GetINCLUDE_REFERENCE_DESCRIPTORSOk returns a tuple with the INCLUDE_REFERENCE_DESCRIPTORS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetINCLUDE_REFERENCE_DESCRIPTORSOk() (*string, bool) {
	if o == nil || IsNil(o.INCLUDE_REFERENCE_DESCRIPTORS) {
		return nil, false
	}
	return o.INCLUDE_REFERENCE_DESCRIPTORS, true
}

// HasINCLUDE_REFERENCE_DESCRIPTORS returns a boolean if a field has been set.
func (o *WorkdayConnector) HasINCLUDE_REFERENCE_DESCRIPTORS() bool {
	if o != nil && !IsNil(o.INCLUDE_REFERENCE_DESCRIPTORS) {
		return true
	}

	return false
}

// SetINCLUDE_REFERENCE_DESCRIPTORS gets a reference to the given string and assigns it to the INCLUDE_REFERENCE_DESCRIPTORS field.
func (o *WorkdayConnector) SetINCLUDE_REFERENCE_DESCRIPTORS(v string) {
	o.INCLUDE_REFERENCE_DESCRIPTORS = &v
}

// GetUSE_ENHANCED_ORGROLE returns the USE_ENHANCED_ORGROLE field value if set, zero value otherwise.
func (o *WorkdayConnector) GetUSE_ENHANCED_ORGROLE() string {
	if o == nil || IsNil(o.USE_ENHANCED_ORGROLE) {
		var ret string
		return ret
	}
	return *o.USE_ENHANCED_ORGROLE
}

// GetUSE_ENHANCED_ORGROLEOk returns a tuple with the USE_ENHANCED_ORGROLE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetUSE_ENHANCED_ORGROLEOk() (*string, bool) {
	if o == nil || IsNil(o.USE_ENHANCED_ORGROLE) {
		return nil, false
	}
	return o.USE_ENHANCED_ORGROLE, true
}

// HasUSE_ENHANCED_ORGROLE returns a boolean if a field has been set.
func (o *WorkdayConnector) HasUSE_ENHANCED_ORGROLE() bool {
	if o != nil && !IsNil(o.USE_ENHANCED_ORGROLE) {
		return true
	}

	return false
}

// SetUSE_ENHANCED_ORGROLE gets a reference to the given string and assigns it to the USE_ENHANCED_ORGROLE field.
func (o *WorkdayConnector) SetUSE_ENHANCED_ORGROLE(v string) {
	o.USE_ENHANCED_ORGROLE = &v
}

// GetUSEX509AUTHFORSOAP returns the USEX509AUTHFORSOAP field value if set, zero value otherwise.
func (o *WorkdayConnector) GetUSEX509AUTHFORSOAP() string {
	if o == nil || IsNil(o.USEX509AUTHFORSOAP) {
		var ret string
		return ret
	}
	return *o.USEX509AUTHFORSOAP
}

// GetUSEX509AUTHFORSOAPOk returns a tuple with the USEX509AUTHFORSOAP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetUSEX509AUTHFORSOAPOk() (*string, bool) {
	if o == nil || IsNil(o.USEX509AUTHFORSOAP) {
		return nil, false
	}
	return o.USEX509AUTHFORSOAP, true
}

// HasUSEX509AUTHFORSOAP returns a boolean if a field has been set.
func (o *WorkdayConnector) HasUSEX509AUTHFORSOAP() bool {
	if o != nil && !IsNil(o.USEX509AUTHFORSOAP) {
		return true
	}

	return false
}

// SetUSEX509AUTHFORSOAP gets a reference to the given string and assigns it to the USEX509AUTHFORSOAP field.
func (o *WorkdayConnector) SetUSEX509AUTHFORSOAP(v string) {
	o.USEX509AUTHFORSOAP = &v
}

// GetX509KEY returns the X509KEY field value if set, zero value otherwise.
func (o *WorkdayConnector) GetX509KEY() string {
	if o == nil || IsNil(o.X509KEY) {
		var ret string
		return ret
	}
	return *o.X509KEY
}

// GetX509KEYOk returns a tuple with the X509KEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetX509KEYOk() (*string, bool) {
	if o == nil || IsNil(o.X509KEY) {
		return nil, false
	}
	return o.X509KEY, true
}

// HasX509KEY returns a boolean if a field has been set.
func (o *WorkdayConnector) HasX509KEY() bool {
	if o != nil && !IsNil(o.X509KEY) {
		return true
	}

	return false
}

// SetX509KEY gets a reference to the given string and assigns it to the X509KEY field.
func (o *WorkdayConnector) SetX509KEY(v string) {
	o.X509KEY = &v
}

// GetX509CERT returns the X509CERT field value if set, zero value otherwise.
func (o *WorkdayConnector) GetX509CERT() string {
	if o == nil || IsNil(o.X509CERT) {
		var ret string
		return ret
	}
	return *o.X509CERT
}

// GetX509CERTOk returns a tuple with the X509CERT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetX509CERTOk() (*string, bool) {
	if o == nil || IsNil(o.X509CERT) {
		return nil, false
	}
	return o.X509CERT, true
}

// HasX509CERT returns a boolean if a field has been set.
func (o *WorkdayConnector) HasX509CERT() bool {
	if o != nil && !IsNil(o.X509CERT) {
		return true
	}

	return false
}

// SetX509CERT gets a reference to the given string and assigns it to the X509CERT field.
func (o *WorkdayConnector) SetX509CERT(v string) {
	o.X509CERT = &v
}

// GetUSERNAME returns the USERNAME field value if set, zero value otherwise.
func (o *WorkdayConnector) GetUSERNAME() string {
	if o == nil || IsNil(o.USERNAME) {
		var ret string
		return ret
	}
	return *o.USERNAME
}

// GetUSERNAMEOk returns a tuple with the USERNAME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetUSERNAMEOk() (*string, bool) {
	if o == nil || IsNil(o.USERNAME) {
		return nil, false
	}
	return o.USERNAME, true
}

// HasUSERNAME returns a boolean if a field has been set.
func (o *WorkdayConnector) HasUSERNAME() bool {
	if o != nil && !IsNil(o.USERNAME) {
		return true
	}

	return false
}

// SetUSERNAME gets a reference to the given string and assigns it to the USERNAME field.
func (o *WorkdayConnector) SetUSERNAME(v string) {
	o.USERNAME = &v
}

// GetPASSWORD returns the PASSWORD field value if set, zero value otherwise.
func (o *WorkdayConnector) GetPASSWORD() string {
	if o == nil || IsNil(o.PASSWORD) {
		var ret string
		return ret
	}
	return *o.PASSWORD
}

// GetPASSWORDOk returns a tuple with the PASSWORD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetPASSWORDOk() (*string, bool) {
	if o == nil || IsNil(o.PASSWORD) {
		return nil, false
	}
	return o.PASSWORD, true
}

// HasPASSWORD returns a boolean if a field has been set.
func (o *WorkdayConnector) HasPASSWORD() bool {
	if o != nil && !IsNil(o.PASSWORD) {
		return true
	}

	return false
}

// SetPASSWORD gets a reference to the given string and assigns it to the PASSWORD field.
func (o *WorkdayConnector) SetPASSWORD(v string) {
	o.PASSWORD = &v
}

// GetCLIENT_ID returns the CLIENT_ID field value if set, zero value otherwise.
func (o *WorkdayConnector) GetCLIENT_ID() string {
	if o == nil || IsNil(o.CLIENT_ID) {
		var ret string
		return ret
	}
	return *o.CLIENT_ID
}

// GetCLIENT_IDOk returns a tuple with the CLIENT_ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetCLIENT_IDOk() (*string, bool) {
	if o == nil || IsNil(o.CLIENT_ID) {
		return nil, false
	}
	return o.CLIENT_ID, true
}

// HasCLIENT_ID returns a boolean if a field has been set.
func (o *WorkdayConnector) HasCLIENT_ID() bool {
	if o != nil && !IsNil(o.CLIENT_ID) {
		return true
	}

	return false
}

// SetCLIENT_ID gets a reference to the given string and assigns it to the CLIENT_ID field.
func (o *WorkdayConnector) SetCLIENT_ID(v string) {
	o.CLIENT_ID = &v
}

// GetCLIENT_SECRET returns the CLIENT_SECRET field value if set, zero value otherwise.
func (o *WorkdayConnector) GetCLIENT_SECRET() string {
	if o == nil || IsNil(o.CLIENT_SECRET) {
		var ret string
		return ret
	}
	return *o.CLIENT_SECRET
}

// GetCLIENT_SECRETOk returns a tuple with the CLIENT_SECRET field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetCLIENT_SECRETOk() (*string, bool) {
	if o == nil || IsNil(o.CLIENT_SECRET) {
		return nil, false
	}
	return o.CLIENT_SECRET, true
}

// HasCLIENT_SECRET returns a boolean if a field has been set.
func (o *WorkdayConnector) HasCLIENT_SECRET() bool {
	if o != nil && !IsNil(o.CLIENT_SECRET) {
		return true
	}

	return false
}

// SetCLIENT_SECRET gets a reference to the given string and assigns it to the CLIENT_SECRET field.
func (o *WorkdayConnector) SetCLIENT_SECRET(v string) {
	o.CLIENT_SECRET = &v
}

// GetREFRESH_TOKEN returns the REFRESH_TOKEN field value if set, zero value otherwise.
func (o *WorkdayConnector) GetREFRESH_TOKEN() string {
	if o == nil || IsNil(o.REFRESH_TOKEN) {
		var ret string
		return ret
	}
	return *o.REFRESH_TOKEN
}

// GetREFRESH_TOKENOk returns a tuple with the REFRESH_TOKEN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetREFRESH_TOKENOk() (*string, bool) {
	if o == nil || IsNil(o.REFRESH_TOKEN) {
		return nil, false
	}
	return o.REFRESH_TOKEN, true
}

// HasREFRESH_TOKEN returns a boolean if a field has been set.
func (o *WorkdayConnector) HasREFRESH_TOKEN() bool {
	if o != nil && !IsNil(o.REFRESH_TOKEN) {
		return true
	}

	return false
}

// SetREFRESH_TOKEN gets a reference to the given string and assigns it to the REFRESH_TOKEN field.
func (o *WorkdayConnector) SetREFRESH_TOKEN(v string) {
	o.REFRESH_TOKEN = &v
}

// GetPAGE_SIZE returns the PAGE_SIZE field value if set, zero value otherwise.
func (o *WorkdayConnector) GetPAGE_SIZE() string {
	if o == nil || IsNil(o.PAGE_SIZE) {
		var ret string
		return ret
	}
	return *o.PAGE_SIZE
}

// GetPAGE_SIZEOk returns a tuple with the PAGE_SIZE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetPAGE_SIZEOk() (*string, bool) {
	if o == nil || IsNil(o.PAGE_SIZE) {
		return nil, false
	}
	return o.PAGE_SIZE, true
}

// HasPAGE_SIZE returns a boolean if a field has been set.
func (o *WorkdayConnector) HasPAGE_SIZE() bool {
	if o != nil && !IsNil(o.PAGE_SIZE) {
		return true
	}

	return false
}

// SetPAGE_SIZE gets a reference to the given string and assigns it to the PAGE_SIZE field.
func (o *WorkdayConnector) SetPAGE_SIZE(v string) {
	o.PAGE_SIZE = &v
}

// GetUSER_IMPORT_PAYLOAD returns the USER_IMPORT_PAYLOAD field value if set, zero value otherwise.
func (o *WorkdayConnector) GetUSER_IMPORT_PAYLOAD() string {
	if o == nil || IsNil(o.USER_IMPORT_PAYLOAD) {
		var ret string
		return ret
	}
	return *o.USER_IMPORT_PAYLOAD
}

// GetUSER_IMPORT_PAYLOADOk returns a tuple with the USER_IMPORT_PAYLOAD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetUSER_IMPORT_PAYLOADOk() (*string, bool) {
	if o == nil || IsNil(o.USER_IMPORT_PAYLOAD) {
		return nil, false
	}
	return o.USER_IMPORT_PAYLOAD, true
}

// HasUSER_IMPORT_PAYLOAD returns a boolean if a field has been set.
func (o *WorkdayConnector) HasUSER_IMPORT_PAYLOAD() bool {
	if o != nil && !IsNil(o.USER_IMPORT_PAYLOAD) {
		return true
	}

	return false
}

// SetUSER_IMPORT_PAYLOAD gets a reference to the given string and assigns it to the USER_IMPORT_PAYLOAD field.
func (o *WorkdayConnector) SetUSER_IMPORT_PAYLOAD(v string) {
	o.USER_IMPORT_PAYLOAD = &v
}

// GetUSER_IMPORT_MAPPING returns the USER_IMPORT_MAPPING field value if set, zero value otherwise.
func (o *WorkdayConnector) GetUSER_IMPORT_MAPPING() string {
	if o == nil || IsNil(o.USER_IMPORT_MAPPING) {
		var ret string
		return ret
	}
	return *o.USER_IMPORT_MAPPING
}

// GetUSER_IMPORT_MAPPINGOk returns a tuple with the USER_IMPORT_MAPPING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetUSER_IMPORT_MAPPINGOk() (*string, bool) {
	if o == nil || IsNil(o.USER_IMPORT_MAPPING) {
		return nil, false
	}
	return o.USER_IMPORT_MAPPING, true
}

// HasUSER_IMPORT_MAPPING returns a boolean if a field has been set.
func (o *WorkdayConnector) HasUSER_IMPORT_MAPPING() bool {
	if o != nil && !IsNil(o.USER_IMPORT_MAPPING) {
		return true
	}

	return false
}

// SetUSER_IMPORT_MAPPING gets a reference to the given string and assigns it to the USER_IMPORT_MAPPING field.
func (o *WorkdayConnector) SetUSER_IMPORT_MAPPING(v string) {
	o.USER_IMPORT_MAPPING = &v
}

// GetACCOUNT_IMPORT_PAYLOAD returns the ACCOUNT_IMPORT_PAYLOAD field value if set, zero value otherwise.
func (o *WorkdayConnector) GetACCOUNT_IMPORT_PAYLOAD() string {
	if o == nil || IsNil(o.ACCOUNT_IMPORT_PAYLOAD) {
		var ret string
		return ret
	}
	return *o.ACCOUNT_IMPORT_PAYLOAD
}

// GetACCOUNT_IMPORT_PAYLOADOk returns a tuple with the ACCOUNT_IMPORT_PAYLOAD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetACCOUNT_IMPORT_PAYLOADOk() (*string, bool) {
	if o == nil || IsNil(o.ACCOUNT_IMPORT_PAYLOAD) {
		return nil, false
	}
	return o.ACCOUNT_IMPORT_PAYLOAD, true
}

// HasACCOUNT_IMPORT_PAYLOAD returns a boolean if a field has been set.
func (o *WorkdayConnector) HasACCOUNT_IMPORT_PAYLOAD() bool {
	if o != nil && !IsNil(o.ACCOUNT_IMPORT_PAYLOAD) {
		return true
	}

	return false
}

// SetACCOUNT_IMPORT_PAYLOAD gets a reference to the given string and assigns it to the ACCOUNT_IMPORT_PAYLOAD field.
func (o *WorkdayConnector) SetACCOUNT_IMPORT_PAYLOAD(v string) {
	o.ACCOUNT_IMPORT_PAYLOAD = &v
}

// GetACCOUNT_IMPORT_MAPPING returns the ACCOUNT_IMPORT_MAPPING field value if set, zero value otherwise.
func (o *WorkdayConnector) GetACCOUNT_IMPORT_MAPPING() string {
	if o == nil || IsNil(o.ACCOUNT_IMPORT_MAPPING) {
		var ret string
		return ret
	}
	return *o.ACCOUNT_IMPORT_MAPPING
}

// GetACCOUNT_IMPORT_MAPPINGOk returns a tuple with the ACCOUNT_IMPORT_MAPPING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetACCOUNT_IMPORT_MAPPINGOk() (*string, bool) {
	if o == nil || IsNil(o.ACCOUNT_IMPORT_MAPPING) {
		return nil, false
	}
	return o.ACCOUNT_IMPORT_MAPPING, true
}

// HasACCOUNT_IMPORT_MAPPING returns a boolean if a field has been set.
func (o *WorkdayConnector) HasACCOUNT_IMPORT_MAPPING() bool {
	if o != nil && !IsNil(o.ACCOUNT_IMPORT_MAPPING) {
		return true
	}

	return false
}

// SetACCOUNT_IMPORT_MAPPING gets a reference to the given string and assigns it to the ACCOUNT_IMPORT_MAPPING field.
func (o *WorkdayConnector) SetACCOUNT_IMPORT_MAPPING(v string) {
	o.ACCOUNT_IMPORT_MAPPING = &v
}

// GetACCESS_IMPORT_LIST returns the ACCESS_IMPORT_LIST field value if set, zero value otherwise.
func (o *WorkdayConnector) GetACCESS_IMPORT_LIST() string {
	if o == nil || IsNil(o.ACCESS_IMPORT_LIST) {
		var ret string
		return ret
	}
	return *o.ACCESS_IMPORT_LIST
}

// GetACCESS_IMPORT_LISTOk returns a tuple with the ACCESS_IMPORT_LIST field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetACCESS_IMPORT_LISTOk() (*string, bool) {
	if o == nil || IsNil(o.ACCESS_IMPORT_LIST) {
		return nil, false
	}
	return o.ACCESS_IMPORT_LIST, true
}

// HasACCESS_IMPORT_LIST returns a boolean if a field has been set.
func (o *WorkdayConnector) HasACCESS_IMPORT_LIST() bool {
	if o != nil && !IsNil(o.ACCESS_IMPORT_LIST) {
		return true
	}

	return false
}

// SetACCESS_IMPORT_LIST gets a reference to the given string and assigns it to the ACCESS_IMPORT_LIST field.
func (o *WorkdayConnector) SetACCESS_IMPORT_LIST(v string) {
	o.ACCESS_IMPORT_LIST = &v
}

// GetRAAS_MAPPING_JSON returns the RAAS_MAPPING_JSON field value if set, zero value otherwise.
func (o *WorkdayConnector) GetRAAS_MAPPING_JSON() string {
	if o == nil || IsNil(o.RAAS_MAPPING_JSON) {
		var ret string
		return ret
	}
	return *o.RAAS_MAPPING_JSON
}

// GetRAAS_MAPPING_JSONOk returns a tuple with the RAAS_MAPPING_JSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetRAAS_MAPPING_JSONOk() (*string, bool) {
	if o == nil || IsNil(o.RAAS_MAPPING_JSON) {
		return nil, false
	}
	return o.RAAS_MAPPING_JSON, true
}

// HasRAAS_MAPPING_JSON returns a boolean if a field has been set.
func (o *WorkdayConnector) HasRAAS_MAPPING_JSON() bool {
	if o != nil && !IsNil(o.RAAS_MAPPING_JSON) {
		return true
	}

	return false
}

// SetRAAS_MAPPING_JSON gets a reference to the given string and assigns it to the RAAS_MAPPING_JSON field.
func (o *WorkdayConnector) SetRAAS_MAPPING_JSON(v string) {
	o.RAAS_MAPPING_JSON = &v
}

// GetACCESS_IMPORT_MAPPING returns the ACCESS_IMPORT_MAPPING field value if set, zero value otherwise.
func (o *WorkdayConnector) GetACCESS_IMPORT_MAPPING() string {
	if o == nil || IsNil(o.ACCESS_IMPORT_MAPPING) {
		var ret string
		return ret
	}
	return *o.ACCESS_IMPORT_MAPPING
}

// GetACCESS_IMPORT_MAPPINGOk returns a tuple with the ACCESS_IMPORT_MAPPING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetACCESS_IMPORT_MAPPINGOk() (*string, bool) {
	if o == nil || IsNil(o.ACCESS_IMPORT_MAPPING) {
		return nil, false
	}
	return o.ACCESS_IMPORT_MAPPING, true
}

// HasACCESS_IMPORT_MAPPING returns a boolean if a field has been set.
func (o *WorkdayConnector) HasACCESS_IMPORT_MAPPING() bool {
	if o != nil && !IsNil(o.ACCESS_IMPORT_MAPPING) {
		return true
	}

	return false
}

// SetACCESS_IMPORT_MAPPING gets a reference to the given string and assigns it to the ACCESS_IMPORT_MAPPING field.
func (o *WorkdayConnector) SetACCESS_IMPORT_MAPPING(v string) {
	o.ACCESS_IMPORT_MAPPING = &v
}

// GetORGROLE_IMPORT_PAYLOAD returns the ORGROLE_IMPORT_PAYLOAD field value if set, zero value otherwise.
func (o *WorkdayConnector) GetORGROLE_IMPORT_PAYLOAD() string {
	if o == nil || IsNil(o.ORGROLE_IMPORT_PAYLOAD) {
		var ret string
		return ret
	}
	return *o.ORGROLE_IMPORT_PAYLOAD
}

// GetORGROLE_IMPORT_PAYLOADOk returns a tuple with the ORGROLE_IMPORT_PAYLOAD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetORGROLE_IMPORT_PAYLOADOk() (*string, bool) {
	if o == nil || IsNil(o.ORGROLE_IMPORT_PAYLOAD) {
		return nil, false
	}
	return o.ORGROLE_IMPORT_PAYLOAD, true
}

// HasORGROLE_IMPORT_PAYLOAD returns a boolean if a field has been set.
func (o *WorkdayConnector) HasORGROLE_IMPORT_PAYLOAD() bool {
	if o != nil && !IsNil(o.ORGROLE_IMPORT_PAYLOAD) {
		return true
	}

	return false
}

// SetORGROLE_IMPORT_PAYLOAD gets a reference to the given string and assigns it to the ORGROLE_IMPORT_PAYLOAD field.
func (o *WorkdayConnector) SetORGROLE_IMPORT_PAYLOAD(v string) {
	o.ORGROLE_IMPORT_PAYLOAD = &v
}

// GetSTATUS_THRESHOLD_CONFIG returns the STATUS_THRESHOLD_CONFIG field value if set, zero value otherwise.
func (o *WorkdayConnector) GetSTATUS_THRESHOLD_CONFIG() string {
	if o == nil || IsNil(o.STATUS_THRESHOLD_CONFIG) {
		var ret string
		return ret
	}
	return *o.STATUS_THRESHOLD_CONFIG
}

// GetSTATUS_THRESHOLD_CONFIGOk returns a tuple with the STATUS_THRESHOLD_CONFIG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetSTATUS_THRESHOLD_CONFIGOk() (*string, bool) {
	if o == nil || IsNil(o.STATUS_THRESHOLD_CONFIG) {
		return nil, false
	}
	return o.STATUS_THRESHOLD_CONFIG, true
}

// HasSTATUS_THRESHOLD_CONFIG returns a boolean if a field has been set.
func (o *WorkdayConnector) HasSTATUS_THRESHOLD_CONFIG() bool {
	if o != nil && !IsNil(o.STATUS_THRESHOLD_CONFIG) {
		return true
	}

	return false
}

// SetSTATUS_THRESHOLD_CONFIG gets a reference to the given string and assigns it to the STATUS_THRESHOLD_CONFIG field.
func (o *WorkdayConnector) SetSTATUS_THRESHOLD_CONFIG(v string) {
	o.STATUS_THRESHOLD_CONFIG = &v
}

// GetCREATE_ACCOUNT_PAYLOAD returns the CREATE_ACCOUNT_PAYLOAD field value if set, zero value otherwise.
func (o *WorkdayConnector) GetCREATE_ACCOUNT_PAYLOAD() string {
	if o == nil || IsNil(o.CREATE_ACCOUNT_PAYLOAD) {
		var ret string
		return ret
	}
	return *o.CREATE_ACCOUNT_PAYLOAD
}

// GetCREATE_ACCOUNT_PAYLOADOk returns a tuple with the CREATE_ACCOUNT_PAYLOAD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetCREATE_ACCOUNT_PAYLOADOk() (*string, bool) {
	if o == nil || IsNil(o.CREATE_ACCOUNT_PAYLOAD) {
		return nil, false
	}
	return o.CREATE_ACCOUNT_PAYLOAD, true
}

// HasCREATE_ACCOUNT_PAYLOAD returns a boolean if a field has been set.
func (o *WorkdayConnector) HasCREATE_ACCOUNT_PAYLOAD() bool {
	if o != nil && !IsNil(o.CREATE_ACCOUNT_PAYLOAD) {
		return true
	}

	return false
}

// SetCREATE_ACCOUNT_PAYLOAD gets a reference to the given string and assigns it to the CREATE_ACCOUNT_PAYLOAD field.
func (o *WorkdayConnector) SetCREATE_ACCOUNT_PAYLOAD(v string) {
	o.CREATE_ACCOUNT_PAYLOAD = &v
}

// GetUPDATE_ACCOUNT_PAYLOAD returns the UPDATE_ACCOUNT_PAYLOAD field value if set, zero value otherwise.
func (o *WorkdayConnector) GetUPDATE_ACCOUNT_PAYLOAD() string {
	if o == nil || IsNil(o.UPDATE_ACCOUNT_PAYLOAD) {
		var ret string
		return ret
	}
	return *o.UPDATE_ACCOUNT_PAYLOAD
}

// GetUPDATE_ACCOUNT_PAYLOADOk returns a tuple with the UPDATE_ACCOUNT_PAYLOAD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetUPDATE_ACCOUNT_PAYLOADOk() (*string, bool) {
	if o == nil || IsNil(o.UPDATE_ACCOUNT_PAYLOAD) {
		return nil, false
	}
	return o.UPDATE_ACCOUNT_PAYLOAD, true
}

// HasUPDATE_ACCOUNT_PAYLOAD returns a boolean if a field has been set.
func (o *WorkdayConnector) HasUPDATE_ACCOUNT_PAYLOAD() bool {
	if o != nil && !IsNil(o.UPDATE_ACCOUNT_PAYLOAD) {
		return true
	}

	return false
}

// SetUPDATE_ACCOUNT_PAYLOAD gets a reference to the given string and assigns it to the UPDATE_ACCOUNT_PAYLOAD field.
func (o *WorkdayConnector) SetUPDATE_ACCOUNT_PAYLOAD(v string) {
	o.UPDATE_ACCOUNT_PAYLOAD = &v
}

// GetUPDATE_USER_PAYLOAD returns the UPDATE_USER_PAYLOAD field value if set, zero value otherwise.
func (o *WorkdayConnector) GetUPDATE_USER_PAYLOAD() string {
	if o == nil || IsNil(o.UPDATE_USER_PAYLOAD) {
		var ret string
		return ret
	}
	return *o.UPDATE_USER_PAYLOAD
}

// GetUPDATE_USER_PAYLOADOk returns a tuple with the UPDATE_USER_PAYLOAD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetUPDATE_USER_PAYLOADOk() (*string, bool) {
	if o == nil || IsNil(o.UPDATE_USER_PAYLOAD) {
		return nil, false
	}
	return o.UPDATE_USER_PAYLOAD, true
}

// HasUPDATE_USER_PAYLOAD returns a boolean if a field has been set.
func (o *WorkdayConnector) HasUPDATE_USER_PAYLOAD() bool {
	if o != nil && !IsNil(o.UPDATE_USER_PAYLOAD) {
		return true
	}

	return false
}

// SetUPDATE_USER_PAYLOAD gets a reference to the given string and assigns it to the UPDATE_USER_PAYLOAD field.
func (o *WorkdayConnector) SetUPDATE_USER_PAYLOAD(v string) {
	o.UPDATE_USER_PAYLOAD = &v
}

// GetASSIGN_ORGROLE_PAYLOAD returns the ASSIGN_ORGROLE_PAYLOAD field value if set, zero value otherwise.
func (o *WorkdayConnector) GetASSIGN_ORGROLE_PAYLOAD() string {
	if o == nil || IsNil(o.ASSIGN_ORGROLE_PAYLOAD) {
		var ret string
		return ret
	}
	return *o.ASSIGN_ORGROLE_PAYLOAD
}

// GetASSIGN_ORGROLE_PAYLOADOk returns a tuple with the ASSIGN_ORGROLE_PAYLOAD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetASSIGN_ORGROLE_PAYLOADOk() (*string, bool) {
	if o == nil || IsNil(o.ASSIGN_ORGROLE_PAYLOAD) {
		return nil, false
	}
	return o.ASSIGN_ORGROLE_PAYLOAD, true
}

// HasASSIGN_ORGROLE_PAYLOAD returns a boolean if a field has been set.
func (o *WorkdayConnector) HasASSIGN_ORGROLE_PAYLOAD() bool {
	if o != nil && !IsNil(o.ASSIGN_ORGROLE_PAYLOAD) {
		return true
	}

	return false
}

// SetASSIGN_ORGROLE_PAYLOAD gets a reference to the given string and assigns it to the ASSIGN_ORGROLE_PAYLOAD field.
func (o *WorkdayConnector) SetASSIGN_ORGROLE_PAYLOAD(v string) {
	o.ASSIGN_ORGROLE_PAYLOAD = &v
}

// GetREMOVE_ORGROLE_PAYLOAD returns the REMOVE_ORGROLE_PAYLOAD field value if set, zero value otherwise.
func (o *WorkdayConnector) GetREMOVE_ORGROLE_PAYLOAD() string {
	if o == nil || IsNil(o.REMOVE_ORGROLE_PAYLOAD) {
		var ret string
		return ret
	}
	return *o.REMOVE_ORGROLE_PAYLOAD
}

// GetREMOVE_ORGROLE_PAYLOADOk returns a tuple with the REMOVE_ORGROLE_PAYLOAD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetREMOVE_ORGROLE_PAYLOADOk() (*string, bool) {
	if o == nil || IsNil(o.REMOVE_ORGROLE_PAYLOAD) {
		return nil, false
	}
	return o.REMOVE_ORGROLE_PAYLOAD, true
}

// HasREMOVE_ORGROLE_PAYLOAD returns a boolean if a field has been set.
func (o *WorkdayConnector) HasREMOVE_ORGROLE_PAYLOAD() bool {
	if o != nil && !IsNil(o.REMOVE_ORGROLE_PAYLOAD) {
		return true
	}

	return false
}

// SetREMOVE_ORGROLE_PAYLOAD gets a reference to the given string and assigns it to the REMOVE_ORGROLE_PAYLOAD field.
func (o *WorkdayConnector) SetREMOVE_ORGROLE_PAYLOAD(v string) {
	o.REMOVE_ORGROLE_PAYLOAD = &v
}

// GetSTATUS_KEY_JSON returns the STATUS_KEY_JSON field value if set, zero value otherwise.
func (o *WorkdayConnector) GetSTATUS_KEY_JSON() string {
	if o == nil || IsNil(o.STATUS_KEY_JSON) {
		var ret string
		return ret
	}
	return *o.STATUS_KEY_JSON
}

// GetSTATUS_KEY_JSONOk returns a tuple with the STATUS_KEY_JSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetSTATUS_KEY_JSONOk() (*string, bool) {
	if o == nil || IsNil(o.STATUS_KEY_JSON) {
		return nil, false
	}
	return o.STATUS_KEY_JSON, true
}

// HasSTATUS_KEY_JSON returns a boolean if a field has been set.
func (o *WorkdayConnector) HasSTATUS_KEY_JSON() bool {
	if o != nil && !IsNil(o.STATUS_KEY_JSON) {
		return true
	}

	return false
}

// SetSTATUS_KEY_JSON gets a reference to the given string and assigns it to the STATUS_KEY_JSON field.
func (o *WorkdayConnector) SetSTATUS_KEY_JSON(v string) {
	o.STATUS_KEY_JSON = &v
}

// GetUSERATTRIBUTEJSON returns the USERATTRIBUTEJSON field value if set, zero value otherwise.
func (o *WorkdayConnector) GetUSERATTRIBUTEJSON() string {
	if o == nil || IsNil(o.USERATTRIBUTEJSON) {
		var ret string
		return ret
	}
	return *o.USERATTRIBUTEJSON
}

// GetUSERATTRIBUTEJSONOk returns a tuple with the USERATTRIBUTEJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetUSERATTRIBUTEJSONOk() (*string, bool) {
	if o == nil || IsNil(o.USERATTRIBUTEJSON) {
		return nil, false
	}
	return o.USERATTRIBUTEJSON, true
}

// HasUSERATTRIBUTEJSON returns a boolean if a field has been set.
func (o *WorkdayConnector) HasUSERATTRIBUTEJSON() bool {
	if o != nil && !IsNil(o.USERATTRIBUTEJSON) {
		return true
	}

	return false
}

// SetUSERATTRIBUTEJSON gets a reference to the given string and assigns it to the USERATTRIBUTEJSON field.
func (o *WorkdayConnector) SetUSERATTRIBUTEJSON(v string) {
	o.USERATTRIBUTEJSON = &v
}

// GetCUSTOM_CONFIG returns the CUSTOM_CONFIG field value if set, zero value otherwise.
func (o *WorkdayConnector) GetCUSTOM_CONFIG() string {
	if o == nil || IsNil(o.CUSTOM_CONFIG) {
		var ret string
		return ret
	}
	return *o.CUSTOM_CONFIG
}

// GetCUSTOM_CONFIGOk returns a tuple with the CUSTOM_CONFIG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetCUSTOM_CONFIGOk() (*string, bool) {
	if o == nil || IsNil(o.CUSTOM_CONFIG) {
		return nil, false
	}
	return o.CUSTOM_CONFIG, true
}

// HasCUSTOM_CONFIG returns a boolean if a field has been set.
func (o *WorkdayConnector) HasCUSTOM_CONFIG() bool {
	if o != nil && !IsNil(o.CUSTOM_CONFIG) {
		return true
	}

	return false
}

// SetCUSTOM_CONFIG gets a reference to the given string and assigns it to the CUSTOM_CONFIG field.
func (o *WorkdayConnector) SetCUSTOM_CONFIG(v string) {
	o.CUSTOM_CONFIG = &v
}

// GetPAM_CONFIG returns the PAM_CONFIG field value if set, zero value otherwise.
func (o *WorkdayConnector) GetPAM_CONFIG() string {
	if o == nil || IsNil(o.PAM_CONFIG) {
		var ret string
		return ret
	}
	return *o.PAM_CONFIG
}

// GetPAM_CONFIGOk returns a tuple with the PAM_CONFIG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetPAM_CONFIGOk() (*string, bool) {
	if o == nil || IsNil(o.PAM_CONFIG) {
		return nil, false
	}
	return o.PAM_CONFIG, true
}

// HasPAM_CONFIG returns a boolean if a field has been set.
func (o *WorkdayConnector) HasPAM_CONFIG() bool {
	if o != nil && !IsNil(o.PAM_CONFIG) {
		return true
	}

	return false
}

// SetPAM_CONFIG gets a reference to the given string and assigns it to the PAM_CONFIG field.
func (o *WorkdayConnector) SetPAM_CONFIG(v string) {
	o.PAM_CONFIG = &v
}

// GetMODIFYUSERDATAJSON returns the MODIFYUSERDATAJSON field value if set, zero value otherwise.
func (o *WorkdayConnector) GetMODIFYUSERDATAJSON() string {
	if o == nil || IsNil(o.MODIFYUSERDATAJSON) {
		var ret string
		return ret
	}
	return *o.MODIFYUSERDATAJSON
}

// GetMODIFYUSERDATAJSONOk returns a tuple with the MODIFYUSERDATAJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkdayConnector) GetMODIFYUSERDATAJSONOk() (*string, bool) {
	if o == nil || IsNil(o.MODIFYUSERDATAJSON) {
		return nil, false
	}
	return o.MODIFYUSERDATAJSON, true
}

// HasMODIFYUSERDATAJSON returns a boolean if a field has been set.
func (o *WorkdayConnector) HasMODIFYUSERDATAJSON() bool {
	if o != nil && !IsNil(o.MODIFYUSERDATAJSON) {
		return true
	}

	return false
}

// SetMODIFYUSERDATAJSON gets a reference to the given string and assigns it to the MODIFYUSERDATAJSON field.
func (o *WorkdayConnector) SetMODIFYUSERDATAJSON(v string) {
	o.MODIFYUSERDATAJSON = &v
}

func (o WorkdayConnector) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkdayConnector) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedBaseConnector, errBaseConnector := json.Marshal(o.BaseConnector)
	if errBaseConnector != nil {
		return map[string]interface{}{}, errBaseConnector
	}
	errBaseConnector = json.Unmarshal([]byte(serializedBaseConnector), &toSerialize)
	if errBaseConnector != nil {
		return map[string]interface{}{}, errBaseConnector
	}
	if !IsNil(o.USERS_LAST_IMPORT_TIME) {
		toSerialize["USERS_LAST_IMPORT_TIME"] = o.USERS_LAST_IMPORT_TIME
	}
	if !IsNil(o.ACCOUNTS_LAST_IMPORT_TIME) {
		toSerialize["ACCOUNTS_LAST_IMPORT_TIME"] = o.ACCOUNTS_LAST_IMPORT_TIME
	}
	if !IsNil(o.ACCESS_LAST_IMPORT_TIME) {
		toSerialize["ACCESS_LAST_IMPORT_TIME"] = o.ACCESS_LAST_IMPORT_TIME
	}
	if !IsNil(o.BASE_URL) {
		toSerialize["BASE_URL"] = o.BASE_URL
	}
	if !IsNil(o.API_VERSION) {
		toSerialize["API_VERSION"] = o.API_VERSION
	}
	if !IsNil(o.TENANT_NAME) {
		toSerialize["TENANT_NAME"] = o.TENANT_NAME
	}
	if !IsNil(o.REPORT_OWNER) {
		toSerialize["REPORT_OWNER"] = o.REPORT_OWNER
	}
	toSerialize["USE_OAUTH"] = o.USE_OAUTH
	if !IsNil(o.INCLUDE_REFERENCE_DESCRIPTORS) {
		toSerialize["INCLUDE_REFERENCE_DESCRIPTORS"] = o.INCLUDE_REFERENCE_DESCRIPTORS
	}
	if !IsNil(o.USE_ENHANCED_ORGROLE) {
		toSerialize["USE_ENHANCED_ORGROLE"] = o.USE_ENHANCED_ORGROLE
	}
	if !IsNil(o.USEX509AUTHFORSOAP) {
		toSerialize["USE_X509AUTH_FOR_SOAP"] = o.USEX509AUTHFORSOAP
	}
	if !IsNil(o.X509KEY) {
		toSerialize["X509_KEY"] = o.X509KEY
	}
	if !IsNil(o.X509CERT) {
		toSerialize["X509_CERT"] = o.X509CERT
	}
	if !IsNil(o.USERNAME) {
		toSerialize["USERNAME"] = o.USERNAME
	}
	if !IsNil(o.PASSWORD) {
		toSerialize["PASSWORD"] = o.PASSWORD
	}
	if !IsNil(o.CLIENT_ID) {
		toSerialize["CLIENT_ID"] = o.CLIENT_ID
	}
	if !IsNil(o.CLIENT_SECRET) {
		toSerialize["CLIENT_SECRET"] = o.CLIENT_SECRET
	}
	if !IsNil(o.REFRESH_TOKEN) {
		toSerialize["REFRESH_TOKEN"] = o.REFRESH_TOKEN
	}
	if !IsNil(o.PAGE_SIZE) {
		toSerialize["PAGE_SIZE"] = o.PAGE_SIZE
	}
	if !IsNil(o.USER_IMPORT_PAYLOAD) {
		toSerialize["USER_IMPORT_PAYLOAD"] = o.USER_IMPORT_PAYLOAD
	}
	if !IsNil(o.USER_IMPORT_MAPPING) {
		toSerialize["USER_IMPORT_MAPPING"] = o.USER_IMPORT_MAPPING
	}
	if !IsNil(o.ACCOUNT_IMPORT_PAYLOAD) {
		toSerialize["ACCOUNT_IMPORT_PAYLOAD"] = o.ACCOUNT_IMPORT_PAYLOAD
	}
	if !IsNil(o.ACCOUNT_IMPORT_MAPPING) {
		toSerialize["ACCOUNT_IMPORT_MAPPING"] = o.ACCOUNT_IMPORT_MAPPING
	}
	if !IsNil(o.ACCESS_IMPORT_LIST) {
		toSerialize["ACCESS_IMPORT_LIST"] = o.ACCESS_IMPORT_LIST
	}
	if !IsNil(o.RAAS_MAPPING_JSON) {
		toSerialize["RAAS_MAPPING_JSON"] = o.RAAS_MAPPING_JSON
	}
	if !IsNil(o.ACCESS_IMPORT_MAPPING) {
		toSerialize["ACCESS_IMPORT_MAPPING"] = o.ACCESS_IMPORT_MAPPING
	}
	if !IsNil(o.ORGROLE_IMPORT_PAYLOAD) {
		toSerialize["ORGROLE_IMPORT_PAYLOAD"] = o.ORGROLE_IMPORT_PAYLOAD
	}
	if !IsNil(o.STATUS_THRESHOLD_CONFIG) {
		toSerialize["STATUS_THRESHOLD_CONFIG"] = o.STATUS_THRESHOLD_CONFIG
	}
	if !IsNil(o.CREATE_ACCOUNT_PAYLOAD) {
		toSerialize["CREATE_ACCOUNT_PAYLOAD"] = o.CREATE_ACCOUNT_PAYLOAD
	}
	if !IsNil(o.UPDATE_ACCOUNT_PAYLOAD) {
		toSerialize["UPDATE_ACCOUNT_PAYLOAD"] = o.UPDATE_ACCOUNT_PAYLOAD
	}
	if !IsNil(o.UPDATE_USER_PAYLOAD) {
		toSerialize["UPDATE_USER_PAYLOAD"] = o.UPDATE_USER_PAYLOAD
	}
	if !IsNil(o.ASSIGN_ORGROLE_PAYLOAD) {
		toSerialize["ASSIGN_ORGROLE_PAYLOAD"] = o.ASSIGN_ORGROLE_PAYLOAD
	}
	if !IsNil(o.REMOVE_ORGROLE_PAYLOAD) {
		toSerialize["REMOVE_ORGROLE_PAYLOAD"] = o.REMOVE_ORGROLE_PAYLOAD
	}
	if !IsNil(o.STATUS_KEY_JSON) {
		toSerialize["STATUS_KEY_JSON"] = o.STATUS_KEY_JSON
	}
	if !IsNil(o.USERATTRIBUTEJSON) {
		toSerialize["USERATTRIBUTEJSON"] = o.USERATTRIBUTEJSON
	}
	if !IsNil(o.CUSTOM_CONFIG) {
		toSerialize["CUSTOM_CONFIG"] = o.CUSTOM_CONFIG
	}
	if !IsNil(o.PAM_CONFIG) {
		toSerialize["PAM_CONFIG"] = o.PAM_CONFIG
	}
	if !IsNil(o.MODIFYUSERDATAJSON) {
		toSerialize["MODIFYUSERDATAJSON"] = o.MODIFYUSERDATAJSON
	}
	return toSerialize, nil
}

func (o *WorkdayConnector) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"USE_OAUTH",
		"connectionName",
		"connectiontype",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkdayConnector := _WorkdayConnector{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkdayConnector)

	if err != nil {
		return err
	}

	*o = WorkdayConnector(varWorkdayConnector)

	return err
}

type NullableWorkdayConnector struct {
	value *WorkdayConnector
	isSet bool
}

func (v NullableWorkdayConnector) Get() *WorkdayConnector {
	return v.value
}

func (v *NullableWorkdayConnector) Set(val *WorkdayConnector) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkdayConnector) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkdayConnector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkdayConnector(val *WorkdayConnector) *NullableWorkdayConnector {
	return &NullableWorkdayConnector{value: val, isSet: true}
}

func (v NullableWorkdayConnector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkdayConnector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


