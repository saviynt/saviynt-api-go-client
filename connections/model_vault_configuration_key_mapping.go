/*
Saviynt Connections API

Connections

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connections

import (
	"encoding/json"
)

// checks if the VaultConfigurationKeyMapping type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VaultConfigurationKeyMapping{}

// VaultConfigurationKeyMapping struct for VaultConfigurationKeyMapping
type VaultConfigurationKeyMapping struct {
	AUTHTOKEN *string `json:"AUTHTOKEN,omitempty"`
	PASSWORD *VaultConfigurationKeyMappingPassword `json:"PASSWORD,omitempty"`
}

// NewVaultConfigurationKeyMapping instantiates a new VaultConfigurationKeyMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVaultConfigurationKeyMapping() *VaultConfigurationKeyMapping {
	this := VaultConfigurationKeyMapping{}
	return &this
}

// NewVaultConfigurationKeyMappingWithDefaults instantiates a new VaultConfigurationKeyMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVaultConfigurationKeyMappingWithDefaults() *VaultConfigurationKeyMapping {
	this := VaultConfigurationKeyMapping{}
	return &this
}

// GetAUTHTOKEN returns the AUTHTOKEN field value if set, zero value otherwise.
func (o *VaultConfigurationKeyMapping) GetAUTHTOKEN() string {
	if o == nil || IsNil(o.AUTHTOKEN) {
		var ret string
		return ret
	}
	return *o.AUTHTOKEN
}

// GetAUTHTOKENOk returns a tuple with the AUTHTOKEN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultConfigurationKeyMapping) GetAUTHTOKENOk() (*string, bool) {
	if o == nil || IsNil(o.AUTHTOKEN) {
		return nil, false
	}
	return o.AUTHTOKEN, true
}

// HasAUTHTOKEN returns a boolean if a field has been set.
func (o *VaultConfigurationKeyMapping) HasAUTHTOKEN() bool {
	if o != nil && !IsNil(o.AUTHTOKEN) {
		return true
	}

	return false
}

// SetAUTHTOKEN gets a reference to the given string and assigns it to the AUTHTOKEN field.
func (o *VaultConfigurationKeyMapping) SetAUTHTOKEN(v string) {
	o.AUTHTOKEN = &v
}

// GetPASSWORD returns the PASSWORD field value if set, zero value otherwise.
func (o *VaultConfigurationKeyMapping) GetPASSWORD() VaultConfigurationKeyMappingPassword {
	if o == nil || IsNil(o.PASSWORD) {
		var ret VaultConfigurationKeyMappingPassword
		return ret
	}
	return *o.PASSWORD
}

// GetPASSWORDOk returns a tuple with the PASSWORD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultConfigurationKeyMapping) GetPASSWORDOk() (*VaultConfigurationKeyMappingPassword, bool) {
	if o == nil || IsNil(o.PASSWORD) {
		return nil, false
	}
	return o.PASSWORD, true
}

// HasPASSWORD returns a boolean if a field has been set.
func (o *VaultConfigurationKeyMapping) HasPASSWORD() bool {
	if o != nil && !IsNil(o.PASSWORD) {
		return true
	}

	return false
}

// SetPASSWORD gets a reference to the given VaultConfigurationKeyMappingPassword and assigns it to the PASSWORD field.
func (o *VaultConfigurationKeyMapping) SetPASSWORD(v VaultConfigurationKeyMappingPassword) {
	o.PASSWORD = &v
}

func (o VaultConfigurationKeyMapping) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VaultConfigurationKeyMapping) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AUTHTOKEN) {
		toSerialize["AUTHTOKEN"] = o.AUTHTOKEN
	}
	if !IsNil(o.PASSWORD) {
		toSerialize["PASSWORD"] = o.PASSWORD
	}
	return toSerialize, nil
}

type NullableVaultConfigurationKeyMapping struct {
	value *VaultConfigurationKeyMapping
	isSet bool
}

func (v NullableVaultConfigurationKeyMapping) Get() *VaultConfigurationKeyMapping {
	return v.value
}

func (v *NullableVaultConfigurationKeyMapping) Set(val *VaultConfigurationKeyMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableVaultConfigurationKeyMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableVaultConfigurationKeyMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVaultConfigurationKeyMapping(val *VaultConfigurationKeyMapping) *NullableVaultConfigurationKeyMapping {
	return &NullableVaultConfigurationKeyMapping{value: val, isSet: true}
}

func (v NullableVaultConfigurationKeyMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVaultConfigurationKeyMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


