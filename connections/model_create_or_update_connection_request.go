/*
Saviynt Connections API

Connections

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connections

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateOrUpdateConnectionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrUpdateConnectionRequest{}

// CreateOrUpdateConnectionRequest struct for CreateOrUpdateConnectionRequest
type CreateOrUpdateConnectionRequest struct {
	// Specify the name to identify the connection.
	ConnectionName *string `json:"connectionName,omitempty"`
	// Specify a connection type. For example, if your target application is Active Directory, specify the connection type as `AD`.
	Connectiontype string `json:"connectiontype"`
	Connectionkey *string `json:"connectionkey,omitempty"`
	// Sepcfiy the SAV role or combination of SAV roles. This SAV roles must hvae permissions that the users need for managing this connection along with its associated security systems, endpoints, accounts, and entitlements.
	DefaultSavRole *string `json:"defaultSavRole,omitempty"`
	// Specify the description for the connection.
	Description *string `json:"description,omitempty"`
	// Specify the email template applicable for notifications.
	EmailTemplate *string `json:"emailTemplate,omitempty"`
	GroupSearchBaseDN *string `json:"groupSearchBaseDN,omitempty"`
	Saveconnection *string `json:"saveconnection,omitempty"`
	// Specify `true` to save the encrypted attribute in the vault configured with the connector.
	Saveinvault *string `json:"saveinvault,omitempty"`
	// Specify the SSL certificates to use for securing the connection between EIC and the target application to encrypt the data shared between them.
	SslCertificate *string `json:"sslCertificate,omitempty"`
	Systemname *string `json:"systemname,omitempty"`
	// Vault connection identifier.
	Vaultconnection *string `json:"vaultconnection,omitempty"`
	// Specify the path of the vault to obtain the secret data. Suffix the name of the connector to this path to make it unique for the connector.
	Vaultconfiguration *VaultConfiguration `json:"vaultconfiguration,omitempty"`
	ACCOUNT_ATTRIBUTE *string `json:"ACCOUNT_ATTRIBUTE,omitempty"`
	ACCOUNTNAMERULE *string `json:"ACCOUNTNAMERULE,omitempty"`
	BASE *string `json:"BASE,omitempty"`
	CHECKFORUNIQUE *string `json:"CHECKFORUNIQUE,omitempty"`
	CREATEORGJSON *string `json:"CREATEORGJSON,omitempty"`
	ConfigJSON *string `json:"ConfigJSON,omitempty"`
	ENABLEACCOUNTJSON *string `json:"ENABLEACCOUNTJSON,omitempty"`
	ENFORCE_TREE_DELETION *string `json:"ENFORCE_TREE_DELETION,omitempty"`
	ENTITLEMENT_ATTRIBUTE *string `json:"ENTITLEMENT_ATTRIBUTE,omitempty"`
	IMPORTJSON *string `json:"IMPORTJSON,omitempty"`
	JCO_ASHOST *string `json:"JCO_ASHOST,omitempty"`
	JCO_CLIENT *string `json:"JCO_CLIENT,omitempty"`
	JCO_SYSNR *string `json:"JCO_SYSNR,omitempty"`
	JCO_USER *string `json:"JCO_USER,omitempty"`
	LDAP_OR_AD *string `json:"LDAP_OR_AD,omitempty"`
	OBJECTFILTER *string `json:"OBJECTFILTER,omitempty"`
	ORGANIZATION_ATTRIBUTE *string `json:"ORGANIZATION_ATTRIBUTE,omitempty"`
	ORGIMPORTJSON *string `json:"ORGIMPORTJSON,omitempty"`
	ORG_BASE *string `json:"ORG_BASE,omitempty"`
	PAGE_SIZE *string `json:"PAGE_SIZE,omitempty"`
	PAM_CONFIG *string `json:"PAM_CONFIG,omitempty"`
	PASSWORD *string `json:"PASSWORD,omitempty"`
	PASSWORD_MAX_LENGTH *string `json:"PASSWORD_MAX_LENGTH,omitempty"`
	PASSWORD_MIN_LENGTH *string `json:"PASSWORD_MIN_LENGTH,omitempty"`
	PASSWORD_NOOFCAPSALPHA *string `json:"PASSWORD_NOOFCAPSALPHA,omitempty"`
	PASSWORD_NOOFDIGITS *string `json:"PASSWORD_NOOFDIGITS,omitempty"`
	PASSWORD_NOOFSPLCHARS *string `json:"PASSWORD_NOOFSPLCHARS,omitempty"`
	READ_OPERATIONAL_ATTRIBUTES *string `json:"READ_OPERATIONAL_ATTRIBUTES,omitempty"`
	REMOVEACCOUNTACTION *string `json:"REMOVEACCOUNTACTION,omitempty"`
	RESETANDCHANGEPASSWRDJSON *string `json:"RESETANDCHANGEPASSWRDJSON,omitempty"`
	REUSEINACTIVEACCOUNT *string `json:"REUSEINACTIVEACCOUNT,omitempty"`
	SEARCHFILTER *string `json:"SEARCHFILTER,omitempty"`
	SETDEFAULTPAGESIZE *string `json:"SETDEFAULTPAGESIZE,omitempty"`
	SETRANDOMPASSWORD *string `json:"SETRANDOMPASSWORD,omitempty"`
	STATUSKEYJSON *string `json:"STATUSKEYJSON,omitempty"`
	STATUS_THRESHOLD_CONFIG *string `json:"STATUS_THRESHOLD_CONFIG,omitempty"`
	SUPPORTEMPTYSTRING *string `json:"SUPPORTEMPTYSTRING,omitempty"`
	UNLOCKACCOUNTJSON *string `json:"UNLOCKACCOUNTJSON,omitempty"`
	UPDATEORGJSON *string `json:"UPDATEORGJSON,omitempty"`
	URL *string `json:"URL,omitempty"`
	USERNAME *string `json:"USERNAME,omitempty"`
}

type _CreateOrUpdateConnectionRequest CreateOrUpdateConnectionRequest

// NewCreateOrUpdateConnectionRequest instantiates a new CreateOrUpdateConnectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateConnectionRequest(connectiontype string) *CreateOrUpdateConnectionRequest {
	this := CreateOrUpdateConnectionRequest{}
	this.Connectiontype = connectiontype
	return &this
}

// NewCreateOrUpdateConnectionRequestWithDefaults instantiates a new CreateOrUpdateConnectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateConnectionRequestWithDefaults() *CreateOrUpdateConnectionRequest {
	this := CreateOrUpdateConnectionRequest{}
	return &this
}

// GetConnectionName returns the ConnectionName field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetConnectionName() string {
	if o == nil || IsNil(o.ConnectionName) {
		var ret string
		return ret
	}
	return *o.ConnectionName
}

// GetConnectionNameOk returns a tuple with the ConnectionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetConnectionNameOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionName) {
		return nil, false
	}
	return o.ConnectionName, true
}

// HasConnectionName returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasConnectionName() bool {
	if o != nil && !IsNil(o.ConnectionName) {
		return true
	}

	return false
}

// SetConnectionName gets a reference to the given string and assigns it to the ConnectionName field.
func (o *CreateOrUpdateConnectionRequest) SetConnectionName(v string) {
	o.ConnectionName = &v
}

// GetConnectiontype returns the Connectiontype field value
func (o *CreateOrUpdateConnectionRequest) GetConnectiontype() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Connectiontype
}

// GetConnectiontypeOk returns a tuple with the Connectiontype field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetConnectiontypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Connectiontype, true
}

// SetConnectiontype sets field value
func (o *CreateOrUpdateConnectionRequest) SetConnectiontype(v string) {
	o.Connectiontype = v
}

// GetConnectionkey returns the Connectionkey field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetConnectionkey() string {
	if o == nil || IsNil(o.Connectionkey) {
		var ret string
		return ret
	}
	return *o.Connectionkey
}

// GetConnectionkeyOk returns a tuple with the Connectionkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetConnectionkeyOk() (*string, bool) {
	if o == nil || IsNil(o.Connectionkey) {
		return nil, false
	}
	return o.Connectionkey, true
}

// HasConnectionkey returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasConnectionkey() bool {
	if o != nil && !IsNil(o.Connectionkey) {
		return true
	}

	return false
}

// SetConnectionkey gets a reference to the given string and assigns it to the Connectionkey field.
func (o *CreateOrUpdateConnectionRequest) SetConnectionkey(v string) {
	o.Connectionkey = &v
}

// GetDefaultSavRole returns the DefaultSavRole field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetDefaultSavRole() string {
	if o == nil || IsNil(o.DefaultSavRole) {
		var ret string
		return ret
	}
	return *o.DefaultSavRole
}

// GetDefaultSavRoleOk returns a tuple with the DefaultSavRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetDefaultSavRoleOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultSavRole) {
		return nil, false
	}
	return o.DefaultSavRole, true
}

// HasDefaultSavRole returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasDefaultSavRole() bool {
	if o != nil && !IsNil(o.DefaultSavRole) {
		return true
	}

	return false
}

// SetDefaultSavRole gets a reference to the given string and assigns it to the DefaultSavRole field.
func (o *CreateOrUpdateConnectionRequest) SetDefaultSavRole(v string) {
	o.DefaultSavRole = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateOrUpdateConnectionRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEmailTemplate returns the EmailTemplate field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetEmailTemplate() string {
	if o == nil || IsNil(o.EmailTemplate) {
		var ret string
		return ret
	}
	return *o.EmailTemplate
}

// GetEmailTemplateOk returns a tuple with the EmailTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetEmailTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.EmailTemplate) {
		return nil, false
	}
	return o.EmailTemplate, true
}

// HasEmailTemplate returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasEmailTemplate() bool {
	if o != nil && !IsNil(o.EmailTemplate) {
		return true
	}

	return false
}

// SetEmailTemplate gets a reference to the given string and assigns it to the EmailTemplate field.
func (o *CreateOrUpdateConnectionRequest) SetEmailTemplate(v string) {
	o.EmailTemplate = &v
}

// GetGroupSearchBaseDN returns the GroupSearchBaseDN field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetGroupSearchBaseDN() string {
	if o == nil || IsNil(o.GroupSearchBaseDN) {
		var ret string
		return ret
	}
	return *o.GroupSearchBaseDN
}

// GetGroupSearchBaseDNOk returns a tuple with the GroupSearchBaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetGroupSearchBaseDNOk() (*string, bool) {
	if o == nil || IsNil(o.GroupSearchBaseDN) {
		return nil, false
	}
	return o.GroupSearchBaseDN, true
}

// HasGroupSearchBaseDN returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasGroupSearchBaseDN() bool {
	if o != nil && !IsNil(o.GroupSearchBaseDN) {
		return true
	}

	return false
}

// SetGroupSearchBaseDN gets a reference to the given string and assigns it to the GroupSearchBaseDN field.
func (o *CreateOrUpdateConnectionRequest) SetGroupSearchBaseDN(v string) {
	o.GroupSearchBaseDN = &v
}

// GetSaveconnection returns the Saveconnection field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetSaveconnection() string {
	if o == nil || IsNil(o.Saveconnection) {
		var ret string
		return ret
	}
	return *o.Saveconnection
}

// GetSaveconnectionOk returns a tuple with the Saveconnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetSaveconnectionOk() (*string, bool) {
	if o == nil || IsNil(o.Saveconnection) {
		return nil, false
	}
	return o.Saveconnection, true
}

// HasSaveconnection returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasSaveconnection() bool {
	if o != nil && !IsNil(o.Saveconnection) {
		return true
	}

	return false
}

// SetSaveconnection gets a reference to the given string and assigns it to the Saveconnection field.
func (o *CreateOrUpdateConnectionRequest) SetSaveconnection(v string) {
	o.Saveconnection = &v
}

// GetSaveinvault returns the Saveinvault field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetSaveinvault() string {
	if o == nil || IsNil(o.Saveinvault) {
		var ret string
		return ret
	}
	return *o.Saveinvault
}

// GetSaveinvaultOk returns a tuple with the Saveinvault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetSaveinvaultOk() (*string, bool) {
	if o == nil || IsNil(o.Saveinvault) {
		return nil, false
	}
	return o.Saveinvault, true
}

// HasSaveinvault returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasSaveinvault() bool {
	if o != nil && !IsNil(o.Saveinvault) {
		return true
	}

	return false
}

// SetSaveinvault gets a reference to the given string and assigns it to the Saveinvault field.
func (o *CreateOrUpdateConnectionRequest) SetSaveinvault(v string) {
	o.Saveinvault = &v
}

// GetSslCertificate returns the SslCertificate field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetSslCertificate() string {
	if o == nil || IsNil(o.SslCertificate) {
		var ret string
		return ret
	}
	return *o.SslCertificate
}

// GetSslCertificateOk returns a tuple with the SslCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetSslCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.SslCertificate) {
		return nil, false
	}
	return o.SslCertificate, true
}

// HasSslCertificate returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasSslCertificate() bool {
	if o != nil && !IsNil(o.SslCertificate) {
		return true
	}

	return false
}

// SetSslCertificate gets a reference to the given string and assigns it to the SslCertificate field.
func (o *CreateOrUpdateConnectionRequest) SetSslCertificate(v string) {
	o.SslCertificate = &v
}

// GetSystemname returns the Systemname field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetSystemname() string {
	if o == nil || IsNil(o.Systemname) {
		var ret string
		return ret
	}
	return *o.Systemname
}

// GetSystemnameOk returns a tuple with the Systemname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetSystemnameOk() (*string, bool) {
	if o == nil || IsNil(o.Systemname) {
		return nil, false
	}
	return o.Systemname, true
}

// HasSystemname returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasSystemname() bool {
	if o != nil && !IsNil(o.Systemname) {
		return true
	}

	return false
}

// SetSystemname gets a reference to the given string and assigns it to the Systemname field.
func (o *CreateOrUpdateConnectionRequest) SetSystemname(v string) {
	o.Systemname = &v
}

// GetVaultconnection returns the Vaultconnection field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetVaultconnection() string {
	if o == nil || IsNil(o.Vaultconnection) {
		var ret string
		return ret
	}
	return *o.Vaultconnection
}

// GetVaultconnectionOk returns a tuple with the Vaultconnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetVaultconnectionOk() (*string, bool) {
	if o == nil || IsNil(o.Vaultconnection) {
		return nil, false
	}
	return o.Vaultconnection, true
}

// HasVaultconnection returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasVaultconnection() bool {
	if o != nil && !IsNil(o.Vaultconnection) {
		return true
	}

	return false
}

// SetVaultconnection gets a reference to the given string and assigns it to the Vaultconnection field.
func (o *CreateOrUpdateConnectionRequest) SetVaultconnection(v string) {
	o.Vaultconnection = &v
}

// GetVaultconfiguration returns the Vaultconfiguration field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetVaultconfiguration() VaultConfiguration {
	if o == nil || IsNil(o.Vaultconfiguration) {
		var ret VaultConfiguration
		return ret
	}
	return *o.Vaultconfiguration
}

// GetVaultconfigurationOk returns a tuple with the Vaultconfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetVaultconfigurationOk() (*VaultConfiguration, bool) {
	if o == nil || IsNil(o.Vaultconfiguration) {
		return nil, false
	}
	return o.Vaultconfiguration, true
}

// HasVaultconfiguration returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasVaultconfiguration() bool {
	if o != nil && !IsNil(o.Vaultconfiguration) {
		return true
	}

	return false
}

// SetVaultconfiguration gets a reference to the given VaultConfiguration and assigns it to the Vaultconfiguration field.
func (o *CreateOrUpdateConnectionRequest) SetVaultconfiguration(v VaultConfiguration) {
	o.Vaultconfiguration = &v
}

// GetACCOUNT_ATTRIBUTE returns the ACCOUNT_ATTRIBUTE field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetACCOUNT_ATTRIBUTE() string {
	if o == nil || IsNil(o.ACCOUNT_ATTRIBUTE) {
		var ret string
		return ret
	}
	return *o.ACCOUNT_ATTRIBUTE
}

// GetACCOUNT_ATTRIBUTEOk returns a tuple with the ACCOUNT_ATTRIBUTE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetACCOUNT_ATTRIBUTEOk() (*string, bool) {
	if o == nil || IsNil(o.ACCOUNT_ATTRIBUTE) {
		return nil, false
	}
	return o.ACCOUNT_ATTRIBUTE, true
}

// HasACCOUNT_ATTRIBUTE returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasACCOUNT_ATTRIBUTE() bool {
	if o != nil && !IsNil(o.ACCOUNT_ATTRIBUTE) {
		return true
	}

	return false
}

// SetACCOUNT_ATTRIBUTE gets a reference to the given string and assigns it to the ACCOUNT_ATTRIBUTE field.
func (o *CreateOrUpdateConnectionRequest) SetACCOUNT_ATTRIBUTE(v string) {
	o.ACCOUNT_ATTRIBUTE = &v
}

// GetACCOUNTNAMERULE returns the ACCOUNTNAMERULE field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetACCOUNTNAMERULE() string {
	if o == nil || IsNil(o.ACCOUNTNAMERULE) {
		var ret string
		return ret
	}
	return *o.ACCOUNTNAMERULE
}

// GetACCOUNTNAMERULEOk returns a tuple with the ACCOUNTNAMERULE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetACCOUNTNAMERULEOk() (*string, bool) {
	if o == nil || IsNil(o.ACCOUNTNAMERULE) {
		return nil, false
	}
	return o.ACCOUNTNAMERULE, true
}

// HasACCOUNTNAMERULE returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasACCOUNTNAMERULE() bool {
	if o != nil && !IsNil(o.ACCOUNTNAMERULE) {
		return true
	}

	return false
}

// SetACCOUNTNAMERULE gets a reference to the given string and assigns it to the ACCOUNTNAMERULE field.
func (o *CreateOrUpdateConnectionRequest) SetACCOUNTNAMERULE(v string) {
	o.ACCOUNTNAMERULE = &v
}

// GetBASE returns the BASE field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetBASE() string {
	if o == nil || IsNil(o.BASE) {
		var ret string
		return ret
	}
	return *o.BASE
}

// GetBASEOk returns a tuple with the BASE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetBASEOk() (*string, bool) {
	if o == nil || IsNil(o.BASE) {
		return nil, false
	}
	return o.BASE, true
}

// HasBASE returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasBASE() bool {
	if o != nil && !IsNil(o.BASE) {
		return true
	}

	return false
}

// SetBASE gets a reference to the given string and assigns it to the BASE field.
func (o *CreateOrUpdateConnectionRequest) SetBASE(v string) {
	o.BASE = &v
}

// GetCHECKFORUNIQUE returns the CHECKFORUNIQUE field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetCHECKFORUNIQUE() string {
	if o == nil || IsNil(o.CHECKFORUNIQUE) {
		var ret string
		return ret
	}
	return *o.CHECKFORUNIQUE
}

// GetCHECKFORUNIQUEOk returns a tuple with the CHECKFORUNIQUE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetCHECKFORUNIQUEOk() (*string, bool) {
	if o == nil || IsNil(o.CHECKFORUNIQUE) {
		return nil, false
	}
	return o.CHECKFORUNIQUE, true
}

// HasCHECKFORUNIQUE returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasCHECKFORUNIQUE() bool {
	if o != nil && !IsNil(o.CHECKFORUNIQUE) {
		return true
	}

	return false
}

// SetCHECKFORUNIQUE gets a reference to the given string and assigns it to the CHECKFORUNIQUE field.
func (o *CreateOrUpdateConnectionRequest) SetCHECKFORUNIQUE(v string) {
	o.CHECKFORUNIQUE = &v
}

// GetCREATEORGJSON returns the CREATEORGJSON field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetCREATEORGJSON() string {
	if o == nil || IsNil(o.CREATEORGJSON) {
		var ret string
		return ret
	}
	return *o.CREATEORGJSON
}

// GetCREATEORGJSONOk returns a tuple with the CREATEORGJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetCREATEORGJSONOk() (*string, bool) {
	if o == nil || IsNil(o.CREATEORGJSON) {
		return nil, false
	}
	return o.CREATEORGJSON, true
}

// HasCREATEORGJSON returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasCREATEORGJSON() bool {
	if o != nil && !IsNil(o.CREATEORGJSON) {
		return true
	}

	return false
}

// SetCREATEORGJSON gets a reference to the given string and assigns it to the CREATEORGJSON field.
func (o *CreateOrUpdateConnectionRequest) SetCREATEORGJSON(v string) {
	o.CREATEORGJSON = &v
}

// GetConfigJSON returns the ConfigJSON field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetConfigJSON() string {
	if o == nil || IsNil(o.ConfigJSON) {
		var ret string
		return ret
	}
	return *o.ConfigJSON
}

// GetConfigJSONOk returns a tuple with the ConfigJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetConfigJSONOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigJSON) {
		return nil, false
	}
	return o.ConfigJSON, true
}

// HasConfigJSON returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasConfigJSON() bool {
	if o != nil && !IsNil(o.ConfigJSON) {
		return true
	}

	return false
}

// SetConfigJSON gets a reference to the given string and assigns it to the ConfigJSON field.
func (o *CreateOrUpdateConnectionRequest) SetConfigJSON(v string) {
	o.ConfigJSON = &v
}

// GetENABLEACCOUNTJSON returns the ENABLEACCOUNTJSON field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetENABLEACCOUNTJSON() string {
	if o == nil || IsNil(o.ENABLEACCOUNTJSON) {
		var ret string
		return ret
	}
	return *o.ENABLEACCOUNTJSON
}

// GetENABLEACCOUNTJSONOk returns a tuple with the ENABLEACCOUNTJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetENABLEACCOUNTJSONOk() (*string, bool) {
	if o == nil || IsNil(o.ENABLEACCOUNTJSON) {
		return nil, false
	}
	return o.ENABLEACCOUNTJSON, true
}

// HasENABLEACCOUNTJSON returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasENABLEACCOUNTJSON() bool {
	if o != nil && !IsNil(o.ENABLEACCOUNTJSON) {
		return true
	}

	return false
}

// SetENABLEACCOUNTJSON gets a reference to the given string and assigns it to the ENABLEACCOUNTJSON field.
func (o *CreateOrUpdateConnectionRequest) SetENABLEACCOUNTJSON(v string) {
	o.ENABLEACCOUNTJSON = &v
}

// GetENFORCE_TREE_DELETION returns the ENFORCE_TREE_DELETION field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetENFORCE_TREE_DELETION() string {
	if o == nil || IsNil(o.ENFORCE_TREE_DELETION) {
		var ret string
		return ret
	}
	return *o.ENFORCE_TREE_DELETION
}

// GetENFORCE_TREE_DELETIONOk returns a tuple with the ENFORCE_TREE_DELETION field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetENFORCE_TREE_DELETIONOk() (*string, bool) {
	if o == nil || IsNil(o.ENFORCE_TREE_DELETION) {
		return nil, false
	}
	return o.ENFORCE_TREE_DELETION, true
}

// HasENFORCE_TREE_DELETION returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasENFORCE_TREE_DELETION() bool {
	if o != nil && !IsNil(o.ENFORCE_TREE_DELETION) {
		return true
	}

	return false
}

// SetENFORCE_TREE_DELETION gets a reference to the given string and assigns it to the ENFORCE_TREE_DELETION field.
func (o *CreateOrUpdateConnectionRequest) SetENFORCE_TREE_DELETION(v string) {
	o.ENFORCE_TREE_DELETION = &v
}

// GetENTITLEMENT_ATTRIBUTE returns the ENTITLEMENT_ATTRIBUTE field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetENTITLEMENT_ATTRIBUTE() string {
	if o == nil || IsNil(o.ENTITLEMENT_ATTRIBUTE) {
		var ret string
		return ret
	}
	return *o.ENTITLEMENT_ATTRIBUTE
}

// GetENTITLEMENT_ATTRIBUTEOk returns a tuple with the ENTITLEMENT_ATTRIBUTE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetENTITLEMENT_ATTRIBUTEOk() (*string, bool) {
	if o == nil || IsNil(o.ENTITLEMENT_ATTRIBUTE) {
		return nil, false
	}
	return o.ENTITLEMENT_ATTRIBUTE, true
}

// HasENTITLEMENT_ATTRIBUTE returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasENTITLEMENT_ATTRIBUTE() bool {
	if o != nil && !IsNil(o.ENTITLEMENT_ATTRIBUTE) {
		return true
	}

	return false
}

// SetENTITLEMENT_ATTRIBUTE gets a reference to the given string and assigns it to the ENTITLEMENT_ATTRIBUTE field.
func (o *CreateOrUpdateConnectionRequest) SetENTITLEMENT_ATTRIBUTE(v string) {
	o.ENTITLEMENT_ATTRIBUTE = &v
}

// GetIMPORTJSON returns the IMPORTJSON field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetIMPORTJSON() string {
	if o == nil || IsNil(o.IMPORTJSON) {
		var ret string
		return ret
	}
	return *o.IMPORTJSON
}

// GetIMPORTJSONOk returns a tuple with the IMPORTJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetIMPORTJSONOk() (*string, bool) {
	if o == nil || IsNil(o.IMPORTJSON) {
		return nil, false
	}
	return o.IMPORTJSON, true
}

// HasIMPORTJSON returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasIMPORTJSON() bool {
	if o != nil && !IsNil(o.IMPORTJSON) {
		return true
	}

	return false
}

// SetIMPORTJSON gets a reference to the given string and assigns it to the IMPORTJSON field.
func (o *CreateOrUpdateConnectionRequest) SetIMPORTJSON(v string) {
	o.IMPORTJSON = &v
}

// GetJCO_ASHOST returns the JCO_ASHOST field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetJCO_ASHOST() string {
	if o == nil || IsNil(o.JCO_ASHOST) {
		var ret string
		return ret
	}
	return *o.JCO_ASHOST
}

// GetJCO_ASHOSTOk returns a tuple with the JCO_ASHOST field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetJCO_ASHOSTOk() (*string, bool) {
	if o == nil || IsNil(o.JCO_ASHOST) {
		return nil, false
	}
	return o.JCO_ASHOST, true
}

// HasJCO_ASHOST returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasJCO_ASHOST() bool {
	if o != nil && !IsNil(o.JCO_ASHOST) {
		return true
	}

	return false
}

// SetJCO_ASHOST gets a reference to the given string and assigns it to the JCO_ASHOST field.
func (o *CreateOrUpdateConnectionRequest) SetJCO_ASHOST(v string) {
	o.JCO_ASHOST = &v
}

// GetJCO_CLIENT returns the JCO_CLIENT field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetJCO_CLIENT() string {
	if o == nil || IsNil(o.JCO_CLIENT) {
		var ret string
		return ret
	}
	return *o.JCO_CLIENT
}

// GetJCO_CLIENTOk returns a tuple with the JCO_CLIENT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetJCO_CLIENTOk() (*string, bool) {
	if o == nil || IsNil(o.JCO_CLIENT) {
		return nil, false
	}
	return o.JCO_CLIENT, true
}

// HasJCO_CLIENT returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasJCO_CLIENT() bool {
	if o != nil && !IsNil(o.JCO_CLIENT) {
		return true
	}

	return false
}

// SetJCO_CLIENT gets a reference to the given string and assigns it to the JCO_CLIENT field.
func (o *CreateOrUpdateConnectionRequest) SetJCO_CLIENT(v string) {
	o.JCO_CLIENT = &v
}

// GetJCO_SYSNR returns the JCO_SYSNR field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetJCO_SYSNR() string {
	if o == nil || IsNil(o.JCO_SYSNR) {
		var ret string
		return ret
	}
	return *o.JCO_SYSNR
}

// GetJCO_SYSNROk returns a tuple with the JCO_SYSNR field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetJCO_SYSNROk() (*string, bool) {
	if o == nil || IsNil(o.JCO_SYSNR) {
		return nil, false
	}
	return o.JCO_SYSNR, true
}

// HasJCO_SYSNR returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasJCO_SYSNR() bool {
	if o != nil && !IsNil(o.JCO_SYSNR) {
		return true
	}

	return false
}

// SetJCO_SYSNR gets a reference to the given string and assigns it to the JCO_SYSNR field.
func (o *CreateOrUpdateConnectionRequest) SetJCO_SYSNR(v string) {
	o.JCO_SYSNR = &v
}

// GetJCO_USER returns the JCO_USER field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetJCO_USER() string {
	if o == nil || IsNil(o.JCO_USER) {
		var ret string
		return ret
	}
	return *o.JCO_USER
}

// GetJCO_USEROk returns a tuple with the JCO_USER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetJCO_USEROk() (*string, bool) {
	if o == nil || IsNil(o.JCO_USER) {
		return nil, false
	}
	return o.JCO_USER, true
}

// HasJCO_USER returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasJCO_USER() bool {
	if o != nil && !IsNil(o.JCO_USER) {
		return true
	}

	return false
}

// SetJCO_USER gets a reference to the given string and assigns it to the JCO_USER field.
func (o *CreateOrUpdateConnectionRequest) SetJCO_USER(v string) {
	o.JCO_USER = &v
}

// GetLDAP_OR_AD returns the LDAP_OR_AD field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetLDAP_OR_AD() string {
	if o == nil || IsNil(o.LDAP_OR_AD) {
		var ret string
		return ret
	}
	return *o.LDAP_OR_AD
}

// GetLDAP_OR_ADOk returns a tuple with the LDAP_OR_AD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetLDAP_OR_ADOk() (*string, bool) {
	if o == nil || IsNil(o.LDAP_OR_AD) {
		return nil, false
	}
	return o.LDAP_OR_AD, true
}

// HasLDAP_OR_AD returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasLDAP_OR_AD() bool {
	if o != nil && !IsNil(o.LDAP_OR_AD) {
		return true
	}

	return false
}

// SetLDAP_OR_AD gets a reference to the given string and assigns it to the LDAP_OR_AD field.
func (o *CreateOrUpdateConnectionRequest) SetLDAP_OR_AD(v string) {
	o.LDAP_OR_AD = &v
}

// GetOBJECTFILTER returns the OBJECTFILTER field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetOBJECTFILTER() string {
	if o == nil || IsNil(o.OBJECTFILTER) {
		var ret string
		return ret
	}
	return *o.OBJECTFILTER
}

// GetOBJECTFILTEROk returns a tuple with the OBJECTFILTER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetOBJECTFILTEROk() (*string, bool) {
	if o == nil || IsNil(o.OBJECTFILTER) {
		return nil, false
	}
	return o.OBJECTFILTER, true
}

// HasOBJECTFILTER returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasOBJECTFILTER() bool {
	if o != nil && !IsNil(o.OBJECTFILTER) {
		return true
	}

	return false
}

// SetOBJECTFILTER gets a reference to the given string and assigns it to the OBJECTFILTER field.
func (o *CreateOrUpdateConnectionRequest) SetOBJECTFILTER(v string) {
	o.OBJECTFILTER = &v
}

// GetORGANIZATION_ATTRIBUTE returns the ORGANIZATION_ATTRIBUTE field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetORGANIZATION_ATTRIBUTE() string {
	if o == nil || IsNil(o.ORGANIZATION_ATTRIBUTE) {
		var ret string
		return ret
	}
	return *o.ORGANIZATION_ATTRIBUTE
}

// GetORGANIZATION_ATTRIBUTEOk returns a tuple with the ORGANIZATION_ATTRIBUTE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetORGANIZATION_ATTRIBUTEOk() (*string, bool) {
	if o == nil || IsNil(o.ORGANIZATION_ATTRIBUTE) {
		return nil, false
	}
	return o.ORGANIZATION_ATTRIBUTE, true
}

// HasORGANIZATION_ATTRIBUTE returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasORGANIZATION_ATTRIBUTE() bool {
	if o != nil && !IsNil(o.ORGANIZATION_ATTRIBUTE) {
		return true
	}

	return false
}

// SetORGANIZATION_ATTRIBUTE gets a reference to the given string and assigns it to the ORGANIZATION_ATTRIBUTE field.
func (o *CreateOrUpdateConnectionRequest) SetORGANIZATION_ATTRIBUTE(v string) {
	o.ORGANIZATION_ATTRIBUTE = &v
}

// GetORGIMPORTJSON returns the ORGIMPORTJSON field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetORGIMPORTJSON() string {
	if o == nil || IsNil(o.ORGIMPORTJSON) {
		var ret string
		return ret
	}
	return *o.ORGIMPORTJSON
}

// GetORGIMPORTJSONOk returns a tuple with the ORGIMPORTJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetORGIMPORTJSONOk() (*string, bool) {
	if o == nil || IsNil(o.ORGIMPORTJSON) {
		return nil, false
	}
	return o.ORGIMPORTJSON, true
}

// HasORGIMPORTJSON returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasORGIMPORTJSON() bool {
	if o != nil && !IsNil(o.ORGIMPORTJSON) {
		return true
	}

	return false
}

// SetORGIMPORTJSON gets a reference to the given string and assigns it to the ORGIMPORTJSON field.
func (o *CreateOrUpdateConnectionRequest) SetORGIMPORTJSON(v string) {
	o.ORGIMPORTJSON = &v
}

// GetORG_BASE returns the ORG_BASE field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetORG_BASE() string {
	if o == nil || IsNil(o.ORG_BASE) {
		var ret string
		return ret
	}
	return *o.ORG_BASE
}

// GetORG_BASEOk returns a tuple with the ORG_BASE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetORG_BASEOk() (*string, bool) {
	if o == nil || IsNil(o.ORG_BASE) {
		return nil, false
	}
	return o.ORG_BASE, true
}

// HasORG_BASE returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasORG_BASE() bool {
	if o != nil && !IsNil(o.ORG_BASE) {
		return true
	}

	return false
}

// SetORG_BASE gets a reference to the given string and assigns it to the ORG_BASE field.
func (o *CreateOrUpdateConnectionRequest) SetORG_BASE(v string) {
	o.ORG_BASE = &v
}

// GetPAGE_SIZE returns the PAGE_SIZE field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetPAGE_SIZE() string {
	if o == nil || IsNil(o.PAGE_SIZE) {
		var ret string
		return ret
	}
	return *o.PAGE_SIZE
}

// GetPAGE_SIZEOk returns a tuple with the PAGE_SIZE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetPAGE_SIZEOk() (*string, bool) {
	if o == nil || IsNil(o.PAGE_SIZE) {
		return nil, false
	}
	return o.PAGE_SIZE, true
}

// HasPAGE_SIZE returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasPAGE_SIZE() bool {
	if o != nil && !IsNil(o.PAGE_SIZE) {
		return true
	}

	return false
}

// SetPAGE_SIZE gets a reference to the given string and assigns it to the PAGE_SIZE field.
func (o *CreateOrUpdateConnectionRequest) SetPAGE_SIZE(v string) {
	o.PAGE_SIZE = &v
}

// GetPAM_CONFIG returns the PAM_CONFIG field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetPAM_CONFIG() string {
	if o == nil || IsNil(o.PAM_CONFIG) {
		var ret string
		return ret
	}
	return *o.PAM_CONFIG
}

// GetPAM_CONFIGOk returns a tuple with the PAM_CONFIG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetPAM_CONFIGOk() (*string, bool) {
	if o == nil || IsNil(o.PAM_CONFIG) {
		return nil, false
	}
	return o.PAM_CONFIG, true
}

// HasPAM_CONFIG returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasPAM_CONFIG() bool {
	if o != nil && !IsNil(o.PAM_CONFIG) {
		return true
	}

	return false
}

// SetPAM_CONFIG gets a reference to the given string and assigns it to the PAM_CONFIG field.
func (o *CreateOrUpdateConnectionRequest) SetPAM_CONFIG(v string) {
	o.PAM_CONFIG = &v
}

// GetPASSWORD returns the PASSWORD field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetPASSWORD() string {
	if o == nil || IsNil(o.PASSWORD) {
		var ret string
		return ret
	}
	return *o.PASSWORD
}

// GetPASSWORDOk returns a tuple with the PASSWORD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetPASSWORDOk() (*string, bool) {
	if o == nil || IsNil(o.PASSWORD) {
		return nil, false
	}
	return o.PASSWORD, true
}

// HasPASSWORD returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasPASSWORD() bool {
	if o != nil && !IsNil(o.PASSWORD) {
		return true
	}

	return false
}

// SetPASSWORD gets a reference to the given string and assigns it to the PASSWORD field.
func (o *CreateOrUpdateConnectionRequest) SetPASSWORD(v string) {
	o.PASSWORD = &v
}

// GetPASSWORD_MAX_LENGTH returns the PASSWORD_MAX_LENGTH field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetPASSWORD_MAX_LENGTH() string {
	if o == nil || IsNil(o.PASSWORD_MAX_LENGTH) {
		var ret string
		return ret
	}
	return *o.PASSWORD_MAX_LENGTH
}

// GetPASSWORD_MAX_LENGTHOk returns a tuple with the PASSWORD_MAX_LENGTH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetPASSWORD_MAX_LENGTHOk() (*string, bool) {
	if o == nil || IsNil(o.PASSWORD_MAX_LENGTH) {
		return nil, false
	}
	return o.PASSWORD_MAX_LENGTH, true
}

// HasPASSWORD_MAX_LENGTH returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasPASSWORD_MAX_LENGTH() bool {
	if o != nil && !IsNil(o.PASSWORD_MAX_LENGTH) {
		return true
	}

	return false
}

// SetPASSWORD_MAX_LENGTH gets a reference to the given string and assigns it to the PASSWORD_MAX_LENGTH field.
func (o *CreateOrUpdateConnectionRequest) SetPASSWORD_MAX_LENGTH(v string) {
	o.PASSWORD_MAX_LENGTH = &v
}

// GetPASSWORD_MIN_LENGTH returns the PASSWORD_MIN_LENGTH field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetPASSWORD_MIN_LENGTH() string {
	if o == nil || IsNil(o.PASSWORD_MIN_LENGTH) {
		var ret string
		return ret
	}
	return *o.PASSWORD_MIN_LENGTH
}

// GetPASSWORD_MIN_LENGTHOk returns a tuple with the PASSWORD_MIN_LENGTH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetPASSWORD_MIN_LENGTHOk() (*string, bool) {
	if o == nil || IsNil(o.PASSWORD_MIN_LENGTH) {
		return nil, false
	}
	return o.PASSWORD_MIN_LENGTH, true
}

// HasPASSWORD_MIN_LENGTH returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasPASSWORD_MIN_LENGTH() bool {
	if o != nil && !IsNil(o.PASSWORD_MIN_LENGTH) {
		return true
	}

	return false
}

// SetPASSWORD_MIN_LENGTH gets a reference to the given string and assigns it to the PASSWORD_MIN_LENGTH field.
func (o *CreateOrUpdateConnectionRequest) SetPASSWORD_MIN_LENGTH(v string) {
	o.PASSWORD_MIN_LENGTH = &v
}

// GetPASSWORD_NOOFCAPSALPHA returns the PASSWORD_NOOFCAPSALPHA field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetPASSWORD_NOOFCAPSALPHA() string {
	if o == nil || IsNil(o.PASSWORD_NOOFCAPSALPHA) {
		var ret string
		return ret
	}
	return *o.PASSWORD_NOOFCAPSALPHA
}

// GetPASSWORD_NOOFCAPSALPHAOk returns a tuple with the PASSWORD_NOOFCAPSALPHA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetPASSWORD_NOOFCAPSALPHAOk() (*string, bool) {
	if o == nil || IsNil(o.PASSWORD_NOOFCAPSALPHA) {
		return nil, false
	}
	return o.PASSWORD_NOOFCAPSALPHA, true
}

// HasPASSWORD_NOOFCAPSALPHA returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasPASSWORD_NOOFCAPSALPHA() bool {
	if o != nil && !IsNil(o.PASSWORD_NOOFCAPSALPHA) {
		return true
	}

	return false
}

// SetPASSWORD_NOOFCAPSALPHA gets a reference to the given string and assigns it to the PASSWORD_NOOFCAPSALPHA field.
func (o *CreateOrUpdateConnectionRequest) SetPASSWORD_NOOFCAPSALPHA(v string) {
	o.PASSWORD_NOOFCAPSALPHA = &v
}

// GetPASSWORD_NOOFDIGITS returns the PASSWORD_NOOFDIGITS field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetPASSWORD_NOOFDIGITS() string {
	if o == nil || IsNil(o.PASSWORD_NOOFDIGITS) {
		var ret string
		return ret
	}
	return *o.PASSWORD_NOOFDIGITS
}

// GetPASSWORD_NOOFDIGITSOk returns a tuple with the PASSWORD_NOOFDIGITS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetPASSWORD_NOOFDIGITSOk() (*string, bool) {
	if o == nil || IsNil(o.PASSWORD_NOOFDIGITS) {
		return nil, false
	}
	return o.PASSWORD_NOOFDIGITS, true
}

// HasPASSWORD_NOOFDIGITS returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasPASSWORD_NOOFDIGITS() bool {
	if o != nil && !IsNil(o.PASSWORD_NOOFDIGITS) {
		return true
	}

	return false
}

// SetPASSWORD_NOOFDIGITS gets a reference to the given string and assigns it to the PASSWORD_NOOFDIGITS field.
func (o *CreateOrUpdateConnectionRequest) SetPASSWORD_NOOFDIGITS(v string) {
	o.PASSWORD_NOOFDIGITS = &v
}

// GetPASSWORD_NOOFSPLCHARS returns the PASSWORD_NOOFSPLCHARS field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetPASSWORD_NOOFSPLCHARS() string {
	if o == nil || IsNil(o.PASSWORD_NOOFSPLCHARS) {
		var ret string
		return ret
	}
	return *o.PASSWORD_NOOFSPLCHARS
}

// GetPASSWORD_NOOFSPLCHARSOk returns a tuple with the PASSWORD_NOOFSPLCHARS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetPASSWORD_NOOFSPLCHARSOk() (*string, bool) {
	if o == nil || IsNil(o.PASSWORD_NOOFSPLCHARS) {
		return nil, false
	}
	return o.PASSWORD_NOOFSPLCHARS, true
}

// HasPASSWORD_NOOFSPLCHARS returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasPASSWORD_NOOFSPLCHARS() bool {
	if o != nil && !IsNil(o.PASSWORD_NOOFSPLCHARS) {
		return true
	}

	return false
}

// SetPASSWORD_NOOFSPLCHARS gets a reference to the given string and assigns it to the PASSWORD_NOOFSPLCHARS field.
func (o *CreateOrUpdateConnectionRequest) SetPASSWORD_NOOFSPLCHARS(v string) {
	o.PASSWORD_NOOFSPLCHARS = &v
}

// GetREAD_OPERATIONAL_ATTRIBUTES returns the READ_OPERATIONAL_ATTRIBUTES field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetREAD_OPERATIONAL_ATTRIBUTES() string {
	if o == nil || IsNil(o.READ_OPERATIONAL_ATTRIBUTES) {
		var ret string
		return ret
	}
	return *o.READ_OPERATIONAL_ATTRIBUTES
}

// GetREAD_OPERATIONAL_ATTRIBUTESOk returns a tuple with the READ_OPERATIONAL_ATTRIBUTES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetREAD_OPERATIONAL_ATTRIBUTESOk() (*string, bool) {
	if o == nil || IsNil(o.READ_OPERATIONAL_ATTRIBUTES) {
		return nil, false
	}
	return o.READ_OPERATIONAL_ATTRIBUTES, true
}

// HasREAD_OPERATIONAL_ATTRIBUTES returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasREAD_OPERATIONAL_ATTRIBUTES() bool {
	if o != nil && !IsNil(o.READ_OPERATIONAL_ATTRIBUTES) {
		return true
	}

	return false
}

// SetREAD_OPERATIONAL_ATTRIBUTES gets a reference to the given string and assigns it to the READ_OPERATIONAL_ATTRIBUTES field.
func (o *CreateOrUpdateConnectionRequest) SetREAD_OPERATIONAL_ATTRIBUTES(v string) {
	o.READ_OPERATIONAL_ATTRIBUTES = &v
}

// GetREMOVEACCOUNTACTION returns the REMOVEACCOUNTACTION field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetREMOVEACCOUNTACTION() string {
	if o == nil || IsNil(o.REMOVEACCOUNTACTION) {
		var ret string
		return ret
	}
	return *o.REMOVEACCOUNTACTION
}

// GetREMOVEACCOUNTACTIONOk returns a tuple with the REMOVEACCOUNTACTION field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetREMOVEACCOUNTACTIONOk() (*string, bool) {
	if o == nil || IsNil(o.REMOVEACCOUNTACTION) {
		return nil, false
	}
	return o.REMOVEACCOUNTACTION, true
}

// HasREMOVEACCOUNTACTION returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasREMOVEACCOUNTACTION() bool {
	if o != nil && !IsNil(o.REMOVEACCOUNTACTION) {
		return true
	}

	return false
}

// SetREMOVEACCOUNTACTION gets a reference to the given string and assigns it to the REMOVEACCOUNTACTION field.
func (o *CreateOrUpdateConnectionRequest) SetREMOVEACCOUNTACTION(v string) {
	o.REMOVEACCOUNTACTION = &v
}

// GetRESETANDCHANGEPASSWRDJSON returns the RESETANDCHANGEPASSWRDJSON field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetRESETANDCHANGEPASSWRDJSON() string {
	if o == nil || IsNil(o.RESETANDCHANGEPASSWRDJSON) {
		var ret string
		return ret
	}
	return *o.RESETANDCHANGEPASSWRDJSON
}

// GetRESETANDCHANGEPASSWRDJSONOk returns a tuple with the RESETANDCHANGEPASSWRDJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetRESETANDCHANGEPASSWRDJSONOk() (*string, bool) {
	if o == nil || IsNil(o.RESETANDCHANGEPASSWRDJSON) {
		return nil, false
	}
	return o.RESETANDCHANGEPASSWRDJSON, true
}

// HasRESETANDCHANGEPASSWRDJSON returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasRESETANDCHANGEPASSWRDJSON() bool {
	if o != nil && !IsNil(o.RESETANDCHANGEPASSWRDJSON) {
		return true
	}

	return false
}

// SetRESETANDCHANGEPASSWRDJSON gets a reference to the given string and assigns it to the RESETANDCHANGEPASSWRDJSON field.
func (o *CreateOrUpdateConnectionRequest) SetRESETANDCHANGEPASSWRDJSON(v string) {
	o.RESETANDCHANGEPASSWRDJSON = &v
}

// GetREUSEINACTIVEACCOUNT returns the REUSEINACTIVEACCOUNT field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetREUSEINACTIVEACCOUNT() string {
	if o == nil || IsNil(o.REUSEINACTIVEACCOUNT) {
		var ret string
		return ret
	}
	return *o.REUSEINACTIVEACCOUNT
}

// GetREUSEINACTIVEACCOUNTOk returns a tuple with the REUSEINACTIVEACCOUNT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetREUSEINACTIVEACCOUNTOk() (*string, bool) {
	if o == nil || IsNil(o.REUSEINACTIVEACCOUNT) {
		return nil, false
	}
	return o.REUSEINACTIVEACCOUNT, true
}

// HasREUSEINACTIVEACCOUNT returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasREUSEINACTIVEACCOUNT() bool {
	if o != nil && !IsNil(o.REUSEINACTIVEACCOUNT) {
		return true
	}

	return false
}

// SetREUSEINACTIVEACCOUNT gets a reference to the given string and assigns it to the REUSEINACTIVEACCOUNT field.
func (o *CreateOrUpdateConnectionRequest) SetREUSEINACTIVEACCOUNT(v string) {
	o.REUSEINACTIVEACCOUNT = &v
}

// GetSEARCHFILTER returns the SEARCHFILTER field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetSEARCHFILTER() string {
	if o == nil || IsNil(o.SEARCHFILTER) {
		var ret string
		return ret
	}
	return *o.SEARCHFILTER
}

// GetSEARCHFILTEROk returns a tuple with the SEARCHFILTER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetSEARCHFILTEROk() (*string, bool) {
	if o == nil || IsNil(o.SEARCHFILTER) {
		return nil, false
	}
	return o.SEARCHFILTER, true
}

// HasSEARCHFILTER returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasSEARCHFILTER() bool {
	if o != nil && !IsNil(o.SEARCHFILTER) {
		return true
	}

	return false
}

// SetSEARCHFILTER gets a reference to the given string and assigns it to the SEARCHFILTER field.
func (o *CreateOrUpdateConnectionRequest) SetSEARCHFILTER(v string) {
	o.SEARCHFILTER = &v
}

// GetSETDEFAULTPAGESIZE returns the SETDEFAULTPAGESIZE field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetSETDEFAULTPAGESIZE() string {
	if o == nil || IsNil(o.SETDEFAULTPAGESIZE) {
		var ret string
		return ret
	}
	return *o.SETDEFAULTPAGESIZE
}

// GetSETDEFAULTPAGESIZEOk returns a tuple with the SETDEFAULTPAGESIZE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetSETDEFAULTPAGESIZEOk() (*string, bool) {
	if o == nil || IsNil(o.SETDEFAULTPAGESIZE) {
		return nil, false
	}
	return o.SETDEFAULTPAGESIZE, true
}

// HasSETDEFAULTPAGESIZE returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasSETDEFAULTPAGESIZE() bool {
	if o != nil && !IsNil(o.SETDEFAULTPAGESIZE) {
		return true
	}

	return false
}

// SetSETDEFAULTPAGESIZE gets a reference to the given string and assigns it to the SETDEFAULTPAGESIZE field.
func (o *CreateOrUpdateConnectionRequest) SetSETDEFAULTPAGESIZE(v string) {
	o.SETDEFAULTPAGESIZE = &v
}

// GetSETRANDOMPASSWORD returns the SETRANDOMPASSWORD field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetSETRANDOMPASSWORD() string {
	if o == nil || IsNil(o.SETRANDOMPASSWORD) {
		var ret string
		return ret
	}
	return *o.SETRANDOMPASSWORD
}

// GetSETRANDOMPASSWORDOk returns a tuple with the SETRANDOMPASSWORD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetSETRANDOMPASSWORDOk() (*string, bool) {
	if o == nil || IsNil(o.SETRANDOMPASSWORD) {
		return nil, false
	}
	return o.SETRANDOMPASSWORD, true
}

// HasSETRANDOMPASSWORD returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasSETRANDOMPASSWORD() bool {
	if o != nil && !IsNil(o.SETRANDOMPASSWORD) {
		return true
	}

	return false
}

// SetSETRANDOMPASSWORD gets a reference to the given string and assigns it to the SETRANDOMPASSWORD field.
func (o *CreateOrUpdateConnectionRequest) SetSETRANDOMPASSWORD(v string) {
	o.SETRANDOMPASSWORD = &v
}

// GetSTATUSKEYJSON returns the STATUSKEYJSON field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetSTATUSKEYJSON() string {
	if o == nil || IsNil(o.STATUSKEYJSON) {
		var ret string
		return ret
	}
	return *o.STATUSKEYJSON
}

// GetSTATUSKEYJSONOk returns a tuple with the STATUSKEYJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetSTATUSKEYJSONOk() (*string, bool) {
	if o == nil || IsNil(o.STATUSKEYJSON) {
		return nil, false
	}
	return o.STATUSKEYJSON, true
}

// HasSTATUSKEYJSON returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasSTATUSKEYJSON() bool {
	if o != nil && !IsNil(o.STATUSKEYJSON) {
		return true
	}

	return false
}

// SetSTATUSKEYJSON gets a reference to the given string and assigns it to the STATUSKEYJSON field.
func (o *CreateOrUpdateConnectionRequest) SetSTATUSKEYJSON(v string) {
	o.STATUSKEYJSON = &v
}

// GetSTATUS_THRESHOLD_CONFIG returns the STATUS_THRESHOLD_CONFIG field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetSTATUS_THRESHOLD_CONFIG() string {
	if o == nil || IsNil(o.STATUS_THRESHOLD_CONFIG) {
		var ret string
		return ret
	}
	return *o.STATUS_THRESHOLD_CONFIG
}

// GetSTATUS_THRESHOLD_CONFIGOk returns a tuple with the STATUS_THRESHOLD_CONFIG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetSTATUS_THRESHOLD_CONFIGOk() (*string, bool) {
	if o == nil || IsNil(o.STATUS_THRESHOLD_CONFIG) {
		return nil, false
	}
	return o.STATUS_THRESHOLD_CONFIG, true
}

// HasSTATUS_THRESHOLD_CONFIG returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasSTATUS_THRESHOLD_CONFIG() bool {
	if o != nil && !IsNil(o.STATUS_THRESHOLD_CONFIG) {
		return true
	}

	return false
}

// SetSTATUS_THRESHOLD_CONFIG gets a reference to the given string and assigns it to the STATUS_THRESHOLD_CONFIG field.
func (o *CreateOrUpdateConnectionRequest) SetSTATUS_THRESHOLD_CONFIG(v string) {
	o.STATUS_THRESHOLD_CONFIG = &v
}

// GetSUPPORTEMPTYSTRING returns the SUPPORTEMPTYSTRING field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetSUPPORTEMPTYSTRING() string {
	if o == nil || IsNil(o.SUPPORTEMPTYSTRING) {
		var ret string
		return ret
	}
	return *o.SUPPORTEMPTYSTRING
}

// GetSUPPORTEMPTYSTRINGOk returns a tuple with the SUPPORTEMPTYSTRING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetSUPPORTEMPTYSTRINGOk() (*string, bool) {
	if o == nil || IsNil(o.SUPPORTEMPTYSTRING) {
		return nil, false
	}
	return o.SUPPORTEMPTYSTRING, true
}

// HasSUPPORTEMPTYSTRING returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasSUPPORTEMPTYSTRING() bool {
	if o != nil && !IsNil(o.SUPPORTEMPTYSTRING) {
		return true
	}

	return false
}

// SetSUPPORTEMPTYSTRING gets a reference to the given string and assigns it to the SUPPORTEMPTYSTRING field.
func (o *CreateOrUpdateConnectionRequest) SetSUPPORTEMPTYSTRING(v string) {
	o.SUPPORTEMPTYSTRING = &v
}

// GetUNLOCKACCOUNTJSON returns the UNLOCKACCOUNTJSON field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetUNLOCKACCOUNTJSON() string {
	if o == nil || IsNil(o.UNLOCKACCOUNTJSON) {
		var ret string
		return ret
	}
	return *o.UNLOCKACCOUNTJSON
}

// GetUNLOCKACCOUNTJSONOk returns a tuple with the UNLOCKACCOUNTJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetUNLOCKACCOUNTJSONOk() (*string, bool) {
	if o == nil || IsNil(o.UNLOCKACCOUNTJSON) {
		return nil, false
	}
	return o.UNLOCKACCOUNTJSON, true
}

// HasUNLOCKACCOUNTJSON returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasUNLOCKACCOUNTJSON() bool {
	if o != nil && !IsNil(o.UNLOCKACCOUNTJSON) {
		return true
	}

	return false
}

// SetUNLOCKACCOUNTJSON gets a reference to the given string and assigns it to the UNLOCKACCOUNTJSON field.
func (o *CreateOrUpdateConnectionRequest) SetUNLOCKACCOUNTJSON(v string) {
	o.UNLOCKACCOUNTJSON = &v
}

// GetUPDATEORGJSON returns the UPDATEORGJSON field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetUPDATEORGJSON() string {
	if o == nil || IsNil(o.UPDATEORGJSON) {
		var ret string
		return ret
	}
	return *o.UPDATEORGJSON
}

// GetUPDATEORGJSONOk returns a tuple with the UPDATEORGJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetUPDATEORGJSONOk() (*string, bool) {
	if o == nil || IsNil(o.UPDATEORGJSON) {
		return nil, false
	}
	return o.UPDATEORGJSON, true
}

// HasUPDATEORGJSON returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasUPDATEORGJSON() bool {
	if o != nil && !IsNil(o.UPDATEORGJSON) {
		return true
	}

	return false
}

// SetUPDATEORGJSON gets a reference to the given string and assigns it to the UPDATEORGJSON field.
func (o *CreateOrUpdateConnectionRequest) SetUPDATEORGJSON(v string) {
	o.UPDATEORGJSON = &v
}

// GetURL returns the URL field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetURL() string {
	if o == nil || IsNil(o.URL) {
		var ret string
		return ret
	}
	return *o.URL
}

// GetURLOk returns a tuple with the URL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetURLOk() (*string, bool) {
	if o == nil || IsNil(o.URL) {
		return nil, false
	}
	return o.URL, true
}

// HasURL returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasURL() bool {
	if o != nil && !IsNil(o.URL) {
		return true
	}

	return false
}

// SetURL gets a reference to the given string and assigns it to the URL field.
func (o *CreateOrUpdateConnectionRequest) SetURL(v string) {
	o.URL = &v
}

// GetUSERNAME returns the USERNAME field value if set, zero value otherwise.
func (o *CreateOrUpdateConnectionRequest) GetUSERNAME() string {
	if o == nil || IsNil(o.USERNAME) {
		var ret string
		return ret
	}
	return *o.USERNAME
}

// GetUSERNAMEOk returns a tuple with the USERNAME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConnectionRequest) GetUSERNAMEOk() (*string, bool) {
	if o == nil || IsNil(o.USERNAME) {
		return nil, false
	}
	return o.USERNAME, true
}

// HasUSERNAME returns a boolean if a field has been set.
func (o *CreateOrUpdateConnectionRequest) HasUSERNAME() bool {
	if o != nil && !IsNil(o.USERNAME) {
		return true
	}

	return false
}

// SetUSERNAME gets a reference to the given string and assigns it to the USERNAME field.
func (o *CreateOrUpdateConnectionRequest) SetUSERNAME(v string) {
	o.USERNAME = &v
}

func (o CreateOrUpdateConnectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrUpdateConnectionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectionName) {
		toSerialize["connectionName"] = o.ConnectionName
	}
	toSerialize["connectiontype"] = o.Connectiontype
	if !IsNil(o.Connectionkey) {
		toSerialize["connectionkey"] = o.Connectionkey
	}
	if !IsNil(o.DefaultSavRole) {
		toSerialize["defaultSavRole"] = o.DefaultSavRole
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.EmailTemplate) {
		toSerialize["emailTemplate"] = o.EmailTemplate
	}
	if !IsNil(o.GroupSearchBaseDN) {
		toSerialize["groupSearchBaseDN"] = o.GroupSearchBaseDN
	}
	if !IsNil(o.Saveconnection) {
		toSerialize["saveconnection"] = o.Saveconnection
	}
	if !IsNil(o.Saveinvault) {
		toSerialize["saveinvault"] = o.Saveinvault
	}
	if !IsNil(o.SslCertificate) {
		toSerialize["sslCertificate"] = o.SslCertificate
	}
	if !IsNil(o.Systemname) {
		toSerialize["systemname"] = o.Systemname
	}
	if !IsNil(o.Vaultconnection) {
		toSerialize["vaultconnection"] = o.Vaultconnection
	}
	if !IsNil(o.Vaultconfiguration) {
		toSerialize["vaultconfiguration"] = o.Vaultconfiguration
	}
	if !IsNil(o.ACCOUNT_ATTRIBUTE) {
		toSerialize["ACCOUNT_ATTRIBUTE"] = o.ACCOUNT_ATTRIBUTE
	}
	if !IsNil(o.ACCOUNTNAMERULE) {
		toSerialize["ACCOUNTNAMERULE"] = o.ACCOUNTNAMERULE
	}
	if !IsNil(o.BASE) {
		toSerialize["BASE"] = o.BASE
	}
	if !IsNil(o.CHECKFORUNIQUE) {
		toSerialize["CHECKFORUNIQUE"] = o.CHECKFORUNIQUE
	}
	if !IsNil(o.CREATEORGJSON) {
		toSerialize["CREATEORGJSON"] = o.CREATEORGJSON
	}
	if !IsNil(o.ConfigJSON) {
		toSerialize["ConfigJSON"] = o.ConfigJSON
	}
	if !IsNil(o.ENABLEACCOUNTJSON) {
		toSerialize["ENABLEACCOUNTJSON"] = o.ENABLEACCOUNTJSON
	}
	if !IsNil(o.ENFORCE_TREE_DELETION) {
		toSerialize["ENFORCE_TREE_DELETION"] = o.ENFORCE_TREE_DELETION
	}
	if !IsNil(o.ENTITLEMENT_ATTRIBUTE) {
		toSerialize["ENTITLEMENT_ATTRIBUTE"] = o.ENTITLEMENT_ATTRIBUTE
	}
	if !IsNil(o.IMPORTJSON) {
		toSerialize["IMPORTJSON"] = o.IMPORTJSON
	}
	if !IsNil(o.JCO_ASHOST) {
		toSerialize["JCO_ASHOST"] = o.JCO_ASHOST
	}
	if !IsNil(o.JCO_CLIENT) {
		toSerialize["JCO_CLIENT"] = o.JCO_CLIENT
	}
	if !IsNil(o.JCO_SYSNR) {
		toSerialize["JCO_SYSNR"] = o.JCO_SYSNR
	}
	if !IsNil(o.JCO_USER) {
		toSerialize["JCO_USER"] = o.JCO_USER
	}
	if !IsNil(o.LDAP_OR_AD) {
		toSerialize["LDAP_OR_AD"] = o.LDAP_OR_AD
	}
	if !IsNil(o.OBJECTFILTER) {
		toSerialize["OBJECTFILTER"] = o.OBJECTFILTER
	}
	if !IsNil(o.ORGANIZATION_ATTRIBUTE) {
		toSerialize["ORGANIZATION_ATTRIBUTE"] = o.ORGANIZATION_ATTRIBUTE
	}
	if !IsNil(o.ORGIMPORTJSON) {
		toSerialize["ORGIMPORTJSON"] = o.ORGIMPORTJSON
	}
	if !IsNil(o.ORG_BASE) {
		toSerialize["ORG_BASE"] = o.ORG_BASE
	}
	if !IsNil(o.PAGE_SIZE) {
		toSerialize["PAGE_SIZE"] = o.PAGE_SIZE
	}
	if !IsNil(o.PAM_CONFIG) {
		toSerialize["PAM_CONFIG"] = o.PAM_CONFIG
	}
	if !IsNil(o.PASSWORD) {
		toSerialize["PASSWORD"] = o.PASSWORD
	}
	if !IsNil(o.PASSWORD_MAX_LENGTH) {
		toSerialize["PASSWORD_MAX_LENGTH"] = o.PASSWORD_MAX_LENGTH
	}
	if !IsNil(o.PASSWORD_MIN_LENGTH) {
		toSerialize["PASSWORD_MIN_LENGTH"] = o.PASSWORD_MIN_LENGTH
	}
	if !IsNil(o.PASSWORD_NOOFCAPSALPHA) {
		toSerialize["PASSWORD_NOOFCAPSALPHA"] = o.PASSWORD_NOOFCAPSALPHA
	}
	if !IsNil(o.PASSWORD_NOOFDIGITS) {
		toSerialize["PASSWORD_NOOFDIGITS"] = o.PASSWORD_NOOFDIGITS
	}
	if !IsNil(o.PASSWORD_NOOFSPLCHARS) {
		toSerialize["PASSWORD_NOOFSPLCHARS"] = o.PASSWORD_NOOFSPLCHARS
	}
	if !IsNil(o.READ_OPERATIONAL_ATTRIBUTES) {
		toSerialize["READ_OPERATIONAL_ATTRIBUTES"] = o.READ_OPERATIONAL_ATTRIBUTES
	}
	if !IsNil(o.REMOVEACCOUNTACTION) {
		toSerialize["REMOVEACCOUNTACTION"] = o.REMOVEACCOUNTACTION
	}
	if !IsNil(o.RESETANDCHANGEPASSWRDJSON) {
		toSerialize["RESETANDCHANGEPASSWRDJSON"] = o.RESETANDCHANGEPASSWRDJSON
	}
	if !IsNil(o.REUSEINACTIVEACCOUNT) {
		toSerialize["REUSEINACTIVEACCOUNT"] = o.REUSEINACTIVEACCOUNT
	}
	if !IsNil(o.SEARCHFILTER) {
		toSerialize["SEARCHFILTER"] = o.SEARCHFILTER
	}
	if !IsNil(o.SETDEFAULTPAGESIZE) {
		toSerialize["SETDEFAULTPAGESIZE"] = o.SETDEFAULTPAGESIZE
	}
	if !IsNil(o.SETRANDOMPASSWORD) {
		toSerialize["SETRANDOMPASSWORD"] = o.SETRANDOMPASSWORD
	}
	if !IsNil(o.STATUSKEYJSON) {
		toSerialize["STATUSKEYJSON"] = o.STATUSKEYJSON
	}
	if !IsNil(o.STATUS_THRESHOLD_CONFIG) {
		toSerialize["STATUS_THRESHOLD_CONFIG"] = o.STATUS_THRESHOLD_CONFIG
	}
	if !IsNil(o.SUPPORTEMPTYSTRING) {
		toSerialize["SUPPORTEMPTYSTRING"] = o.SUPPORTEMPTYSTRING
	}
	if !IsNil(o.UNLOCKACCOUNTJSON) {
		toSerialize["UNLOCKACCOUNTJSON"] = o.UNLOCKACCOUNTJSON
	}
	if !IsNil(o.UPDATEORGJSON) {
		toSerialize["UPDATEORGJSON"] = o.UPDATEORGJSON
	}
	if !IsNil(o.URL) {
		toSerialize["URL"] = o.URL
	}
	if !IsNil(o.USERNAME) {
		toSerialize["USERNAME"] = o.USERNAME
	}
	return toSerialize, nil
}

func (o *CreateOrUpdateConnectionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"connectiontype",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrUpdateConnectionRequest := _CreateOrUpdateConnectionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateOrUpdateConnectionRequest)

	if err != nil {
		return err
	}

	*o = CreateOrUpdateConnectionRequest(varCreateOrUpdateConnectionRequest)

	return err
}

type NullableCreateOrUpdateConnectionRequest struct {
	value *CreateOrUpdateConnectionRequest
	isSet bool
}

func (v NullableCreateOrUpdateConnectionRequest) Get() *CreateOrUpdateConnectionRequest {
	return v.value
}

func (v *NullableCreateOrUpdateConnectionRequest) Set(val *CreateOrUpdateConnectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateConnectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateConnectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateConnectionRequest(val *CreateOrUpdateConnectionRequest) *NullableCreateOrUpdateConnectionRequest {
	return &NullableCreateOrUpdateConnectionRequest{value: val, isSet: true}
}

func (v NullableCreateOrUpdateConnectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateConnectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


