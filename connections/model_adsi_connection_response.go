/*
Connection Management API

Use this API to create a connection in Saviynt Identity Cloud.  The Authorization header must have \"Bearer {token}\".  **Mandatory Parameters:** - **connectionname**: Specify the name to identify the connection. - **connectiontype**: Specify a connection type. For example, if your target application is Active Directory, specify the connection type as \"AD\".  **Optional Parameters:** - **description**: Provide a description for the connection. - **defaultsavroles**: Specify the SAV role(s) required for managing this connection along with its associated security systems, endpoints, accounts, and entitlements. - **emailTemplate**: Specify the email template applicable for notifications. - **sslCertificate**: Specify the SSL certificate(s) to secure the connection between EIC and the target application. - **vaultConfiguration**: Specify the path of the vault to obtain secret data (suffix the connector name to make it unique). - **saveinvault**: Set to true to save the encrypted attribute in the configured vault.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connections

import (
	"encoding/json"
)

// checks if the ADSIConnectionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ADSIConnectionResponse{}

// ADSIConnectionResponse struct for ADSIConnectionResponse
type ADSIConnectionResponse struct {
	// API response message
	Msg *string `json:"msg,omitempty"`
	// Email template for the connection
	Emailtemplate *string `json:"emailtemplate,omitempty"`
	// Updator account for the connection
	Updatedby *string `json:"updatedby,omitempty"`
	// Name of the connection
	Connectionname *string `json:"connectionname,omitempty"`
	// Connection key
	Connectionkey *int32 `json:"connectionkey,omitempty"`
	// Description for the connection
	Description *string `json:"description,omitempty"`
	// Connection type
	Connectiontype *string `json:"connectiontype,omitempty"`
	// Connection creation time
	Createdon *string `json:"createdon,omitempty"`
	// Creator account for the connection
	Createdby *string `json:"createdby,omitempty"`
	// Error code
	Errorcode            *int32                    `json:"errorcode,omitempty"`
	Status               *int32                    `json:"status,omitempty"`
	Defaultsavroles      *string                   `json:"defaultsavroles,omitempty"`
	Connectionattributes *ADSIConnectionAttributes `json:"connectionattributes,omitempty"`
}

// NewADSIConnectionResponse instantiates a new ADSIConnectionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewADSIConnectionResponse() *ADSIConnectionResponse {
	this := ADSIConnectionResponse{}
	return &this
}

// NewADSIConnectionResponseWithDefaults instantiates a new ADSIConnectionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewADSIConnectionResponseWithDefaults() *ADSIConnectionResponse {
	this := ADSIConnectionResponse{}
	return &this
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *ADSIConnectionResponse) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADSIConnectionResponse) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *ADSIConnectionResponse) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *ADSIConnectionResponse) SetMsg(v string) {
	o.Msg = &v
}

// GetEmailtemplate returns the Emailtemplate field value if set, zero value otherwise.
func (o *ADSIConnectionResponse) GetEmailtemplate() string {
	if o == nil || IsNil(o.Emailtemplate) {
		var ret string
		return ret
	}
	return *o.Emailtemplate
}

// GetEmailtemplateOk returns a tuple with the Emailtemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADSIConnectionResponse) GetEmailtemplateOk() (*string, bool) {
	if o == nil || IsNil(o.Emailtemplate) {
		return nil, false
	}
	return o.Emailtemplate, true
}

// HasEmailtemplate returns a boolean if a field has been set.
func (o *ADSIConnectionResponse) HasEmailtemplate() bool {
	if o != nil && !IsNil(o.Emailtemplate) {
		return true
	}

	return false
}

// SetEmailtemplate gets a reference to the given string and assigns it to the Emailtemplate field.
func (o *ADSIConnectionResponse) SetEmailtemplate(v string) {
	o.Emailtemplate = &v
}

// GetUpdatedby returns the Updatedby field value if set, zero value otherwise.
func (o *ADSIConnectionResponse) GetUpdatedby() string {
	if o == nil || IsNil(o.Updatedby) {
		var ret string
		return ret
	}
	return *o.Updatedby
}

// GetUpdatedbyOk returns a tuple with the Updatedby field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADSIConnectionResponse) GetUpdatedbyOk() (*string, bool) {
	if o == nil || IsNil(o.Updatedby) {
		return nil, false
	}
	return o.Updatedby, true
}

// HasUpdatedby returns a boolean if a field has been set.
func (o *ADSIConnectionResponse) HasUpdatedby() bool {
	if o != nil && !IsNil(o.Updatedby) {
		return true
	}

	return false
}

// SetUpdatedby gets a reference to the given string and assigns it to the Updatedby field.
func (o *ADSIConnectionResponse) SetUpdatedby(v string) {
	o.Updatedby = &v
}

// GetConnectionname returns the Connectionname field value if set, zero value otherwise.
func (o *ADSIConnectionResponse) GetConnectionname() string {
	if o == nil || IsNil(o.Connectionname) {
		var ret string
		return ret
	}
	return *o.Connectionname
}

// GetConnectionnameOk returns a tuple with the Connectionname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADSIConnectionResponse) GetConnectionnameOk() (*string, bool) {
	if o == nil || IsNil(o.Connectionname) {
		return nil, false
	}
	return o.Connectionname, true
}

// HasConnectionname returns a boolean if a field has been set.
func (o *ADSIConnectionResponse) HasConnectionname() bool {
	if o != nil && !IsNil(o.Connectionname) {
		return true
	}

	return false
}

// SetConnectionname gets a reference to the given string and assigns it to the Connectionname field.
func (o *ADSIConnectionResponse) SetConnectionname(v string) {
	o.Connectionname = &v
}

// GetConnectionkey returns the Connectionkey field value if set, zero value otherwise.
func (o *ADSIConnectionResponse) GetConnectionkey() int32 {
	if o == nil || IsNil(o.Connectionkey) {
		var ret int32
		return ret
	}
	return *o.Connectionkey
}

// GetConnectionkeyOk returns a tuple with the Connectionkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADSIConnectionResponse) GetConnectionkeyOk() (*int32, bool) {
	if o == nil || IsNil(o.Connectionkey) {
		return nil, false
	}
	return o.Connectionkey, true
}

// HasConnectionkey returns a boolean if a field has been set.
func (o *ADSIConnectionResponse) HasConnectionkey() bool {
	if o != nil && !IsNil(o.Connectionkey) {
		return true
	}

	return false
}

// SetConnectionkey gets a reference to the given int32 and assigns it to the Connectionkey field.
func (o *ADSIConnectionResponse) SetConnectionkey(v int32) {
	o.Connectionkey = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ADSIConnectionResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADSIConnectionResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ADSIConnectionResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ADSIConnectionResponse) SetDescription(v string) {
	o.Description = &v
}

// GetConnectiontype returns the Connectiontype field value if set, zero value otherwise.
func (o *ADSIConnectionResponse) GetConnectiontype() string {
	if o == nil || IsNil(o.Connectiontype) {
		var ret string
		return ret
	}
	return *o.Connectiontype
}

// GetConnectiontypeOk returns a tuple with the Connectiontype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADSIConnectionResponse) GetConnectiontypeOk() (*string, bool) {
	if o == nil || IsNil(o.Connectiontype) {
		return nil, false
	}
	return o.Connectiontype, true
}

// HasConnectiontype returns a boolean if a field has been set.
func (o *ADSIConnectionResponse) HasConnectiontype() bool {
	if o != nil && !IsNil(o.Connectiontype) {
		return true
	}

	return false
}

// SetConnectiontype gets a reference to the given string and assigns it to the Connectiontype field.
func (o *ADSIConnectionResponse) SetConnectiontype(v string) {
	o.Connectiontype = &v
}

// GetCreatedon returns the Createdon field value if set, zero value otherwise.
func (o *ADSIConnectionResponse) GetCreatedon() string {
	if o == nil || IsNil(o.Createdon) {
		var ret string
		return ret
	}
	return *o.Createdon
}

// GetCreatedonOk returns a tuple with the Createdon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADSIConnectionResponse) GetCreatedonOk() (*string, bool) {
	if o == nil || IsNil(o.Createdon) {
		return nil, false
	}
	return o.Createdon, true
}

// HasCreatedon returns a boolean if a field has been set.
func (o *ADSIConnectionResponse) HasCreatedon() bool {
	if o != nil && !IsNil(o.Createdon) {
		return true
	}

	return false
}

// SetCreatedon gets a reference to the given string and assigns it to the Createdon field.
func (o *ADSIConnectionResponse) SetCreatedon(v string) {
	o.Createdon = &v
}

// GetCreatedby returns the Createdby field value if set, zero value otherwise.
func (o *ADSIConnectionResponse) GetCreatedby() string {
	if o == nil || IsNil(o.Createdby) {
		var ret string
		return ret
	}
	return *o.Createdby
}

// GetCreatedbyOk returns a tuple with the Createdby field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADSIConnectionResponse) GetCreatedbyOk() (*string, bool) {
	if o == nil || IsNil(o.Createdby) {
		return nil, false
	}
	return o.Createdby, true
}

// HasCreatedby returns a boolean if a field has been set.
func (o *ADSIConnectionResponse) HasCreatedby() bool {
	if o != nil && !IsNil(o.Createdby) {
		return true
	}

	return false
}

// SetCreatedby gets a reference to the given string and assigns it to the Createdby field.
func (o *ADSIConnectionResponse) SetCreatedby(v string) {
	o.Createdby = &v
}

// GetErrorcode returns the Errorcode field value if set, zero value otherwise.
func (o *ADSIConnectionResponse) GetErrorcode() int32 {
	if o == nil || IsNil(o.Errorcode) {
		var ret int32
		return ret
	}
	return *o.Errorcode
}

// GetErrorcodeOk returns a tuple with the Errorcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADSIConnectionResponse) GetErrorcodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Errorcode) {
		return nil, false
	}
	return o.Errorcode, true
}

// HasErrorcode returns a boolean if a field has been set.
func (o *ADSIConnectionResponse) HasErrorcode() bool {
	if o != nil && !IsNil(o.Errorcode) {
		return true
	}

	return false
}

// SetErrorcode gets a reference to the given int32 and assigns it to the Errorcode field.
func (o *ADSIConnectionResponse) SetErrorcode(v int32) {
	o.Errorcode = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ADSIConnectionResponse) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADSIConnectionResponse) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ADSIConnectionResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *ADSIConnectionResponse) SetStatus(v int32) {
	o.Status = &v
}

// GetDefaultsavroles returns the Defaultsavroles field value if set, zero value otherwise.
func (o *ADSIConnectionResponse) GetDefaultsavroles() string {
	if o == nil || IsNil(o.Defaultsavroles) {
		var ret string
		return ret
	}
	return *o.Defaultsavroles
}

// GetDefaultsavrolesOk returns a tuple with the Defaultsavroles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADSIConnectionResponse) GetDefaultsavrolesOk() (*string, bool) {
	if o == nil || IsNil(o.Defaultsavroles) {
		return nil, false
	}
	return o.Defaultsavroles, true
}

// HasDefaultsavroles returns a boolean if a field has been set.
func (o *ADSIConnectionResponse) HasDefaultsavroles() bool {
	if o != nil && !IsNil(o.Defaultsavroles) {
		return true
	}

	return false
}

// SetDefaultsavroles gets a reference to the given string and assigns it to the Defaultsavroles field.
func (o *ADSIConnectionResponse) SetDefaultsavroles(v string) {
	o.Defaultsavroles = &v
}

// GetConnectionattributes returns the Connectionattributes field value if set, zero value otherwise.
func (o *ADSIConnectionResponse) GetConnectionattributes() ADSIConnectionAttributes {
	if o == nil || IsNil(o.Connectionattributes) {
		var ret ADSIConnectionAttributes
		return ret
	}
	return *o.Connectionattributes
}

// GetConnectionattributesOk returns a tuple with the Connectionattributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADSIConnectionResponse) GetConnectionattributesOk() (*ADSIConnectionAttributes, bool) {
	if o == nil || IsNil(o.Connectionattributes) {
		return nil, false
	}
	return o.Connectionattributes, true
}

// HasConnectionattributes returns a boolean if a field has been set.
func (o *ADSIConnectionResponse) HasConnectionattributes() bool {
	if o != nil && !IsNil(o.Connectionattributes) {
		return true
	}

	return false
}

// SetConnectionattributes gets a reference to the given ADSIConnectionAttributes and assigns it to the Connectionattributes field.
func (o *ADSIConnectionResponse) SetConnectionattributes(v ADSIConnectionAttributes) {
	o.Connectionattributes = &v
}

func (o ADSIConnectionResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ADSIConnectionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.Emailtemplate) {
		toSerialize["emailtemplate"] = o.Emailtemplate
	}
	if !IsNil(o.Updatedby) {
		toSerialize["updatedby"] = o.Updatedby
	}
	if !IsNil(o.Connectionname) {
		toSerialize["connectionname"] = o.Connectionname
	}
	if !IsNil(o.Connectionkey) {
		toSerialize["connectionkey"] = o.Connectionkey
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Connectiontype) {
		toSerialize["connectiontype"] = o.Connectiontype
	}
	if !IsNil(o.Createdon) {
		toSerialize["createdon"] = o.Createdon
	}
	if !IsNil(o.Createdby) {
		toSerialize["createdby"] = o.Createdby
	}
	if !IsNil(o.Errorcode) {
		toSerialize["errorcode"] = o.Errorcode
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Defaultsavroles) {
		toSerialize["defaultsavroles"] = o.Defaultsavroles
	}
	if !IsNil(o.Connectionattributes) {
		toSerialize["connectionattributes"] = o.Connectionattributes
	}
	return toSerialize, nil
}

type NullableADSIConnectionResponse struct {
	value *ADSIConnectionResponse
	isSet bool
}

func (v NullableADSIConnectionResponse) Get() *ADSIConnectionResponse {
	return v.value
}

func (v *NullableADSIConnectionResponse) Set(val *ADSIConnectionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableADSIConnectionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableADSIConnectionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableADSIConnectionResponse(val *ADSIConnectionResponse) *NullableADSIConnectionResponse {
	return &NullableADSIConnectionResponse{value: val, isSet: true}
}

func (v NullableADSIConnectionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableADSIConnectionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
