/*
Connection Management API

Use this API to create a connection in Saviynt Identity Cloud.  The Authorization header must have \"Bearer {token}\".  **Mandatory Parameters:** - **connectionname**: Specify the name to identify the connection. - **connectiontype**: Specify a connection type. For example, if your target application is Active Directory, specify the connection type as \"AD\".  **Optional Parameters:** - **description**: Provide a description for the connection. - **defaultsavroles**: Specify the SAV role(s) required for managing this connection along with its associated security systems, endpoints, accounts, and entitlements. - **emailTemplate**: Specify the email template applicable for notifications. - **sslCertificate**: Specify the SSL certificate(s) to secure the connection between EIC and the target application. - **vaultConfiguration**: Specify the path of the vault to obtain secret data (suffix the connector name to make it unique). - **saveinvault**: Set to true to save the encrypted attribute in the configured vault.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connections

import (
	"encoding/json"
)

// checks if the GetConnectionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetConnectionsResponse{}

// GetConnectionsResponse struct for GetConnectionsResponse
type GetConnectionsResponse struct {
	Msg          *string `json:"msg,omitempty"`
	ErrorCode    *string `json:"errorCode,omitempty"`
	DisplayCount *int32  `json:"displayCount,omitempty"`
	TotalCount   *int32  `json:"totalCount,omitempty"`
	// A list of connections.
	ConnectionList []GetConnectionsResponseConnectionListInner `json:"ConnectionList,omitempty"`
}

// NewGetConnectionsResponse instantiates a new GetConnectionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetConnectionsResponse() *GetConnectionsResponse {
	this := GetConnectionsResponse{}
	return &this
}

// NewGetConnectionsResponseWithDefaults instantiates a new GetConnectionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetConnectionsResponseWithDefaults() *GetConnectionsResponse {
	this := GetConnectionsResponse{}
	return &this
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *GetConnectionsResponse) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConnectionsResponse) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *GetConnectionsResponse) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *GetConnectionsResponse) SetMsg(v string) {
	o.Msg = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *GetConnectionsResponse) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConnectionsResponse) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *GetConnectionsResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *GetConnectionsResponse) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetDisplayCount returns the DisplayCount field value if set, zero value otherwise.
func (o *GetConnectionsResponse) GetDisplayCount() int32 {
	if o == nil || IsNil(o.DisplayCount) {
		var ret int32
		return ret
	}
	return *o.DisplayCount
}

// GetDisplayCountOk returns a tuple with the DisplayCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConnectionsResponse) GetDisplayCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DisplayCount) {
		return nil, false
	}
	return o.DisplayCount, true
}

// HasDisplayCount returns a boolean if a field has been set.
func (o *GetConnectionsResponse) HasDisplayCount() bool {
	if o != nil && !IsNil(o.DisplayCount) {
		return true
	}

	return false
}

// SetDisplayCount gets a reference to the given int32 and assigns it to the DisplayCount field.
func (o *GetConnectionsResponse) SetDisplayCount(v int32) {
	o.DisplayCount = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *GetConnectionsResponse) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConnectionsResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *GetConnectionsResponse) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *GetConnectionsResponse) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetConnectionList returns the ConnectionList field value if set, zero value otherwise.
func (o *GetConnectionsResponse) GetConnectionList() []GetConnectionsResponseConnectionListInner {
	if o == nil || IsNil(o.ConnectionList) {
		var ret []GetConnectionsResponseConnectionListInner
		return ret
	}
	return o.ConnectionList
}

// GetConnectionListOk returns a tuple with the ConnectionList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConnectionsResponse) GetConnectionListOk() ([]GetConnectionsResponseConnectionListInner, bool) {
	if o == nil || IsNil(o.ConnectionList) {
		return nil, false
	}
	return o.ConnectionList, true
}

// HasConnectionList returns a boolean if a field has been set.
func (o *GetConnectionsResponse) HasConnectionList() bool {
	if o != nil && !IsNil(o.ConnectionList) {
		return true
	}

	return false
}

// SetConnectionList gets a reference to the given []GetConnectionsResponseConnectionListInner and assigns it to the ConnectionList field.
func (o *GetConnectionsResponse) SetConnectionList(v []GetConnectionsResponseConnectionListInner) {
	o.ConnectionList = v
}

func (o GetConnectionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetConnectionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.DisplayCount) {
		toSerialize["displayCount"] = o.DisplayCount
	}
	if !IsNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	if !IsNil(o.ConnectionList) {
		toSerialize["ConnectionList"] = o.ConnectionList
	}
	return toSerialize, nil
}

type NullableGetConnectionsResponse struct {
	value *GetConnectionsResponse
	isSet bool
}

func (v NullableGetConnectionsResponse) Get() *GetConnectionsResponse {
	return v.value
}

func (v *NullableGetConnectionsResponse) Set(val *GetConnectionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetConnectionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetConnectionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetConnectionsResponse(val *GetConnectionsResponse) *NullableGetConnectionsResponse {
	return &NullableGetConnectionsResponse{value: val, isSet: true}
}

func (v NullableGetConnectionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetConnectionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
