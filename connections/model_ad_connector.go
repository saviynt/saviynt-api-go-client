/*
Connection Management API

Use this API to create a connection in Saviynt Identity Cloud.  The Authorization header must have \"Bearer {token}\".  **Mandatory Parameters:** - **connectionname**: Specify the name to identify the connection. - **connectiontype**: Specify a connection type. For example, if your target application is Active Directory, specify the connection type as \"AD\".  **Optional Parameters:** - **description**: Provide a description for the connection. - **defaultsavroles**: Specify the SAV role(s) required for managing this connection along with its associated security systems, endpoints, accounts, and entitlements. - **emailTemplate**: Specify the email template applicable for notifications. - **sslCertificate**: Specify the SSL certificate(s) to secure the connection between EIC and the target application. - **vaultConfiguration**: Specify the path of the vault to obtain secret data (suffix the connector name to make it unique). - **saveinvault**: Set to true to save the encrypted attribute in the configured vault.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connections

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ADConnector type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ADConnector{}

// ADConnector struct for ADConnector
type ADConnector struct {
	BaseConnector
	// LDAP or target system URL.
	URL *string `json:"URL,omitempty"`
	// LDAP or system admin username.
	USERNAME *string `json:"USERNAME,omitempty"`
	// Set the Password
	PASSWORD string `json:"PASSWORD"`
	// Type of Endpoint - LDAP or AD, default value is AD
	LDAP_OR_AD *string `json:"LDAP_OR_AD,omitempty"`
	// Attribute used for entitlements.
	ENTITLEMENT_ATTRIBUTE *string `json:"ENTITLEMENT_ATTRIBUTE,omitempty"`
	// Attribute uniqueness validation rule.
	CHECKFORUNIQUE *string `json:"CHECKFORUNIQUE,omitempty"`
	// Base DN for group search in LDAP.
	GroupSearchBaseDN *string `json:"groupSearchBaseDN,omitempty"`
	// Mapping used during group creation and updation.
	CreateUpdateMappings *string `json:"createUpdateMappings,omitempty"`
	// Configuration for Incremental Import if the Incremental import is based on ChangeNumber.
	INCREMENTAL_CONFIG *string `json:"INCREMENTAL_CONFIG,omitempty"`
	// Maximum value of the changeNumber.
	MAX_CHANGENUMBER *string `json:"MAX_CHANGENUMBER,omitempty"`
	// Read operational attributes from LDAP.
	READ_OPERATIONAL_ATTRIBUTES *string `json:"READ_OPERATIONAL_ATTRIBUTES,omitempty"`
	// LDAP base DN.
	BASE *string `json:"BASE,omitempty"`
	// Windows connector connection name to connect and get domain controller data.
	DC_LOCATOR *string `json:"DC_LOCATOR,omitempty"`
	// JSON configuration for account status thresholds.
	STATUS_THRESHOLD_CONFIG *string `json:"STATUS_THRESHOLD_CONFIG,omitempty"`
	// Action performed on account removal.
	REMOVEACCOUNTACTION *string `json:"REMOVEACCOUNTACTION,omitempty"`
	// Map LDAP user attribute to EIC account attribute for import
	ACCOUNT_ATTRIBUTE *string `json:"ACCOUNT_ATTRIBUTE,omitempty"`
	// Rule to generate account name.
	ACCOUNTNAMERULE *string `json:"ACCOUNTNAMERULE,omitempty"`
	ADVSEARCH *string `json:"ADVSEARCH,omitempty"`
	// Set default page size for LDAP queries.
	SETDEFAULTPAGESIZE *string `json:"SETDEFAULTPAGESIZE,omitempty"`
	// JSON actions for password reset/change.
	RESETANDCHANGEPASSWRDJSON *string `json:"RESETANDCHANGEPASSWRDJSON,omitempty"`
	// Reuse inactive accounts setting.
	REUSEINACTIVEACCOUNT *string `json:"REUSEINACTIVEACCOUNT,omitempty"`
	// JSON import configurations.
	IMPORTJSON *string `json:"IMPORTJSON,omitempty"`
	// Set to TRUE to send an empty value or null string during provisioning.
	SUPPORTEMPTYSTRING *string `json:"SUPPORTEMPTYSTRING,omitempty"`
	// JSON configuration to enable account actions.
	ENABLEACCOUNTJSON *string `json:"ENABLEACCOUNTJSON,omitempty"`
	// LDAP pagination page size.
	PAGE_SIZE *string `json:"PAGE_SIZE,omitempty"`
	// Map LDAP user attribute to EIC user attribute for import.
	USER_ATTRIBUTE *string `json:"USER_ATTRIBUTE,omitempty"`
	// Default SAV Role to be assigned to all the new users that gets imported via User Import
	DEFAULT_USER_ROLE *string `json:"DEFAULT_USER_ROLE,omitempty"`
	// LDAP search filter.
	SEARCHFILTER *string `json:"SEARCHFILTER,omitempty"`
	// Provide the configuration to create Child Endpoints and import associated accounts and entitlements
	ENDPOINTS_FILTER *string `json:"ENDPOINTS_FILTER,omitempty"`
	// To create an account, specify the value of the CREATEACCOUNTJSON parameter.
	CREATEACCOUNTJSON *string `json:"CREATEACCOUNTJSON,omitempty"`
	// To update an existing account, specify the value of the UPDATEACCOUNTJSON parameter.
	UPDATEACCOUNTJSON *string `json:"UPDATEACCOUNTJSON,omitempty"`
	// To retain the suspended user accounts, specify the value of the REUSEACCOUNTJSON parameter. This is a mandatory attribute.
	REUSEACCOUNTJSON *string `json:"REUSEACCOUNTJSON,omitempty"`
	// Enforce tree deletion in LDAP.
	ENFORCE_TREE_DELETION *string `json:"ENFORCE_TREE_DELETION,omitempty"`
	ADVANCE_FILTER_JSON *string `json:"ADVANCE_FILTER_JSON,omitempty"`
	// Filters the objects that will be returned.
	FILTER *string `json:"FILTER,omitempty"`
	// LDAP object filter.
	OBJECTFILTER *string `json:"OBJECTFILTER,omitempty"`
	// To update an existing user, specify the value of the UPDATEUSERJSON parameter.
	UPDATEUSERJSON *string `json:"UPDATEUSERJSON,omitempty"`
	// Flag to save connection permanently.
	Saveconnection *string `json:"saveconnection,omitempty"`
	// Associated system name.
	Systemname *string `json:"systemname,omitempty"`
	// Set random password option.
	SETRANDOMPASSWORD *string `json:"SETRANDOMPASSWORD,omitempty"`
	// Minimum password length.
	PASSWORD_MIN_LENGTH *string `json:"PASSWORD_MIN_LENGTH,omitempty"`
	// Maximum password length.
	PASSWORD_MAX_LENGTH *string `json:"PASSWORD_MAX_LENGTH,omitempty"`
	// Specify the number of special characters required for the random password.
	PASSWORD_NOOFCAPSALPHA *string `json:"PASSWORD_NOOFCAPSALPHA,omitempty"`
	// Number of special characters in password.
	PASSWORD_NOOFSPLCHARS *string `json:"PASSWORD_NOOFSPLCHARS,omitempty"`
	// Specify the Number of digits required for the random password.
	PASSWORD_NOOFDIGITS *string `json:"PASSWORD_NOOFDIGITS,omitempty"`
	// Map LDAP group attribute to EIC entitlement attribute for import
	GroupImportMapping *string `json:"groupImportMapping,omitempty"`
	// JSON configuration to unlock accounts.
	UNLOCKACCOUNTJSON *string `json:"UNLOCKACCOUNTJSON,omitempty"`
	// JSON configuration for account statuses.
	STATUSKEYJSON *string `json:"STATUSKEYJSON,omitempty"`
	// Specify TRUE to enable Group Management for AD.
	ENABLEGROUPMANAGEMENT *string `json:"ENABLEGROUPMANAGEMENT,omitempty"`
	// JSON to specify the different attributes to be checked and action to be performed for disabling an active account.
	DISABLEACCOUNTJSON *string `json:"DISABLEACCOUNTJSON,omitempty"`
	// Specify this parameter to use the inline processor for transforming the data during user import.
	MODIFYUSERDATAJSON *string `json:"MODIFYUSERDATAJSON,omitempty"`
	// Organization BASE for provision job.
	ORG_BASE *string `json:"ORG_BASE,omitempty"`
	// Organization Attributes.
	ORGANIZATION_ATTRIBUTE *string `json:"ORGANIZATION_ATTRIBUTE,omitempty"`
	ORGIMPORTJSON *string `json:"ORGIMPORTJSON,omitempty"`
	// JSON to specify different attributes for Organization Create Provisioning Job.
	CREATEORGJSON *string `json:"CREATEORGJSON,omitempty"`
	// JSON to specify different attributes for Organization Update Provisioning Job.
	UPDATEORGJSON *string `json:"UPDATEORGJSON,omitempty"`
	// We can use this attribute to define the connectionTimeoutConfig.
	ConfigJSON *string `json:"ConfigJSON,omitempty"`
	LAST_IMPORT_TIME *string `json:"LAST_IMPORT_TIME,omitempty"`
	// JSON to specify Bootstrap Config.
	PAM_CONFIG *string `json:"PAM_CONFIG,omitempty"`
}

type _ADConnector ADConnector

// NewADConnector instantiates a new ADConnector object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewADConnector(pASSWORD string, connectionName string, connectiontype string) *ADConnector {
	this := ADConnector{}
	this.ConnectionName = connectionName
	this.Connectiontype = connectiontype
	this.PASSWORD = pASSWORD
	return &this
}

// NewADConnectorWithDefaults instantiates a new ADConnector object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewADConnectorWithDefaults() *ADConnector {
	this := ADConnector{}
	return &this
}

// GetURL returns the URL field value if set, zero value otherwise.
func (o *ADConnector) GetURL() string {
	if o == nil || IsNil(o.URL) {
		var ret string
		return ret
	}
	return *o.URL
}

// GetURLOk returns a tuple with the URL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetURLOk() (*string, bool) {
	if o == nil || IsNil(o.URL) {
		return nil, false
	}
	return o.URL, true
}

// HasURL returns a boolean if a field has been set.
func (o *ADConnector) HasURL() bool {
	if o != nil && !IsNil(o.URL) {
		return true
	}

	return false
}

// SetURL gets a reference to the given string and assigns it to the URL field.
func (o *ADConnector) SetURL(v string) {
	o.URL = &v
}

// GetUSERNAME returns the USERNAME field value if set, zero value otherwise.
func (o *ADConnector) GetUSERNAME() string {
	if o == nil || IsNil(o.USERNAME) {
		var ret string
		return ret
	}
	return *o.USERNAME
}

// GetUSERNAMEOk returns a tuple with the USERNAME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetUSERNAMEOk() (*string, bool) {
	if o == nil || IsNil(o.USERNAME) {
		return nil, false
	}
	return o.USERNAME, true
}

// HasUSERNAME returns a boolean if a field has been set.
func (o *ADConnector) HasUSERNAME() bool {
	if o != nil && !IsNil(o.USERNAME) {
		return true
	}

	return false
}

// SetUSERNAME gets a reference to the given string and assigns it to the USERNAME field.
func (o *ADConnector) SetUSERNAME(v string) {
	o.USERNAME = &v
}

// GetPASSWORD returns the PASSWORD field value
func (o *ADConnector) GetPASSWORD() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PASSWORD
}

// GetPASSWORDOk returns a tuple with the PASSWORD field value
// and a boolean to check if the value has been set.
func (o *ADConnector) GetPASSWORDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PASSWORD, true
}

// SetPASSWORD sets field value
func (o *ADConnector) SetPASSWORD(v string) {
	o.PASSWORD = v
}

// GetLDAP_OR_AD returns the LDAP_OR_AD field value if set, zero value otherwise.
func (o *ADConnector) GetLDAP_OR_AD() string {
	if o == nil || IsNil(o.LDAP_OR_AD) {
		var ret string
		return ret
	}
	return *o.LDAP_OR_AD
}

// GetLDAP_OR_ADOk returns a tuple with the LDAP_OR_AD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetLDAP_OR_ADOk() (*string, bool) {
	if o == nil || IsNil(o.LDAP_OR_AD) {
		return nil, false
	}
	return o.LDAP_OR_AD, true
}

// HasLDAP_OR_AD returns a boolean if a field has been set.
func (o *ADConnector) HasLDAP_OR_AD() bool {
	if o != nil && !IsNil(o.LDAP_OR_AD) {
		return true
	}

	return false
}

// SetLDAP_OR_AD gets a reference to the given string and assigns it to the LDAP_OR_AD field.
func (o *ADConnector) SetLDAP_OR_AD(v string) {
	o.LDAP_OR_AD = &v
}

// GetENTITLEMENT_ATTRIBUTE returns the ENTITLEMENT_ATTRIBUTE field value if set, zero value otherwise.
func (o *ADConnector) GetENTITLEMENT_ATTRIBUTE() string {
	if o == nil || IsNil(o.ENTITLEMENT_ATTRIBUTE) {
		var ret string
		return ret
	}
	return *o.ENTITLEMENT_ATTRIBUTE
}

// GetENTITLEMENT_ATTRIBUTEOk returns a tuple with the ENTITLEMENT_ATTRIBUTE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetENTITLEMENT_ATTRIBUTEOk() (*string, bool) {
	if o == nil || IsNil(o.ENTITLEMENT_ATTRIBUTE) {
		return nil, false
	}
	return o.ENTITLEMENT_ATTRIBUTE, true
}

// HasENTITLEMENT_ATTRIBUTE returns a boolean if a field has been set.
func (o *ADConnector) HasENTITLEMENT_ATTRIBUTE() bool {
	if o != nil && !IsNil(o.ENTITLEMENT_ATTRIBUTE) {
		return true
	}

	return false
}

// SetENTITLEMENT_ATTRIBUTE gets a reference to the given string and assigns it to the ENTITLEMENT_ATTRIBUTE field.
func (o *ADConnector) SetENTITLEMENT_ATTRIBUTE(v string) {
	o.ENTITLEMENT_ATTRIBUTE = &v
}

// GetCHECKFORUNIQUE returns the CHECKFORUNIQUE field value if set, zero value otherwise.
func (o *ADConnector) GetCHECKFORUNIQUE() string {
	if o == nil || IsNil(o.CHECKFORUNIQUE) {
		var ret string
		return ret
	}
	return *o.CHECKFORUNIQUE
}

// GetCHECKFORUNIQUEOk returns a tuple with the CHECKFORUNIQUE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetCHECKFORUNIQUEOk() (*string, bool) {
	if o == nil || IsNil(o.CHECKFORUNIQUE) {
		return nil, false
	}
	return o.CHECKFORUNIQUE, true
}

// HasCHECKFORUNIQUE returns a boolean if a field has been set.
func (o *ADConnector) HasCHECKFORUNIQUE() bool {
	if o != nil && !IsNil(o.CHECKFORUNIQUE) {
		return true
	}

	return false
}

// SetCHECKFORUNIQUE gets a reference to the given string and assigns it to the CHECKFORUNIQUE field.
func (o *ADConnector) SetCHECKFORUNIQUE(v string) {
	o.CHECKFORUNIQUE = &v
}

// GetGroupSearchBaseDN returns the GroupSearchBaseDN field value if set, zero value otherwise.
func (o *ADConnector) GetGroupSearchBaseDN() string {
	if o == nil || IsNil(o.GroupSearchBaseDN) {
		var ret string
		return ret
	}
	return *o.GroupSearchBaseDN
}

// GetGroupSearchBaseDNOk returns a tuple with the GroupSearchBaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetGroupSearchBaseDNOk() (*string, bool) {
	if o == nil || IsNil(o.GroupSearchBaseDN) {
		return nil, false
	}
	return o.GroupSearchBaseDN, true
}

// HasGroupSearchBaseDN returns a boolean if a field has been set.
func (o *ADConnector) HasGroupSearchBaseDN() bool {
	if o != nil && !IsNil(o.GroupSearchBaseDN) {
		return true
	}

	return false
}

// SetGroupSearchBaseDN gets a reference to the given string and assigns it to the GroupSearchBaseDN field.
func (o *ADConnector) SetGroupSearchBaseDN(v string) {
	o.GroupSearchBaseDN = &v
}

// GetCreateUpdateMappings returns the CreateUpdateMappings field value if set, zero value otherwise.
func (o *ADConnector) GetCreateUpdateMappings() string {
	if o == nil || IsNil(o.CreateUpdateMappings) {
		var ret string
		return ret
	}
	return *o.CreateUpdateMappings
}

// GetCreateUpdateMappingsOk returns a tuple with the CreateUpdateMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetCreateUpdateMappingsOk() (*string, bool) {
	if o == nil || IsNil(o.CreateUpdateMappings) {
		return nil, false
	}
	return o.CreateUpdateMappings, true
}

// HasCreateUpdateMappings returns a boolean if a field has been set.
func (o *ADConnector) HasCreateUpdateMappings() bool {
	if o != nil && !IsNil(o.CreateUpdateMappings) {
		return true
	}

	return false
}

// SetCreateUpdateMappings gets a reference to the given string and assigns it to the CreateUpdateMappings field.
func (o *ADConnector) SetCreateUpdateMappings(v string) {
	o.CreateUpdateMappings = &v
}

// GetINCREMENTAL_CONFIG returns the INCREMENTAL_CONFIG field value if set, zero value otherwise.
func (o *ADConnector) GetINCREMENTAL_CONFIG() string {
	if o == nil || IsNil(o.INCREMENTAL_CONFIG) {
		var ret string
		return ret
	}
	return *o.INCREMENTAL_CONFIG
}

// GetINCREMENTAL_CONFIGOk returns a tuple with the INCREMENTAL_CONFIG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetINCREMENTAL_CONFIGOk() (*string, bool) {
	if o == nil || IsNil(o.INCREMENTAL_CONFIG) {
		return nil, false
	}
	return o.INCREMENTAL_CONFIG, true
}

// HasINCREMENTAL_CONFIG returns a boolean if a field has been set.
func (o *ADConnector) HasINCREMENTAL_CONFIG() bool {
	if o != nil && !IsNil(o.INCREMENTAL_CONFIG) {
		return true
	}

	return false
}

// SetINCREMENTAL_CONFIG gets a reference to the given string and assigns it to the INCREMENTAL_CONFIG field.
func (o *ADConnector) SetINCREMENTAL_CONFIG(v string) {
	o.INCREMENTAL_CONFIG = &v
}

// GetMAX_CHANGENUMBER returns the MAX_CHANGENUMBER field value if set, zero value otherwise.
func (o *ADConnector) GetMAX_CHANGENUMBER() string {
	if o == nil || IsNil(o.MAX_CHANGENUMBER) {
		var ret string
		return ret
	}
	return *o.MAX_CHANGENUMBER
}

// GetMAX_CHANGENUMBEROk returns a tuple with the MAX_CHANGENUMBER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetMAX_CHANGENUMBEROk() (*string, bool) {
	if o == nil || IsNil(o.MAX_CHANGENUMBER) {
		return nil, false
	}
	return o.MAX_CHANGENUMBER, true
}

// HasMAX_CHANGENUMBER returns a boolean if a field has been set.
func (o *ADConnector) HasMAX_CHANGENUMBER() bool {
	if o != nil && !IsNil(o.MAX_CHANGENUMBER) {
		return true
	}

	return false
}

// SetMAX_CHANGENUMBER gets a reference to the given string and assigns it to the MAX_CHANGENUMBER field.
func (o *ADConnector) SetMAX_CHANGENUMBER(v string) {
	o.MAX_CHANGENUMBER = &v
}

// GetREAD_OPERATIONAL_ATTRIBUTES returns the READ_OPERATIONAL_ATTRIBUTES field value if set, zero value otherwise.
func (o *ADConnector) GetREAD_OPERATIONAL_ATTRIBUTES() string {
	if o == nil || IsNil(o.READ_OPERATIONAL_ATTRIBUTES) {
		var ret string
		return ret
	}
	return *o.READ_OPERATIONAL_ATTRIBUTES
}

// GetREAD_OPERATIONAL_ATTRIBUTESOk returns a tuple with the READ_OPERATIONAL_ATTRIBUTES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetREAD_OPERATIONAL_ATTRIBUTESOk() (*string, bool) {
	if o == nil || IsNil(o.READ_OPERATIONAL_ATTRIBUTES) {
		return nil, false
	}
	return o.READ_OPERATIONAL_ATTRIBUTES, true
}

// HasREAD_OPERATIONAL_ATTRIBUTES returns a boolean if a field has been set.
func (o *ADConnector) HasREAD_OPERATIONAL_ATTRIBUTES() bool {
	if o != nil && !IsNil(o.READ_OPERATIONAL_ATTRIBUTES) {
		return true
	}

	return false
}

// SetREAD_OPERATIONAL_ATTRIBUTES gets a reference to the given string and assigns it to the READ_OPERATIONAL_ATTRIBUTES field.
func (o *ADConnector) SetREAD_OPERATIONAL_ATTRIBUTES(v string) {
	o.READ_OPERATIONAL_ATTRIBUTES = &v
}

// GetBASE returns the BASE field value if set, zero value otherwise.
func (o *ADConnector) GetBASE() string {
	if o == nil || IsNil(o.BASE) {
		var ret string
		return ret
	}
	return *o.BASE
}

// GetBASEOk returns a tuple with the BASE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetBASEOk() (*string, bool) {
	if o == nil || IsNil(o.BASE) {
		return nil, false
	}
	return o.BASE, true
}

// HasBASE returns a boolean if a field has been set.
func (o *ADConnector) HasBASE() bool {
	if o != nil && !IsNil(o.BASE) {
		return true
	}

	return false
}

// SetBASE gets a reference to the given string and assigns it to the BASE field.
func (o *ADConnector) SetBASE(v string) {
	o.BASE = &v
}

// GetDC_LOCATOR returns the DC_LOCATOR field value if set, zero value otherwise.
func (o *ADConnector) GetDC_LOCATOR() string {
	if o == nil || IsNil(o.DC_LOCATOR) {
		var ret string
		return ret
	}
	return *o.DC_LOCATOR
}

// GetDC_LOCATOROk returns a tuple with the DC_LOCATOR field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetDC_LOCATOROk() (*string, bool) {
	if o == nil || IsNil(o.DC_LOCATOR) {
		return nil, false
	}
	return o.DC_LOCATOR, true
}

// HasDC_LOCATOR returns a boolean if a field has been set.
func (o *ADConnector) HasDC_LOCATOR() bool {
	if o != nil && !IsNil(o.DC_LOCATOR) {
		return true
	}

	return false
}

// SetDC_LOCATOR gets a reference to the given string and assigns it to the DC_LOCATOR field.
func (o *ADConnector) SetDC_LOCATOR(v string) {
	o.DC_LOCATOR = &v
}

// GetSTATUS_THRESHOLD_CONFIG returns the STATUS_THRESHOLD_CONFIG field value if set, zero value otherwise.
func (o *ADConnector) GetSTATUS_THRESHOLD_CONFIG() string {
	if o == nil || IsNil(o.STATUS_THRESHOLD_CONFIG) {
		var ret string
		return ret
	}
	return *o.STATUS_THRESHOLD_CONFIG
}

// GetSTATUS_THRESHOLD_CONFIGOk returns a tuple with the STATUS_THRESHOLD_CONFIG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetSTATUS_THRESHOLD_CONFIGOk() (*string, bool) {
	if o == nil || IsNil(o.STATUS_THRESHOLD_CONFIG) {
		return nil, false
	}
	return o.STATUS_THRESHOLD_CONFIG, true
}

// HasSTATUS_THRESHOLD_CONFIG returns a boolean if a field has been set.
func (o *ADConnector) HasSTATUS_THRESHOLD_CONFIG() bool {
	if o != nil && !IsNil(o.STATUS_THRESHOLD_CONFIG) {
		return true
	}

	return false
}

// SetSTATUS_THRESHOLD_CONFIG gets a reference to the given string and assigns it to the STATUS_THRESHOLD_CONFIG field.
func (o *ADConnector) SetSTATUS_THRESHOLD_CONFIG(v string) {
	o.STATUS_THRESHOLD_CONFIG = &v
}

// GetREMOVEACCOUNTACTION returns the REMOVEACCOUNTACTION field value if set, zero value otherwise.
func (o *ADConnector) GetREMOVEACCOUNTACTION() string {
	if o == nil || IsNil(o.REMOVEACCOUNTACTION) {
		var ret string
		return ret
	}
	return *o.REMOVEACCOUNTACTION
}

// GetREMOVEACCOUNTACTIONOk returns a tuple with the REMOVEACCOUNTACTION field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetREMOVEACCOUNTACTIONOk() (*string, bool) {
	if o == nil || IsNil(o.REMOVEACCOUNTACTION) {
		return nil, false
	}
	return o.REMOVEACCOUNTACTION, true
}

// HasREMOVEACCOUNTACTION returns a boolean if a field has been set.
func (o *ADConnector) HasREMOVEACCOUNTACTION() bool {
	if o != nil && !IsNil(o.REMOVEACCOUNTACTION) {
		return true
	}

	return false
}

// SetREMOVEACCOUNTACTION gets a reference to the given string and assigns it to the REMOVEACCOUNTACTION field.
func (o *ADConnector) SetREMOVEACCOUNTACTION(v string) {
	o.REMOVEACCOUNTACTION = &v
}

// GetACCOUNT_ATTRIBUTE returns the ACCOUNT_ATTRIBUTE field value if set, zero value otherwise.
func (o *ADConnector) GetACCOUNT_ATTRIBUTE() string {
	if o == nil || IsNil(o.ACCOUNT_ATTRIBUTE) {
		var ret string
		return ret
	}
	return *o.ACCOUNT_ATTRIBUTE
}

// GetACCOUNT_ATTRIBUTEOk returns a tuple with the ACCOUNT_ATTRIBUTE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetACCOUNT_ATTRIBUTEOk() (*string, bool) {
	if o == nil || IsNil(o.ACCOUNT_ATTRIBUTE) {
		return nil, false
	}
	return o.ACCOUNT_ATTRIBUTE, true
}

// HasACCOUNT_ATTRIBUTE returns a boolean if a field has been set.
func (o *ADConnector) HasACCOUNT_ATTRIBUTE() bool {
	if o != nil && !IsNil(o.ACCOUNT_ATTRIBUTE) {
		return true
	}

	return false
}

// SetACCOUNT_ATTRIBUTE gets a reference to the given string and assigns it to the ACCOUNT_ATTRIBUTE field.
func (o *ADConnector) SetACCOUNT_ATTRIBUTE(v string) {
	o.ACCOUNT_ATTRIBUTE = &v
}

// GetACCOUNTNAMERULE returns the ACCOUNTNAMERULE field value if set, zero value otherwise.
func (o *ADConnector) GetACCOUNTNAMERULE() string {
	if o == nil || IsNil(o.ACCOUNTNAMERULE) {
		var ret string
		return ret
	}
	return *o.ACCOUNTNAMERULE
}

// GetACCOUNTNAMERULEOk returns a tuple with the ACCOUNTNAMERULE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetACCOUNTNAMERULEOk() (*string, bool) {
	if o == nil || IsNil(o.ACCOUNTNAMERULE) {
		return nil, false
	}
	return o.ACCOUNTNAMERULE, true
}

// HasACCOUNTNAMERULE returns a boolean if a field has been set.
func (o *ADConnector) HasACCOUNTNAMERULE() bool {
	if o != nil && !IsNil(o.ACCOUNTNAMERULE) {
		return true
	}

	return false
}

// SetACCOUNTNAMERULE gets a reference to the given string and assigns it to the ACCOUNTNAMERULE field.
func (o *ADConnector) SetACCOUNTNAMERULE(v string) {
	o.ACCOUNTNAMERULE = &v
}

// GetADVSEARCH returns the ADVSEARCH field value if set, zero value otherwise.
func (o *ADConnector) GetADVSEARCH() string {
	if o == nil || IsNil(o.ADVSEARCH) {
		var ret string
		return ret
	}
	return *o.ADVSEARCH
}

// GetADVSEARCHOk returns a tuple with the ADVSEARCH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetADVSEARCHOk() (*string, bool) {
	if o == nil || IsNil(o.ADVSEARCH) {
		return nil, false
	}
	return o.ADVSEARCH, true
}

// HasADVSEARCH returns a boolean if a field has been set.
func (o *ADConnector) HasADVSEARCH() bool {
	if o != nil && !IsNil(o.ADVSEARCH) {
		return true
	}

	return false
}

// SetADVSEARCH gets a reference to the given string and assigns it to the ADVSEARCH field.
func (o *ADConnector) SetADVSEARCH(v string) {
	o.ADVSEARCH = &v
}

// GetSETDEFAULTPAGESIZE returns the SETDEFAULTPAGESIZE field value if set, zero value otherwise.
func (o *ADConnector) GetSETDEFAULTPAGESIZE() string {
	if o == nil || IsNil(o.SETDEFAULTPAGESIZE) {
		var ret string
		return ret
	}
	return *o.SETDEFAULTPAGESIZE
}

// GetSETDEFAULTPAGESIZEOk returns a tuple with the SETDEFAULTPAGESIZE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetSETDEFAULTPAGESIZEOk() (*string, bool) {
	if o == nil || IsNil(o.SETDEFAULTPAGESIZE) {
		return nil, false
	}
	return o.SETDEFAULTPAGESIZE, true
}

// HasSETDEFAULTPAGESIZE returns a boolean if a field has been set.
func (o *ADConnector) HasSETDEFAULTPAGESIZE() bool {
	if o != nil && !IsNil(o.SETDEFAULTPAGESIZE) {
		return true
	}

	return false
}

// SetSETDEFAULTPAGESIZE gets a reference to the given string and assigns it to the SETDEFAULTPAGESIZE field.
func (o *ADConnector) SetSETDEFAULTPAGESIZE(v string) {
	o.SETDEFAULTPAGESIZE = &v
}

// GetRESETANDCHANGEPASSWRDJSON returns the RESETANDCHANGEPASSWRDJSON field value if set, zero value otherwise.
func (o *ADConnector) GetRESETANDCHANGEPASSWRDJSON() string {
	if o == nil || IsNil(o.RESETANDCHANGEPASSWRDJSON) {
		var ret string
		return ret
	}
	return *o.RESETANDCHANGEPASSWRDJSON
}

// GetRESETANDCHANGEPASSWRDJSONOk returns a tuple with the RESETANDCHANGEPASSWRDJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetRESETANDCHANGEPASSWRDJSONOk() (*string, bool) {
	if o == nil || IsNil(o.RESETANDCHANGEPASSWRDJSON) {
		return nil, false
	}
	return o.RESETANDCHANGEPASSWRDJSON, true
}

// HasRESETANDCHANGEPASSWRDJSON returns a boolean if a field has been set.
func (o *ADConnector) HasRESETANDCHANGEPASSWRDJSON() bool {
	if o != nil && !IsNil(o.RESETANDCHANGEPASSWRDJSON) {
		return true
	}

	return false
}

// SetRESETANDCHANGEPASSWRDJSON gets a reference to the given string and assigns it to the RESETANDCHANGEPASSWRDJSON field.
func (o *ADConnector) SetRESETANDCHANGEPASSWRDJSON(v string) {
	o.RESETANDCHANGEPASSWRDJSON = &v
}

// GetREUSEINACTIVEACCOUNT returns the REUSEINACTIVEACCOUNT field value if set, zero value otherwise.
func (o *ADConnector) GetREUSEINACTIVEACCOUNT() string {
	if o == nil || IsNil(o.REUSEINACTIVEACCOUNT) {
		var ret string
		return ret
	}
	return *o.REUSEINACTIVEACCOUNT
}

// GetREUSEINACTIVEACCOUNTOk returns a tuple with the REUSEINACTIVEACCOUNT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetREUSEINACTIVEACCOUNTOk() (*string, bool) {
	if o == nil || IsNil(o.REUSEINACTIVEACCOUNT) {
		return nil, false
	}
	return o.REUSEINACTIVEACCOUNT, true
}

// HasREUSEINACTIVEACCOUNT returns a boolean if a field has been set.
func (o *ADConnector) HasREUSEINACTIVEACCOUNT() bool {
	if o != nil && !IsNil(o.REUSEINACTIVEACCOUNT) {
		return true
	}

	return false
}

// SetREUSEINACTIVEACCOUNT gets a reference to the given string and assigns it to the REUSEINACTIVEACCOUNT field.
func (o *ADConnector) SetREUSEINACTIVEACCOUNT(v string) {
	o.REUSEINACTIVEACCOUNT = &v
}

// GetIMPORTJSON returns the IMPORTJSON field value if set, zero value otherwise.
func (o *ADConnector) GetIMPORTJSON() string {
	if o == nil || IsNil(o.IMPORTJSON) {
		var ret string
		return ret
	}
	return *o.IMPORTJSON
}

// GetIMPORTJSONOk returns a tuple with the IMPORTJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetIMPORTJSONOk() (*string, bool) {
	if o == nil || IsNil(o.IMPORTJSON) {
		return nil, false
	}
	return o.IMPORTJSON, true
}

// HasIMPORTJSON returns a boolean if a field has been set.
func (o *ADConnector) HasIMPORTJSON() bool {
	if o != nil && !IsNil(o.IMPORTJSON) {
		return true
	}

	return false
}

// SetIMPORTJSON gets a reference to the given string and assigns it to the IMPORTJSON field.
func (o *ADConnector) SetIMPORTJSON(v string) {
	o.IMPORTJSON = &v
}

// GetSUPPORTEMPTYSTRING returns the SUPPORTEMPTYSTRING field value if set, zero value otherwise.
func (o *ADConnector) GetSUPPORTEMPTYSTRING() string {
	if o == nil || IsNil(o.SUPPORTEMPTYSTRING) {
		var ret string
		return ret
	}
	return *o.SUPPORTEMPTYSTRING
}

// GetSUPPORTEMPTYSTRINGOk returns a tuple with the SUPPORTEMPTYSTRING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetSUPPORTEMPTYSTRINGOk() (*string, bool) {
	if o == nil || IsNil(o.SUPPORTEMPTYSTRING) {
		return nil, false
	}
	return o.SUPPORTEMPTYSTRING, true
}

// HasSUPPORTEMPTYSTRING returns a boolean if a field has been set.
func (o *ADConnector) HasSUPPORTEMPTYSTRING() bool {
	if o != nil && !IsNil(o.SUPPORTEMPTYSTRING) {
		return true
	}

	return false
}

// SetSUPPORTEMPTYSTRING gets a reference to the given string and assigns it to the SUPPORTEMPTYSTRING field.
func (o *ADConnector) SetSUPPORTEMPTYSTRING(v string) {
	o.SUPPORTEMPTYSTRING = &v
}

// GetENABLEACCOUNTJSON returns the ENABLEACCOUNTJSON field value if set, zero value otherwise.
func (o *ADConnector) GetENABLEACCOUNTJSON() string {
	if o == nil || IsNil(o.ENABLEACCOUNTJSON) {
		var ret string
		return ret
	}
	return *o.ENABLEACCOUNTJSON
}

// GetENABLEACCOUNTJSONOk returns a tuple with the ENABLEACCOUNTJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetENABLEACCOUNTJSONOk() (*string, bool) {
	if o == nil || IsNil(o.ENABLEACCOUNTJSON) {
		return nil, false
	}
	return o.ENABLEACCOUNTJSON, true
}

// HasENABLEACCOUNTJSON returns a boolean if a field has been set.
func (o *ADConnector) HasENABLEACCOUNTJSON() bool {
	if o != nil && !IsNil(o.ENABLEACCOUNTJSON) {
		return true
	}

	return false
}

// SetENABLEACCOUNTJSON gets a reference to the given string and assigns it to the ENABLEACCOUNTJSON field.
func (o *ADConnector) SetENABLEACCOUNTJSON(v string) {
	o.ENABLEACCOUNTJSON = &v
}

// GetPAGE_SIZE returns the PAGE_SIZE field value if set, zero value otherwise.
func (o *ADConnector) GetPAGE_SIZE() string {
	if o == nil || IsNil(o.PAGE_SIZE) {
		var ret string
		return ret
	}
	return *o.PAGE_SIZE
}

// GetPAGE_SIZEOk returns a tuple with the PAGE_SIZE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetPAGE_SIZEOk() (*string, bool) {
	if o == nil || IsNil(o.PAGE_SIZE) {
		return nil, false
	}
	return o.PAGE_SIZE, true
}

// HasPAGE_SIZE returns a boolean if a field has been set.
func (o *ADConnector) HasPAGE_SIZE() bool {
	if o != nil && !IsNil(o.PAGE_SIZE) {
		return true
	}

	return false
}

// SetPAGE_SIZE gets a reference to the given string and assigns it to the PAGE_SIZE field.
func (o *ADConnector) SetPAGE_SIZE(v string) {
	o.PAGE_SIZE = &v
}

// GetUSER_ATTRIBUTE returns the USER_ATTRIBUTE field value if set, zero value otherwise.
func (o *ADConnector) GetUSER_ATTRIBUTE() string {
	if o == nil || IsNil(o.USER_ATTRIBUTE) {
		var ret string
		return ret
	}
	return *o.USER_ATTRIBUTE
}

// GetUSER_ATTRIBUTEOk returns a tuple with the USER_ATTRIBUTE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetUSER_ATTRIBUTEOk() (*string, bool) {
	if o == nil || IsNil(o.USER_ATTRIBUTE) {
		return nil, false
	}
	return o.USER_ATTRIBUTE, true
}

// HasUSER_ATTRIBUTE returns a boolean if a field has been set.
func (o *ADConnector) HasUSER_ATTRIBUTE() bool {
	if o != nil && !IsNil(o.USER_ATTRIBUTE) {
		return true
	}

	return false
}

// SetUSER_ATTRIBUTE gets a reference to the given string and assigns it to the USER_ATTRIBUTE field.
func (o *ADConnector) SetUSER_ATTRIBUTE(v string) {
	o.USER_ATTRIBUTE = &v
}

// GetDEFAULT_USER_ROLE returns the DEFAULT_USER_ROLE field value if set, zero value otherwise.
func (o *ADConnector) GetDEFAULT_USER_ROLE() string {
	if o == nil || IsNil(o.DEFAULT_USER_ROLE) {
		var ret string
		return ret
	}
	return *o.DEFAULT_USER_ROLE
}

// GetDEFAULT_USER_ROLEOk returns a tuple with the DEFAULT_USER_ROLE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetDEFAULT_USER_ROLEOk() (*string, bool) {
	if o == nil || IsNil(o.DEFAULT_USER_ROLE) {
		return nil, false
	}
	return o.DEFAULT_USER_ROLE, true
}

// HasDEFAULT_USER_ROLE returns a boolean if a field has been set.
func (o *ADConnector) HasDEFAULT_USER_ROLE() bool {
	if o != nil && !IsNil(o.DEFAULT_USER_ROLE) {
		return true
	}

	return false
}

// SetDEFAULT_USER_ROLE gets a reference to the given string and assigns it to the DEFAULT_USER_ROLE field.
func (o *ADConnector) SetDEFAULT_USER_ROLE(v string) {
	o.DEFAULT_USER_ROLE = &v
}

// GetSEARCHFILTER returns the SEARCHFILTER field value if set, zero value otherwise.
func (o *ADConnector) GetSEARCHFILTER() string {
	if o == nil || IsNil(o.SEARCHFILTER) {
		var ret string
		return ret
	}
	return *o.SEARCHFILTER
}

// GetSEARCHFILTEROk returns a tuple with the SEARCHFILTER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetSEARCHFILTEROk() (*string, bool) {
	if o == nil || IsNil(o.SEARCHFILTER) {
		return nil, false
	}
	return o.SEARCHFILTER, true
}

// HasSEARCHFILTER returns a boolean if a field has been set.
func (o *ADConnector) HasSEARCHFILTER() bool {
	if o != nil && !IsNil(o.SEARCHFILTER) {
		return true
	}

	return false
}

// SetSEARCHFILTER gets a reference to the given string and assigns it to the SEARCHFILTER field.
func (o *ADConnector) SetSEARCHFILTER(v string) {
	o.SEARCHFILTER = &v
}

// GetENDPOINTS_FILTER returns the ENDPOINTS_FILTER field value if set, zero value otherwise.
func (o *ADConnector) GetENDPOINTS_FILTER() string {
	if o == nil || IsNil(o.ENDPOINTS_FILTER) {
		var ret string
		return ret
	}
	return *o.ENDPOINTS_FILTER
}

// GetENDPOINTS_FILTEROk returns a tuple with the ENDPOINTS_FILTER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetENDPOINTS_FILTEROk() (*string, bool) {
	if o == nil || IsNil(o.ENDPOINTS_FILTER) {
		return nil, false
	}
	return o.ENDPOINTS_FILTER, true
}

// HasENDPOINTS_FILTER returns a boolean if a field has been set.
func (o *ADConnector) HasENDPOINTS_FILTER() bool {
	if o != nil && !IsNil(o.ENDPOINTS_FILTER) {
		return true
	}

	return false
}

// SetENDPOINTS_FILTER gets a reference to the given string and assigns it to the ENDPOINTS_FILTER field.
func (o *ADConnector) SetENDPOINTS_FILTER(v string) {
	o.ENDPOINTS_FILTER = &v
}

// GetCREATEACCOUNTJSON returns the CREATEACCOUNTJSON field value if set, zero value otherwise.
func (o *ADConnector) GetCREATEACCOUNTJSON() string {
	if o == nil || IsNil(o.CREATEACCOUNTJSON) {
		var ret string
		return ret
	}
	return *o.CREATEACCOUNTJSON
}

// GetCREATEACCOUNTJSONOk returns a tuple with the CREATEACCOUNTJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetCREATEACCOUNTJSONOk() (*string, bool) {
	if o == nil || IsNil(o.CREATEACCOUNTJSON) {
		return nil, false
	}
	return o.CREATEACCOUNTJSON, true
}

// HasCREATEACCOUNTJSON returns a boolean if a field has been set.
func (o *ADConnector) HasCREATEACCOUNTJSON() bool {
	if o != nil && !IsNil(o.CREATEACCOUNTJSON) {
		return true
	}

	return false
}

// SetCREATEACCOUNTJSON gets a reference to the given string and assigns it to the CREATEACCOUNTJSON field.
func (o *ADConnector) SetCREATEACCOUNTJSON(v string) {
	o.CREATEACCOUNTJSON = &v
}

// GetUPDATEACCOUNTJSON returns the UPDATEACCOUNTJSON field value if set, zero value otherwise.
func (o *ADConnector) GetUPDATEACCOUNTJSON() string {
	if o == nil || IsNil(o.UPDATEACCOUNTJSON) {
		var ret string
		return ret
	}
	return *o.UPDATEACCOUNTJSON
}

// GetUPDATEACCOUNTJSONOk returns a tuple with the UPDATEACCOUNTJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetUPDATEACCOUNTJSONOk() (*string, bool) {
	if o == nil || IsNil(o.UPDATEACCOUNTJSON) {
		return nil, false
	}
	return o.UPDATEACCOUNTJSON, true
}

// HasUPDATEACCOUNTJSON returns a boolean if a field has been set.
func (o *ADConnector) HasUPDATEACCOUNTJSON() bool {
	if o != nil && !IsNil(o.UPDATEACCOUNTJSON) {
		return true
	}

	return false
}

// SetUPDATEACCOUNTJSON gets a reference to the given string and assigns it to the UPDATEACCOUNTJSON field.
func (o *ADConnector) SetUPDATEACCOUNTJSON(v string) {
	o.UPDATEACCOUNTJSON = &v
}

// GetREUSEACCOUNTJSON returns the REUSEACCOUNTJSON field value if set, zero value otherwise.
func (o *ADConnector) GetREUSEACCOUNTJSON() string {
	if o == nil || IsNil(o.REUSEACCOUNTJSON) {
		var ret string
		return ret
	}
	return *o.REUSEACCOUNTJSON
}

// GetREUSEACCOUNTJSONOk returns a tuple with the REUSEACCOUNTJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetREUSEACCOUNTJSONOk() (*string, bool) {
	if o == nil || IsNil(o.REUSEACCOUNTJSON) {
		return nil, false
	}
	return o.REUSEACCOUNTJSON, true
}

// HasREUSEACCOUNTJSON returns a boolean if a field has been set.
func (o *ADConnector) HasREUSEACCOUNTJSON() bool {
	if o != nil && !IsNil(o.REUSEACCOUNTJSON) {
		return true
	}

	return false
}

// SetREUSEACCOUNTJSON gets a reference to the given string and assigns it to the REUSEACCOUNTJSON field.
func (o *ADConnector) SetREUSEACCOUNTJSON(v string) {
	o.REUSEACCOUNTJSON = &v
}

// GetENFORCE_TREE_DELETION returns the ENFORCE_TREE_DELETION field value if set, zero value otherwise.
func (o *ADConnector) GetENFORCE_TREE_DELETION() string {
	if o == nil || IsNil(o.ENFORCE_TREE_DELETION) {
		var ret string
		return ret
	}
	return *o.ENFORCE_TREE_DELETION
}

// GetENFORCE_TREE_DELETIONOk returns a tuple with the ENFORCE_TREE_DELETION field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetENFORCE_TREE_DELETIONOk() (*string, bool) {
	if o == nil || IsNil(o.ENFORCE_TREE_DELETION) {
		return nil, false
	}
	return o.ENFORCE_TREE_DELETION, true
}

// HasENFORCE_TREE_DELETION returns a boolean if a field has been set.
func (o *ADConnector) HasENFORCE_TREE_DELETION() bool {
	if o != nil && !IsNil(o.ENFORCE_TREE_DELETION) {
		return true
	}

	return false
}

// SetENFORCE_TREE_DELETION gets a reference to the given string and assigns it to the ENFORCE_TREE_DELETION field.
func (o *ADConnector) SetENFORCE_TREE_DELETION(v string) {
	o.ENFORCE_TREE_DELETION = &v
}

// GetADVANCE_FILTER_JSON returns the ADVANCE_FILTER_JSON field value if set, zero value otherwise.
func (o *ADConnector) GetADVANCE_FILTER_JSON() string {
	if o == nil || IsNil(o.ADVANCE_FILTER_JSON) {
		var ret string
		return ret
	}
	return *o.ADVANCE_FILTER_JSON
}

// GetADVANCE_FILTER_JSONOk returns a tuple with the ADVANCE_FILTER_JSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetADVANCE_FILTER_JSONOk() (*string, bool) {
	if o == nil || IsNil(o.ADVANCE_FILTER_JSON) {
		return nil, false
	}
	return o.ADVANCE_FILTER_JSON, true
}

// HasADVANCE_FILTER_JSON returns a boolean if a field has been set.
func (o *ADConnector) HasADVANCE_FILTER_JSON() bool {
	if o != nil && !IsNil(o.ADVANCE_FILTER_JSON) {
		return true
	}

	return false
}

// SetADVANCE_FILTER_JSON gets a reference to the given string and assigns it to the ADVANCE_FILTER_JSON field.
func (o *ADConnector) SetADVANCE_FILTER_JSON(v string) {
	o.ADVANCE_FILTER_JSON = &v
}

// GetFILTER returns the FILTER field value if set, zero value otherwise.
func (o *ADConnector) GetFILTER() string {
	if o == nil || IsNil(o.FILTER) {
		var ret string
		return ret
	}
	return *o.FILTER
}

// GetFILTEROk returns a tuple with the FILTER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetFILTEROk() (*string, bool) {
	if o == nil || IsNil(o.FILTER) {
		return nil, false
	}
	return o.FILTER, true
}

// HasFILTER returns a boolean if a field has been set.
func (o *ADConnector) HasFILTER() bool {
	if o != nil && !IsNil(o.FILTER) {
		return true
	}

	return false
}

// SetFILTER gets a reference to the given string and assigns it to the FILTER field.
func (o *ADConnector) SetFILTER(v string) {
	o.FILTER = &v
}

// GetOBJECTFILTER returns the OBJECTFILTER field value if set, zero value otherwise.
func (o *ADConnector) GetOBJECTFILTER() string {
	if o == nil || IsNil(o.OBJECTFILTER) {
		var ret string
		return ret
	}
	return *o.OBJECTFILTER
}

// GetOBJECTFILTEROk returns a tuple with the OBJECTFILTER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetOBJECTFILTEROk() (*string, bool) {
	if o == nil || IsNil(o.OBJECTFILTER) {
		return nil, false
	}
	return o.OBJECTFILTER, true
}

// HasOBJECTFILTER returns a boolean if a field has been set.
func (o *ADConnector) HasOBJECTFILTER() bool {
	if o != nil && !IsNil(o.OBJECTFILTER) {
		return true
	}

	return false
}

// SetOBJECTFILTER gets a reference to the given string and assigns it to the OBJECTFILTER field.
func (o *ADConnector) SetOBJECTFILTER(v string) {
	o.OBJECTFILTER = &v
}

// GetUPDATEUSERJSON returns the UPDATEUSERJSON field value if set, zero value otherwise.
func (o *ADConnector) GetUPDATEUSERJSON() string {
	if o == nil || IsNil(o.UPDATEUSERJSON) {
		var ret string
		return ret
	}
	return *o.UPDATEUSERJSON
}

// GetUPDATEUSERJSONOk returns a tuple with the UPDATEUSERJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetUPDATEUSERJSONOk() (*string, bool) {
	if o == nil || IsNil(o.UPDATEUSERJSON) {
		return nil, false
	}
	return o.UPDATEUSERJSON, true
}

// HasUPDATEUSERJSON returns a boolean if a field has been set.
func (o *ADConnector) HasUPDATEUSERJSON() bool {
	if o != nil && !IsNil(o.UPDATEUSERJSON) {
		return true
	}

	return false
}

// SetUPDATEUSERJSON gets a reference to the given string and assigns it to the UPDATEUSERJSON field.
func (o *ADConnector) SetUPDATEUSERJSON(v string) {
	o.UPDATEUSERJSON = &v
}

// GetSaveconnection returns the Saveconnection field value if set, zero value otherwise.
func (o *ADConnector) GetSaveconnection() string {
	if o == nil || IsNil(o.Saveconnection) {
		var ret string
		return ret
	}
	return *o.Saveconnection
}

// GetSaveconnectionOk returns a tuple with the Saveconnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetSaveconnectionOk() (*string, bool) {
	if o == nil || IsNil(o.Saveconnection) {
		return nil, false
	}
	return o.Saveconnection, true
}

// HasSaveconnection returns a boolean if a field has been set.
func (o *ADConnector) HasSaveconnection() bool {
	if o != nil && !IsNil(o.Saveconnection) {
		return true
	}

	return false
}

// SetSaveconnection gets a reference to the given string and assigns it to the Saveconnection field.
func (o *ADConnector) SetSaveconnection(v string) {
	o.Saveconnection = &v
}

// GetSystemname returns the Systemname field value if set, zero value otherwise.
func (o *ADConnector) GetSystemname() string {
	if o == nil || IsNil(o.Systemname) {
		var ret string
		return ret
	}
	return *o.Systemname
}

// GetSystemnameOk returns a tuple with the Systemname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetSystemnameOk() (*string, bool) {
	if o == nil || IsNil(o.Systemname) {
		return nil, false
	}
	return o.Systemname, true
}

// HasSystemname returns a boolean if a field has been set.
func (o *ADConnector) HasSystemname() bool {
	if o != nil && !IsNil(o.Systemname) {
		return true
	}

	return false
}

// SetSystemname gets a reference to the given string and assigns it to the Systemname field.
func (o *ADConnector) SetSystemname(v string) {
	o.Systemname = &v
}

// GetSETRANDOMPASSWORD returns the SETRANDOMPASSWORD field value if set, zero value otherwise.
func (o *ADConnector) GetSETRANDOMPASSWORD() string {
	if o == nil || IsNil(o.SETRANDOMPASSWORD) {
		var ret string
		return ret
	}
	return *o.SETRANDOMPASSWORD
}

// GetSETRANDOMPASSWORDOk returns a tuple with the SETRANDOMPASSWORD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetSETRANDOMPASSWORDOk() (*string, bool) {
	if o == nil || IsNil(o.SETRANDOMPASSWORD) {
		return nil, false
	}
	return o.SETRANDOMPASSWORD, true
}

// HasSETRANDOMPASSWORD returns a boolean if a field has been set.
func (o *ADConnector) HasSETRANDOMPASSWORD() bool {
	if o != nil && !IsNil(o.SETRANDOMPASSWORD) {
		return true
	}

	return false
}

// SetSETRANDOMPASSWORD gets a reference to the given string and assigns it to the SETRANDOMPASSWORD field.
func (o *ADConnector) SetSETRANDOMPASSWORD(v string) {
	o.SETRANDOMPASSWORD = &v
}

// GetPASSWORD_MIN_LENGTH returns the PASSWORD_MIN_LENGTH field value if set, zero value otherwise.
func (o *ADConnector) GetPASSWORD_MIN_LENGTH() string {
	if o == nil || IsNil(o.PASSWORD_MIN_LENGTH) {
		var ret string
		return ret
	}
	return *o.PASSWORD_MIN_LENGTH
}

// GetPASSWORD_MIN_LENGTHOk returns a tuple with the PASSWORD_MIN_LENGTH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetPASSWORD_MIN_LENGTHOk() (*string, bool) {
	if o == nil || IsNil(o.PASSWORD_MIN_LENGTH) {
		return nil, false
	}
	return o.PASSWORD_MIN_LENGTH, true
}

// HasPASSWORD_MIN_LENGTH returns a boolean if a field has been set.
func (o *ADConnector) HasPASSWORD_MIN_LENGTH() bool {
	if o != nil && !IsNil(o.PASSWORD_MIN_LENGTH) {
		return true
	}

	return false
}

// SetPASSWORD_MIN_LENGTH gets a reference to the given string and assigns it to the PASSWORD_MIN_LENGTH field.
func (o *ADConnector) SetPASSWORD_MIN_LENGTH(v string) {
	o.PASSWORD_MIN_LENGTH = &v
}

// GetPASSWORD_MAX_LENGTH returns the PASSWORD_MAX_LENGTH field value if set, zero value otherwise.
func (o *ADConnector) GetPASSWORD_MAX_LENGTH() string {
	if o == nil || IsNil(o.PASSWORD_MAX_LENGTH) {
		var ret string
		return ret
	}
	return *o.PASSWORD_MAX_LENGTH
}

// GetPASSWORD_MAX_LENGTHOk returns a tuple with the PASSWORD_MAX_LENGTH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetPASSWORD_MAX_LENGTHOk() (*string, bool) {
	if o == nil || IsNil(o.PASSWORD_MAX_LENGTH) {
		return nil, false
	}
	return o.PASSWORD_MAX_LENGTH, true
}

// HasPASSWORD_MAX_LENGTH returns a boolean if a field has been set.
func (o *ADConnector) HasPASSWORD_MAX_LENGTH() bool {
	if o != nil && !IsNil(o.PASSWORD_MAX_LENGTH) {
		return true
	}

	return false
}

// SetPASSWORD_MAX_LENGTH gets a reference to the given string and assigns it to the PASSWORD_MAX_LENGTH field.
func (o *ADConnector) SetPASSWORD_MAX_LENGTH(v string) {
	o.PASSWORD_MAX_LENGTH = &v
}

// GetPASSWORD_NOOFCAPSALPHA returns the PASSWORD_NOOFCAPSALPHA field value if set, zero value otherwise.
func (o *ADConnector) GetPASSWORD_NOOFCAPSALPHA() string {
	if o == nil || IsNil(o.PASSWORD_NOOFCAPSALPHA) {
		var ret string
		return ret
	}
	return *o.PASSWORD_NOOFCAPSALPHA
}

// GetPASSWORD_NOOFCAPSALPHAOk returns a tuple with the PASSWORD_NOOFCAPSALPHA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetPASSWORD_NOOFCAPSALPHAOk() (*string, bool) {
	if o == nil || IsNil(o.PASSWORD_NOOFCAPSALPHA) {
		return nil, false
	}
	return o.PASSWORD_NOOFCAPSALPHA, true
}

// HasPASSWORD_NOOFCAPSALPHA returns a boolean if a field has been set.
func (o *ADConnector) HasPASSWORD_NOOFCAPSALPHA() bool {
	if o != nil && !IsNil(o.PASSWORD_NOOFCAPSALPHA) {
		return true
	}

	return false
}

// SetPASSWORD_NOOFCAPSALPHA gets a reference to the given string and assigns it to the PASSWORD_NOOFCAPSALPHA field.
func (o *ADConnector) SetPASSWORD_NOOFCAPSALPHA(v string) {
	o.PASSWORD_NOOFCAPSALPHA = &v
}

// GetPASSWORD_NOOFSPLCHARS returns the PASSWORD_NOOFSPLCHARS field value if set, zero value otherwise.
func (o *ADConnector) GetPASSWORD_NOOFSPLCHARS() string {
	if o == nil || IsNil(o.PASSWORD_NOOFSPLCHARS) {
		var ret string
		return ret
	}
	return *o.PASSWORD_NOOFSPLCHARS
}

// GetPASSWORD_NOOFSPLCHARSOk returns a tuple with the PASSWORD_NOOFSPLCHARS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetPASSWORD_NOOFSPLCHARSOk() (*string, bool) {
	if o == nil || IsNil(o.PASSWORD_NOOFSPLCHARS) {
		return nil, false
	}
	return o.PASSWORD_NOOFSPLCHARS, true
}

// HasPASSWORD_NOOFSPLCHARS returns a boolean if a field has been set.
func (o *ADConnector) HasPASSWORD_NOOFSPLCHARS() bool {
	if o != nil && !IsNil(o.PASSWORD_NOOFSPLCHARS) {
		return true
	}

	return false
}

// SetPASSWORD_NOOFSPLCHARS gets a reference to the given string and assigns it to the PASSWORD_NOOFSPLCHARS field.
func (o *ADConnector) SetPASSWORD_NOOFSPLCHARS(v string) {
	o.PASSWORD_NOOFSPLCHARS = &v
}

// GetPASSWORD_NOOFDIGITS returns the PASSWORD_NOOFDIGITS field value if set, zero value otherwise.
func (o *ADConnector) GetPASSWORD_NOOFDIGITS() string {
	if o == nil || IsNil(o.PASSWORD_NOOFDIGITS) {
		var ret string
		return ret
	}
	return *o.PASSWORD_NOOFDIGITS
}

// GetPASSWORD_NOOFDIGITSOk returns a tuple with the PASSWORD_NOOFDIGITS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetPASSWORD_NOOFDIGITSOk() (*string, bool) {
	if o == nil || IsNil(o.PASSWORD_NOOFDIGITS) {
		return nil, false
	}
	return o.PASSWORD_NOOFDIGITS, true
}

// HasPASSWORD_NOOFDIGITS returns a boolean if a field has been set.
func (o *ADConnector) HasPASSWORD_NOOFDIGITS() bool {
	if o != nil && !IsNil(o.PASSWORD_NOOFDIGITS) {
		return true
	}

	return false
}

// SetPASSWORD_NOOFDIGITS gets a reference to the given string and assigns it to the PASSWORD_NOOFDIGITS field.
func (o *ADConnector) SetPASSWORD_NOOFDIGITS(v string) {
	o.PASSWORD_NOOFDIGITS = &v
}

// GetGroupImportMapping returns the GroupImportMapping field value if set, zero value otherwise.
func (o *ADConnector) GetGroupImportMapping() string {
	if o == nil || IsNil(o.GroupImportMapping) {
		var ret string
		return ret
	}
	return *o.GroupImportMapping
}

// GetGroupImportMappingOk returns a tuple with the GroupImportMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetGroupImportMappingOk() (*string, bool) {
	if o == nil || IsNil(o.GroupImportMapping) {
		return nil, false
	}
	return o.GroupImportMapping, true
}

// HasGroupImportMapping returns a boolean if a field has been set.
func (o *ADConnector) HasGroupImportMapping() bool {
	if o != nil && !IsNil(o.GroupImportMapping) {
		return true
	}

	return false
}

// SetGroupImportMapping gets a reference to the given string and assigns it to the GroupImportMapping field.
func (o *ADConnector) SetGroupImportMapping(v string) {
	o.GroupImportMapping = &v
}

// GetUNLOCKACCOUNTJSON returns the UNLOCKACCOUNTJSON field value if set, zero value otherwise.
func (o *ADConnector) GetUNLOCKACCOUNTJSON() string {
	if o == nil || IsNil(o.UNLOCKACCOUNTJSON) {
		var ret string
		return ret
	}
	return *o.UNLOCKACCOUNTJSON
}

// GetUNLOCKACCOUNTJSONOk returns a tuple with the UNLOCKACCOUNTJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetUNLOCKACCOUNTJSONOk() (*string, bool) {
	if o == nil || IsNil(o.UNLOCKACCOUNTJSON) {
		return nil, false
	}
	return o.UNLOCKACCOUNTJSON, true
}

// HasUNLOCKACCOUNTJSON returns a boolean if a field has been set.
func (o *ADConnector) HasUNLOCKACCOUNTJSON() bool {
	if o != nil && !IsNil(o.UNLOCKACCOUNTJSON) {
		return true
	}

	return false
}

// SetUNLOCKACCOUNTJSON gets a reference to the given string and assigns it to the UNLOCKACCOUNTJSON field.
func (o *ADConnector) SetUNLOCKACCOUNTJSON(v string) {
	o.UNLOCKACCOUNTJSON = &v
}

// GetSTATUSKEYJSON returns the STATUSKEYJSON field value if set, zero value otherwise.
func (o *ADConnector) GetSTATUSKEYJSON() string {
	if o == nil || IsNil(o.STATUSKEYJSON) {
		var ret string
		return ret
	}
	return *o.STATUSKEYJSON
}

// GetSTATUSKEYJSONOk returns a tuple with the STATUSKEYJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetSTATUSKEYJSONOk() (*string, bool) {
	if o == nil || IsNil(o.STATUSKEYJSON) {
		return nil, false
	}
	return o.STATUSKEYJSON, true
}

// HasSTATUSKEYJSON returns a boolean if a field has been set.
func (o *ADConnector) HasSTATUSKEYJSON() bool {
	if o != nil && !IsNil(o.STATUSKEYJSON) {
		return true
	}

	return false
}

// SetSTATUSKEYJSON gets a reference to the given string and assigns it to the STATUSKEYJSON field.
func (o *ADConnector) SetSTATUSKEYJSON(v string) {
	o.STATUSKEYJSON = &v
}

// GetENABLEGROUPMANAGEMENT returns the ENABLEGROUPMANAGEMENT field value if set, zero value otherwise.
func (o *ADConnector) GetENABLEGROUPMANAGEMENT() string {
	if o == nil || IsNil(o.ENABLEGROUPMANAGEMENT) {
		var ret string
		return ret
	}
	return *o.ENABLEGROUPMANAGEMENT
}

// GetENABLEGROUPMANAGEMENTOk returns a tuple with the ENABLEGROUPMANAGEMENT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetENABLEGROUPMANAGEMENTOk() (*string, bool) {
	if o == nil || IsNil(o.ENABLEGROUPMANAGEMENT) {
		return nil, false
	}
	return o.ENABLEGROUPMANAGEMENT, true
}

// HasENABLEGROUPMANAGEMENT returns a boolean if a field has been set.
func (o *ADConnector) HasENABLEGROUPMANAGEMENT() bool {
	if o != nil && !IsNil(o.ENABLEGROUPMANAGEMENT) {
		return true
	}

	return false
}

// SetENABLEGROUPMANAGEMENT gets a reference to the given string and assigns it to the ENABLEGROUPMANAGEMENT field.
func (o *ADConnector) SetENABLEGROUPMANAGEMENT(v string) {
	o.ENABLEGROUPMANAGEMENT = &v
}

// GetDISABLEACCOUNTJSON returns the DISABLEACCOUNTJSON field value if set, zero value otherwise.
func (o *ADConnector) GetDISABLEACCOUNTJSON() string {
	if o == nil || IsNil(o.DISABLEACCOUNTJSON) {
		var ret string
		return ret
	}
	return *o.DISABLEACCOUNTJSON
}

// GetDISABLEACCOUNTJSONOk returns a tuple with the DISABLEACCOUNTJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetDISABLEACCOUNTJSONOk() (*string, bool) {
	if o == nil || IsNil(o.DISABLEACCOUNTJSON) {
		return nil, false
	}
	return o.DISABLEACCOUNTJSON, true
}

// HasDISABLEACCOUNTJSON returns a boolean if a field has been set.
func (o *ADConnector) HasDISABLEACCOUNTJSON() bool {
	if o != nil && !IsNil(o.DISABLEACCOUNTJSON) {
		return true
	}

	return false
}

// SetDISABLEACCOUNTJSON gets a reference to the given string and assigns it to the DISABLEACCOUNTJSON field.
func (o *ADConnector) SetDISABLEACCOUNTJSON(v string) {
	o.DISABLEACCOUNTJSON = &v
}

// GetMODIFYUSERDATAJSON returns the MODIFYUSERDATAJSON field value if set, zero value otherwise.
func (o *ADConnector) GetMODIFYUSERDATAJSON() string {
	if o == nil || IsNil(o.MODIFYUSERDATAJSON) {
		var ret string
		return ret
	}
	return *o.MODIFYUSERDATAJSON
}

// GetMODIFYUSERDATAJSONOk returns a tuple with the MODIFYUSERDATAJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetMODIFYUSERDATAJSONOk() (*string, bool) {
	if o == nil || IsNil(o.MODIFYUSERDATAJSON) {
		return nil, false
	}
	return o.MODIFYUSERDATAJSON, true
}

// HasMODIFYUSERDATAJSON returns a boolean if a field has been set.
func (o *ADConnector) HasMODIFYUSERDATAJSON() bool {
	if o != nil && !IsNil(o.MODIFYUSERDATAJSON) {
		return true
	}

	return false
}

// SetMODIFYUSERDATAJSON gets a reference to the given string and assigns it to the MODIFYUSERDATAJSON field.
func (o *ADConnector) SetMODIFYUSERDATAJSON(v string) {
	o.MODIFYUSERDATAJSON = &v
}

// GetORG_BASE returns the ORG_BASE field value if set, zero value otherwise.
func (o *ADConnector) GetORG_BASE() string {
	if o == nil || IsNil(o.ORG_BASE) {
		var ret string
		return ret
	}
	return *o.ORG_BASE
}

// GetORG_BASEOk returns a tuple with the ORG_BASE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetORG_BASEOk() (*string, bool) {
	if o == nil || IsNil(o.ORG_BASE) {
		return nil, false
	}
	return o.ORG_BASE, true
}

// HasORG_BASE returns a boolean if a field has been set.
func (o *ADConnector) HasORG_BASE() bool {
	if o != nil && !IsNil(o.ORG_BASE) {
		return true
	}

	return false
}

// SetORG_BASE gets a reference to the given string and assigns it to the ORG_BASE field.
func (o *ADConnector) SetORG_BASE(v string) {
	o.ORG_BASE = &v
}

// GetORGANIZATION_ATTRIBUTE returns the ORGANIZATION_ATTRIBUTE field value if set, zero value otherwise.
func (o *ADConnector) GetORGANIZATION_ATTRIBUTE() string {
	if o == nil || IsNil(o.ORGANIZATION_ATTRIBUTE) {
		var ret string
		return ret
	}
	return *o.ORGANIZATION_ATTRIBUTE
}

// GetORGANIZATION_ATTRIBUTEOk returns a tuple with the ORGANIZATION_ATTRIBUTE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetORGANIZATION_ATTRIBUTEOk() (*string, bool) {
	if o == nil || IsNil(o.ORGANIZATION_ATTRIBUTE) {
		return nil, false
	}
	return o.ORGANIZATION_ATTRIBUTE, true
}

// HasORGANIZATION_ATTRIBUTE returns a boolean if a field has been set.
func (o *ADConnector) HasORGANIZATION_ATTRIBUTE() bool {
	if o != nil && !IsNil(o.ORGANIZATION_ATTRIBUTE) {
		return true
	}

	return false
}

// SetORGANIZATION_ATTRIBUTE gets a reference to the given string and assigns it to the ORGANIZATION_ATTRIBUTE field.
func (o *ADConnector) SetORGANIZATION_ATTRIBUTE(v string) {
	o.ORGANIZATION_ATTRIBUTE = &v
}

// GetORGIMPORTJSON returns the ORGIMPORTJSON field value if set, zero value otherwise.
func (o *ADConnector) GetORGIMPORTJSON() string {
	if o == nil || IsNil(o.ORGIMPORTJSON) {
		var ret string
		return ret
	}
	return *o.ORGIMPORTJSON
}

// GetORGIMPORTJSONOk returns a tuple with the ORGIMPORTJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetORGIMPORTJSONOk() (*string, bool) {
	if o == nil || IsNil(o.ORGIMPORTJSON) {
		return nil, false
	}
	return o.ORGIMPORTJSON, true
}

// HasORGIMPORTJSON returns a boolean if a field has been set.
func (o *ADConnector) HasORGIMPORTJSON() bool {
	if o != nil && !IsNil(o.ORGIMPORTJSON) {
		return true
	}

	return false
}

// SetORGIMPORTJSON gets a reference to the given string and assigns it to the ORGIMPORTJSON field.
func (o *ADConnector) SetORGIMPORTJSON(v string) {
	o.ORGIMPORTJSON = &v
}

// GetCREATEORGJSON returns the CREATEORGJSON field value if set, zero value otherwise.
func (o *ADConnector) GetCREATEORGJSON() string {
	if o == nil || IsNil(o.CREATEORGJSON) {
		var ret string
		return ret
	}
	return *o.CREATEORGJSON
}

// GetCREATEORGJSONOk returns a tuple with the CREATEORGJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetCREATEORGJSONOk() (*string, bool) {
	if o == nil || IsNil(o.CREATEORGJSON) {
		return nil, false
	}
	return o.CREATEORGJSON, true
}

// HasCREATEORGJSON returns a boolean if a field has been set.
func (o *ADConnector) HasCREATEORGJSON() bool {
	if o != nil && !IsNil(o.CREATEORGJSON) {
		return true
	}

	return false
}

// SetCREATEORGJSON gets a reference to the given string and assigns it to the CREATEORGJSON field.
func (o *ADConnector) SetCREATEORGJSON(v string) {
	o.CREATEORGJSON = &v
}

// GetUPDATEORGJSON returns the UPDATEORGJSON field value if set, zero value otherwise.
func (o *ADConnector) GetUPDATEORGJSON() string {
	if o == nil || IsNil(o.UPDATEORGJSON) {
		var ret string
		return ret
	}
	return *o.UPDATEORGJSON
}

// GetUPDATEORGJSONOk returns a tuple with the UPDATEORGJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetUPDATEORGJSONOk() (*string, bool) {
	if o == nil || IsNil(o.UPDATEORGJSON) {
		return nil, false
	}
	return o.UPDATEORGJSON, true
}

// HasUPDATEORGJSON returns a boolean if a field has been set.
func (o *ADConnector) HasUPDATEORGJSON() bool {
	if o != nil && !IsNil(o.UPDATEORGJSON) {
		return true
	}

	return false
}

// SetUPDATEORGJSON gets a reference to the given string and assigns it to the UPDATEORGJSON field.
func (o *ADConnector) SetUPDATEORGJSON(v string) {
	o.UPDATEORGJSON = &v
}

// GetConfigJSON returns the ConfigJSON field value if set, zero value otherwise.
func (o *ADConnector) GetConfigJSON() string {
	if o == nil || IsNil(o.ConfigJSON) {
		var ret string
		return ret
	}
	return *o.ConfigJSON
}

// GetConfigJSONOk returns a tuple with the ConfigJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetConfigJSONOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigJSON) {
		return nil, false
	}
	return o.ConfigJSON, true
}

// HasConfigJSON returns a boolean if a field has been set.
func (o *ADConnector) HasConfigJSON() bool {
	if o != nil && !IsNil(o.ConfigJSON) {
		return true
	}

	return false
}

// SetConfigJSON gets a reference to the given string and assigns it to the ConfigJSON field.
func (o *ADConnector) SetConfigJSON(v string) {
	o.ConfigJSON = &v
}

// GetLAST_IMPORT_TIME returns the LAST_IMPORT_TIME field value if set, zero value otherwise.
func (o *ADConnector) GetLAST_IMPORT_TIME() string {
	if o == nil || IsNil(o.LAST_IMPORT_TIME) {
		var ret string
		return ret
	}
	return *o.LAST_IMPORT_TIME
}

// GetLAST_IMPORT_TIMEOk returns a tuple with the LAST_IMPORT_TIME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetLAST_IMPORT_TIMEOk() (*string, bool) {
	if o == nil || IsNil(o.LAST_IMPORT_TIME) {
		return nil, false
	}
	return o.LAST_IMPORT_TIME, true
}

// HasLAST_IMPORT_TIME returns a boolean if a field has been set.
func (o *ADConnector) HasLAST_IMPORT_TIME() bool {
	if o != nil && !IsNil(o.LAST_IMPORT_TIME) {
		return true
	}

	return false
}

// SetLAST_IMPORT_TIME gets a reference to the given string and assigns it to the LAST_IMPORT_TIME field.
func (o *ADConnector) SetLAST_IMPORT_TIME(v string) {
	o.LAST_IMPORT_TIME = &v
}

// GetPAM_CONFIG returns the PAM_CONFIG field value if set, zero value otherwise.
func (o *ADConnector) GetPAM_CONFIG() string {
	if o == nil || IsNil(o.PAM_CONFIG) {
		var ret string
		return ret
	}
	return *o.PAM_CONFIG
}

// GetPAM_CONFIGOk returns a tuple with the PAM_CONFIG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADConnector) GetPAM_CONFIGOk() (*string, bool) {
	if o == nil || IsNil(o.PAM_CONFIG) {
		return nil, false
	}
	return o.PAM_CONFIG, true
}

// HasPAM_CONFIG returns a boolean if a field has been set.
func (o *ADConnector) HasPAM_CONFIG() bool {
	if o != nil && !IsNil(o.PAM_CONFIG) {
		return true
	}

	return false
}

// SetPAM_CONFIG gets a reference to the given string and assigns it to the PAM_CONFIG field.
func (o *ADConnector) SetPAM_CONFIG(v string) {
	o.PAM_CONFIG = &v
}

func (o ADConnector) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ADConnector) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedBaseConnector, errBaseConnector := json.Marshal(o.BaseConnector)
	if errBaseConnector != nil {
		return map[string]interface{}{}, errBaseConnector
	}
	errBaseConnector = json.Unmarshal([]byte(serializedBaseConnector), &toSerialize)
	if errBaseConnector != nil {
		return map[string]interface{}{}, errBaseConnector
	}
	if !IsNil(o.URL) {
		toSerialize["URL"] = o.URL
	}
	if !IsNil(o.USERNAME) {
		toSerialize["USERNAME"] = o.USERNAME
	}
	toSerialize["PASSWORD"] = o.PASSWORD
	if !IsNil(o.LDAP_OR_AD) {
		toSerialize["LDAP_OR_AD"] = o.LDAP_OR_AD
	}
	if !IsNil(o.ENTITLEMENT_ATTRIBUTE) {
		toSerialize["ENTITLEMENT_ATTRIBUTE"] = o.ENTITLEMENT_ATTRIBUTE
	}
	if !IsNil(o.CHECKFORUNIQUE) {
		toSerialize["CHECKFORUNIQUE"] = o.CHECKFORUNIQUE
	}
	if !IsNil(o.GroupSearchBaseDN) {
		toSerialize["groupSearchBaseDN"] = o.GroupSearchBaseDN
	}
	if !IsNil(o.CreateUpdateMappings) {
		toSerialize["createUpdateMappings"] = o.CreateUpdateMappings
	}
	if !IsNil(o.INCREMENTAL_CONFIG) {
		toSerialize["INCREMENTAL_CONFIG"] = o.INCREMENTAL_CONFIG
	}
	if !IsNil(o.MAX_CHANGENUMBER) {
		toSerialize["MAX_CHANGENUMBER"] = o.MAX_CHANGENUMBER
	}
	if !IsNil(o.READ_OPERATIONAL_ATTRIBUTES) {
		toSerialize["READ_OPERATIONAL_ATTRIBUTES"] = o.READ_OPERATIONAL_ATTRIBUTES
	}
	if !IsNil(o.BASE) {
		toSerialize["BASE"] = o.BASE
	}
	if !IsNil(o.DC_LOCATOR) {
		toSerialize["DC_LOCATOR"] = o.DC_LOCATOR
	}
	if !IsNil(o.STATUS_THRESHOLD_CONFIG) {
		toSerialize["STATUS_THRESHOLD_CONFIG"] = o.STATUS_THRESHOLD_CONFIG
	}
	if !IsNil(o.REMOVEACCOUNTACTION) {
		toSerialize["REMOVEACCOUNTACTION"] = o.REMOVEACCOUNTACTION
	}
	if !IsNil(o.ACCOUNT_ATTRIBUTE) {
		toSerialize["ACCOUNT_ATTRIBUTE"] = o.ACCOUNT_ATTRIBUTE
	}
	if !IsNil(o.ACCOUNTNAMERULE) {
		toSerialize["ACCOUNTNAMERULE"] = o.ACCOUNTNAMERULE
	}
	if !IsNil(o.ADVSEARCH) {
		toSerialize["ADVSEARCH"] = o.ADVSEARCH
	}
	if !IsNil(o.SETDEFAULTPAGESIZE) {
		toSerialize["SETDEFAULTPAGESIZE"] = o.SETDEFAULTPAGESIZE
	}
	if !IsNil(o.RESETANDCHANGEPASSWRDJSON) {
		toSerialize["RESETANDCHANGEPASSWRDJSON"] = o.RESETANDCHANGEPASSWRDJSON
	}
	if !IsNil(o.REUSEINACTIVEACCOUNT) {
		toSerialize["REUSEINACTIVEACCOUNT"] = o.REUSEINACTIVEACCOUNT
	}
	if !IsNil(o.IMPORTJSON) {
		toSerialize["IMPORTJSON"] = o.IMPORTJSON
	}
	if !IsNil(o.SUPPORTEMPTYSTRING) {
		toSerialize["SUPPORTEMPTYSTRING"] = o.SUPPORTEMPTYSTRING
	}
	if !IsNil(o.ENABLEACCOUNTJSON) {
		toSerialize["ENABLEACCOUNTJSON"] = o.ENABLEACCOUNTJSON
	}
	if !IsNil(o.PAGE_SIZE) {
		toSerialize["PAGE_SIZE"] = o.PAGE_SIZE
	}
	if !IsNil(o.USER_ATTRIBUTE) {
		toSerialize["USER_ATTRIBUTE"] = o.USER_ATTRIBUTE
	}
	if !IsNil(o.DEFAULT_USER_ROLE) {
		toSerialize["DEFAULT_USER_ROLE"] = o.DEFAULT_USER_ROLE
	}
	if !IsNil(o.SEARCHFILTER) {
		toSerialize["SEARCHFILTER"] = o.SEARCHFILTER
	}
	if !IsNil(o.ENDPOINTS_FILTER) {
		toSerialize["ENDPOINTS_FILTER"] = o.ENDPOINTS_FILTER
	}
	if !IsNil(o.CREATEACCOUNTJSON) {
		toSerialize["CREATEACCOUNTJSON"] = o.CREATEACCOUNTJSON
	}
	if !IsNil(o.UPDATEACCOUNTJSON) {
		toSerialize["UPDATEACCOUNTJSON"] = o.UPDATEACCOUNTJSON
	}
	if !IsNil(o.REUSEACCOUNTJSON) {
		toSerialize["REUSEACCOUNTJSON"] = o.REUSEACCOUNTJSON
	}
	if !IsNil(o.ENFORCE_TREE_DELETION) {
		toSerialize["ENFORCE_TREE_DELETION"] = o.ENFORCE_TREE_DELETION
	}
	if !IsNil(o.ADVANCE_FILTER_JSON) {
		toSerialize["ADVANCE_FILTER_JSON"] = o.ADVANCE_FILTER_JSON
	}
	if !IsNil(o.FILTER) {
		toSerialize["FILTER"] = o.FILTER
	}
	if !IsNil(o.OBJECTFILTER) {
		toSerialize["OBJECTFILTER"] = o.OBJECTFILTER
	}
	if !IsNil(o.UPDATEUSERJSON) {
		toSerialize["UPDATEUSERJSON"] = o.UPDATEUSERJSON
	}
	if !IsNil(o.Saveconnection) {
		toSerialize["saveconnection"] = o.Saveconnection
	}
	if !IsNil(o.Systemname) {
		toSerialize["systemname"] = o.Systemname
	}
	if !IsNil(o.SETRANDOMPASSWORD) {
		toSerialize["SETRANDOMPASSWORD"] = o.SETRANDOMPASSWORD
	}
	if !IsNil(o.PASSWORD_MIN_LENGTH) {
		toSerialize["PASSWORD_MIN_LENGTH"] = o.PASSWORD_MIN_LENGTH
	}
	if !IsNil(o.PASSWORD_MAX_LENGTH) {
		toSerialize["PASSWORD_MAX_LENGTH"] = o.PASSWORD_MAX_LENGTH
	}
	if !IsNil(o.PASSWORD_NOOFCAPSALPHA) {
		toSerialize["PASSWORD_NOOFCAPSALPHA"] = o.PASSWORD_NOOFCAPSALPHA
	}
	if !IsNil(o.PASSWORD_NOOFSPLCHARS) {
		toSerialize["PASSWORD_NOOFSPLCHARS"] = o.PASSWORD_NOOFSPLCHARS
	}
	if !IsNil(o.PASSWORD_NOOFDIGITS) {
		toSerialize["PASSWORD_NOOFDIGITS"] = o.PASSWORD_NOOFDIGITS
	}
	if !IsNil(o.GroupImportMapping) {
		toSerialize["groupImportMapping"] = o.GroupImportMapping
	}
	if !IsNil(o.UNLOCKACCOUNTJSON) {
		toSerialize["UNLOCKACCOUNTJSON"] = o.UNLOCKACCOUNTJSON
	}
	if !IsNil(o.STATUSKEYJSON) {
		toSerialize["STATUSKEYJSON"] = o.STATUSKEYJSON
	}
	if !IsNil(o.ENABLEGROUPMANAGEMENT) {
		toSerialize["ENABLEGROUPMANAGEMENT"] = o.ENABLEGROUPMANAGEMENT
	}
	if !IsNil(o.DISABLEACCOUNTJSON) {
		toSerialize["DISABLEACCOUNTJSON"] = o.DISABLEACCOUNTJSON
	}
	if !IsNil(o.MODIFYUSERDATAJSON) {
		toSerialize["MODIFYUSERDATAJSON"] = o.MODIFYUSERDATAJSON
	}
	if !IsNil(o.ORG_BASE) {
		toSerialize["ORG_BASE"] = o.ORG_BASE
	}
	if !IsNil(o.ORGANIZATION_ATTRIBUTE) {
		toSerialize["ORGANIZATION_ATTRIBUTE"] = o.ORGANIZATION_ATTRIBUTE
	}
	if !IsNil(o.ORGIMPORTJSON) {
		toSerialize["ORGIMPORTJSON"] = o.ORGIMPORTJSON
	}
	if !IsNil(o.CREATEORGJSON) {
		toSerialize["CREATEORGJSON"] = o.CREATEORGJSON
	}
	if !IsNil(o.UPDATEORGJSON) {
		toSerialize["UPDATEORGJSON"] = o.UPDATEORGJSON
	}
	if !IsNil(o.ConfigJSON) {
		toSerialize["ConfigJSON"] = o.ConfigJSON
	}
	if !IsNil(o.LAST_IMPORT_TIME) {
		toSerialize["LAST_IMPORT_TIME"] = o.LAST_IMPORT_TIME
	}
	if !IsNil(o.PAM_CONFIG) {
		toSerialize["PAM_CONFIG"] = o.PAM_CONFIG
	}
	return toSerialize, nil
}

func (o *ADConnector) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"PASSWORD",
		"connectionName",
		"connectiontype",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varADConnector := _ADConnector{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varADConnector)

	if err != nil {
		return err
	}

	*o = ADConnector(varADConnector)

	return err
}

type NullableADConnector struct {
	value *ADConnector
	isSet bool
}

func (v NullableADConnector) Get() *ADConnector {
	return v.value
}

func (v *NullableADConnector) Set(val *ADConnector) {
	v.value = val
	v.isSet = true
}

func (v NullableADConnector) IsSet() bool {
	return v.isSet
}

func (v *NullableADConnector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableADConnector(val *ADConnector) *NullableADConnector {
	return &NullableADConnector{value: val, isSet: true}
}

func (v NullableADConnector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableADConnector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


