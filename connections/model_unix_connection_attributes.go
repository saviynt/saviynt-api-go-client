/*
Connection Management API

Use this API to create a connection in Saviynt Identity Cloud.  The Authorization header must have \"Bearer {token}\".  **Mandatory Parameters:** - **connectionname**: Specify the name to identify the connection. - **connectiontype**: Specify a connection type. For example, if your target application is Active Directory, specify the connection type as \"AD\".  **Optional Parameters:** - **description**: Provide a description for the connection. - **defaultsavroles**: Specify the SAV role(s) required for managing this connection along with its associated security systems, endpoints, accounts, and entitlements. - **emailTemplate**: Specify the email template applicable for notifications. - **sslCertificate**: Specify the SSL certificate(s) to secure the connection between EIC and the target application. - **vaultConfiguration**: Specify the path of the vault to obtain secret data (suffix the connector name to make it unique). - **saveinvault**: Set to true to save the encrypted attribute in the configured vault.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connections

import (
	"encoding/json"
)

// checks if the UNIXConnectionAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UNIXConnectionAttributes{}

// UNIXConnectionAttributes struct for UNIXConnectionAttributes
type UNIXConnectionAttributes struct {
	GROUPS_FILE                         *string                  `json:"GROUPS_FILE,omitempty"`
	SSH_KEY                             *string                  `json:"SSH_KEY,omitempty"`
	ACCOUNT_ENTITLEMENT_MAPPING_COMMAND *string                  `json:"ACCOUNT_ENTITLEMENT_MAPPING_COMMAND,omitempty"`
	REMOVE_ACCESS_COMMAND               *string                  `json:"REMOVE_ACCESS_COMMAND,omitempty"`
	PEM_KEY_FILE                        *string                  `json:"PEM_KEY_FILE,omitempty"`
	PassThroughConnectionDetails        *string                  `json:"PassThroughConnectionDetails,omitempty"`
	DISABLE_ACCOUNT_COMMAND             *string                  `json:"DISABLE_ACCOUNT_COMMAND,omitempty"`
	ConnectionTimeoutConfig             *ConnectionTimeoutConfig `json:"connectionTimeoutConfig,omitempty"`
	PORT_NUMBER                         *string                  `json:"PORT_NUMBER,omitempty"`
	ConnectionType                      *string                  `json:"connectionType,omitempty"`
	CREATE_GROUP_COMMAND                *string                  `json:"CREATE_GROUP_COMMAND,omitempty"`
	ACCOUNTS_FILE                       *string                  `json:"ACCOUNTS_FILE,omitempty"`
	PASSPHRASE                          *string                  `json:"PASSPHRASE,omitempty"`
	DELETE_GROUP_COMMAND                *string                  `json:"DELETE_GROUP_COMMAND,omitempty"`
	HOST_NAME                           *string                  `json:"HOST_NAME,omitempty"`
	ADD_GROUP_OWNER_COMMAND             *string                  `json:"ADD_GROUP_OWNER_COMMAND,omitempty"`
	STATUS_THRESHOLD_CONFIG             *string                  `json:"STATUS_THRESHOLD_CONFIG,omitempty"`
	USERNAME                            *string                  `json:"USERNAME,omitempty"`
	INACTIVE_LOCK_ACCOUNT               *string                  `json:"INACTIVE_LOCK_ACCOUNT,omitempty"`
	ADD_ACCESS_COMMAND                  *string                  `json:"ADD_ACCESS_COMMAND,omitempty"`
	UPDATE_ACCOUNT_COMMAND              *string                  `json:"UPDATE_ACCOUNT_COMMAND,omitempty"`
	SSHPassThroughPassphrase            *string                  `json:"SSHPassThroughPassphrase,omitempty"`
	SHADOW_FILE                         *string                  `json:"SHADOW_FILE,omitempty"`
	IsTimeoutSupported                  *bool                    `json:"isTimeoutSupported,omitempty"`
	SSHPassThroughSSHKEY                *string                  `json:"SSHPassThroughSSHKEY,omitempty"`
	PROVISION_ACCOUNT_COMMAND           *string                  `json:"PROVISION_ACCOUNT_COMMAND,omitempty"`
	FIREFIGHTERID_GRANT_ACCESS_COMMAND  *string                  `json:"FIREFIGHTERID_GRANT_ACCESS_COMMAND,omitempty"`
	UNLOCK_ACCOUNT_COMMAND              *string                  `json:"UNLOCK_ACCOUNT_COMMAND,omitempty"`
	DEPROVISION_ACCOUNT_COMMAND         *string                  `json:"DEPROVISION_ACCOUNT_COMMAND,omitempty"`
	CHANGE_PASSWRD_JSON                 *string                  `json:"CHANGE_PASSWRD_JSON,omitempty"`
	SSHPassThroughPassword              *string                  `json:"SSHPassThroughPassword,omitempty"`
	FIREFIGHTERID_REVOKE_ACCESS_COMMAND *string                  `json:"FIREFIGHTERID_REVOKE_ACCESS_COMMAND,omitempty"`
	ADD_PRIMARY_GROUP_COMMAND           *string                  `json:"ADD_PRIMARY_GROUP_COMMAND,omitempty"`
	IsTimeoutConfigValidated            *bool                    `json:"isTimeoutConfigValidated,omitempty"`
	LOCK_ACCOUNT_COMMAND                *string                  `json:"LOCK_ACCOUNT_COMMAND,omitempty"`
	PASSWORD                            *string                  `json:"PASSWORD,omitempty"`
	CUSTOM_CONFIG_JSON                  *string                  `json:"CUSTOM_CONFIG_JSON,omitempty"`
	ENABLE_ACCOUNT_COMMAND              *string                  `json:"ENABLE_ACCOUNT_COMMAND,omitempty"`
}

// NewUNIXConnectionAttributes instantiates a new UNIXConnectionAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUNIXConnectionAttributes() *UNIXConnectionAttributes {
	this := UNIXConnectionAttributes{}
	return &this
}

// NewUNIXConnectionAttributesWithDefaults instantiates a new UNIXConnectionAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUNIXConnectionAttributesWithDefaults() *UNIXConnectionAttributes {
	this := UNIXConnectionAttributes{}
	return &this
}

// GetGROUPS_FILE returns the GROUPS_FILE field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetGROUPS_FILE() string {
	if o == nil || IsNil(o.GROUPS_FILE) {
		var ret string
		return ret
	}
	return *o.GROUPS_FILE
}

// GetGROUPS_FILEOk returns a tuple with the GROUPS_FILE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetGROUPS_FILEOk() (*string, bool) {
	if o == nil || IsNil(o.GROUPS_FILE) {
		return nil, false
	}
	return o.GROUPS_FILE, true
}

// HasGROUPS_FILE returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasGROUPS_FILE() bool {
	if o != nil && !IsNil(o.GROUPS_FILE) {
		return true
	}

	return false
}

// SetGROUPS_FILE gets a reference to the given string and assigns it to the GROUPS_FILE field.
func (o *UNIXConnectionAttributes) SetGROUPS_FILE(v string) {
	o.GROUPS_FILE = &v
}

// GetSSH_KEY returns the SSH_KEY field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetSSH_KEY() string {
	if o == nil || IsNil(o.SSH_KEY) {
		var ret string
		return ret
	}
	return *o.SSH_KEY
}

// GetSSH_KEYOk returns a tuple with the SSH_KEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetSSH_KEYOk() (*string, bool) {
	if o == nil || IsNil(o.SSH_KEY) {
		return nil, false
	}
	return o.SSH_KEY, true
}

// HasSSH_KEY returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasSSH_KEY() bool {
	if o != nil && !IsNil(o.SSH_KEY) {
		return true
	}

	return false
}

// SetSSH_KEY gets a reference to the given string and assigns it to the SSH_KEY field.
func (o *UNIXConnectionAttributes) SetSSH_KEY(v string) {
	o.SSH_KEY = &v
}

// GetACCOUNT_ENTITLEMENT_MAPPING_COMMAND returns the ACCOUNT_ENTITLEMENT_MAPPING_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetACCOUNT_ENTITLEMENT_MAPPING_COMMAND() string {
	if o == nil || IsNil(o.ACCOUNT_ENTITLEMENT_MAPPING_COMMAND) {
		var ret string
		return ret
	}
	return *o.ACCOUNT_ENTITLEMENT_MAPPING_COMMAND
}

// GetACCOUNT_ENTITLEMENT_MAPPING_COMMANDOk returns a tuple with the ACCOUNT_ENTITLEMENT_MAPPING_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetACCOUNT_ENTITLEMENT_MAPPING_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.ACCOUNT_ENTITLEMENT_MAPPING_COMMAND) {
		return nil, false
	}
	return o.ACCOUNT_ENTITLEMENT_MAPPING_COMMAND, true
}

// HasACCOUNT_ENTITLEMENT_MAPPING_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasACCOUNT_ENTITLEMENT_MAPPING_COMMAND() bool {
	if o != nil && !IsNil(o.ACCOUNT_ENTITLEMENT_MAPPING_COMMAND) {
		return true
	}

	return false
}

// SetACCOUNT_ENTITLEMENT_MAPPING_COMMAND gets a reference to the given string and assigns it to the ACCOUNT_ENTITLEMENT_MAPPING_COMMAND field.
func (o *UNIXConnectionAttributes) SetACCOUNT_ENTITLEMENT_MAPPING_COMMAND(v string) {
	o.ACCOUNT_ENTITLEMENT_MAPPING_COMMAND = &v
}

// GetREMOVE_ACCESS_COMMAND returns the REMOVE_ACCESS_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetREMOVE_ACCESS_COMMAND() string {
	if o == nil || IsNil(o.REMOVE_ACCESS_COMMAND) {
		var ret string
		return ret
	}
	return *o.REMOVE_ACCESS_COMMAND
}

// GetREMOVE_ACCESS_COMMANDOk returns a tuple with the REMOVE_ACCESS_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetREMOVE_ACCESS_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.REMOVE_ACCESS_COMMAND) {
		return nil, false
	}
	return o.REMOVE_ACCESS_COMMAND, true
}

// HasREMOVE_ACCESS_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasREMOVE_ACCESS_COMMAND() bool {
	if o != nil && !IsNil(o.REMOVE_ACCESS_COMMAND) {
		return true
	}

	return false
}

// SetREMOVE_ACCESS_COMMAND gets a reference to the given string and assigns it to the REMOVE_ACCESS_COMMAND field.
func (o *UNIXConnectionAttributes) SetREMOVE_ACCESS_COMMAND(v string) {
	o.REMOVE_ACCESS_COMMAND = &v
}

// GetPEM_KEY_FILE returns the PEM_KEY_FILE field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetPEM_KEY_FILE() string {
	if o == nil || IsNil(o.PEM_KEY_FILE) {
		var ret string
		return ret
	}
	return *o.PEM_KEY_FILE
}

// GetPEM_KEY_FILEOk returns a tuple with the PEM_KEY_FILE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetPEM_KEY_FILEOk() (*string, bool) {
	if o == nil || IsNil(o.PEM_KEY_FILE) {
		return nil, false
	}
	return o.PEM_KEY_FILE, true
}

// HasPEM_KEY_FILE returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasPEM_KEY_FILE() bool {
	if o != nil && !IsNil(o.PEM_KEY_FILE) {
		return true
	}

	return false
}

// SetPEM_KEY_FILE gets a reference to the given string and assigns it to the PEM_KEY_FILE field.
func (o *UNIXConnectionAttributes) SetPEM_KEY_FILE(v string) {
	o.PEM_KEY_FILE = &v
}

// GetPassThroughConnectionDetails returns the PassThroughConnectionDetails field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetPassThroughConnectionDetails() string {
	if o == nil || IsNil(o.PassThroughConnectionDetails) {
		var ret string
		return ret
	}
	return *o.PassThroughConnectionDetails
}

// GetPassThroughConnectionDetailsOk returns a tuple with the PassThroughConnectionDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetPassThroughConnectionDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.PassThroughConnectionDetails) {
		return nil, false
	}
	return o.PassThroughConnectionDetails, true
}

// HasPassThroughConnectionDetails returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasPassThroughConnectionDetails() bool {
	if o != nil && !IsNil(o.PassThroughConnectionDetails) {
		return true
	}

	return false
}

// SetPassThroughConnectionDetails gets a reference to the given string and assigns it to the PassThroughConnectionDetails field.
func (o *UNIXConnectionAttributes) SetPassThroughConnectionDetails(v string) {
	o.PassThroughConnectionDetails = &v
}

// GetDISABLE_ACCOUNT_COMMAND returns the DISABLE_ACCOUNT_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetDISABLE_ACCOUNT_COMMAND() string {
	if o == nil || IsNil(o.DISABLE_ACCOUNT_COMMAND) {
		var ret string
		return ret
	}
	return *o.DISABLE_ACCOUNT_COMMAND
}

// GetDISABLE_ACCOUNT_COMMANDOk returns a tuple with the DISABLE_ACCOUNT_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetDISABLE_ACCOUNT_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.DISABLE_ACCOUNT_COMMAND) {
		return nil, false
	}
	return o.DISABLE_ACCOUNT_COMMAND, true
}

// HasDISABLE_ACCOUNT_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasDISABLE_ACCOUNT_COMMAND() bool {
	if o != nil && !IsNil(o.DISABLE_ACCOUNT_COMMAND) {
		return true
	}

	return false
}

// SetDISABLE_ACCOUNT_COMMAND gets a reference to the given string and assigns it to the DISABLE_ACCOUNT_COMMAND field.
func (o *UNIXConnectionAttributes) SetDISABLE_ACCOUNT_COMMAND(v string) {
	o.DISABLE_ACCOUNT_COMMAND = &v
}

// GetConnectionTimeoutConfig returns the ConnectionTimeoutConfig field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetConnectionTimeoutConfig() ConnectionTimeoutConfig {
	if o == nil || IsNil(o.ConnectionTimeoutConfig) {
		var ret ConnectionTimeoutConfig
		return ret
	}
	return *o.ConnectionTimeoutConfig
}

// GetConnectionTimeoutConfigOk returns a tuple with the ConnectionTimeoutConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetConnectionTimeoutConfigOk() (*ConnectionTimeoutConfig, bool) {
	if o == nil || IsNil(o.ConnectionTimeoutConfig) {
		return nil, false
	}
	return o.ConnectionTimeoutConfig, true
}

// HasConnectionTimeoutConfig returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasConnectionTimeoutConfig() bool {
	if o != nil && !IsNil(o.ConnectionTimeoutConfig) {
		return true
	}

	return false
}

// SetConnectionTimeoutConfig gets a reference to the given ConnectionTimeoutConfig and assigns it to the ConnectionTimeoutConfig field.
func (o *UNIXConnectionAttributes) SetConnectionTimeoutConfig(v ConnectionTimeoutConfig) {
	o.ConnectionTimeoutConfig = &v
}

// GetPORT_NUMBER returns the PORT_NUMBER field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetPORT_NUMBER() string {
	if o == nil || IsNil(o.PORT_NUMBER) {
		var ret string
		return ret
	}
	return *o.PORT_NUMBER
}

// GetPORT_NUMBEROk returns a tuple with the PORT_NUMBER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetPORT_NUMBEROk() (*string, bool) {
	if o == nil || IsNil(o.PORT_NUMBER) {
		return nil, false
	}
	return o.PORT_NUMBER, true
}

// HasPORT_NUMBER returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasPORT_NUMBER() bool {
	if o != nil && !IsNil(o.PORT_NUMBER) {
		return true
	}

	return false
}

// SetPORT_NUMBER gets a reference to the given string and assigns it to the PORT_NUMBER field.
func (o *UNIXConnectionAttributes) SetPORT_NUMBER(v string) {
	o.PORT_NUMBER = &v
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetConnectionType() string {
	if o == nil || IsNil(o.ConnectionType) {
		var ret string
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetConnectionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionType) {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasConnectionType() bool {
	if o != nil && !IsNil(o.ConnectionType) {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given string and assigns it to the ConnectionType field.
func (o *UNIXConnectionAttributes) SetConnectionType(v string) {
	o.ConnectionType = &v
}

// GetCREATE_GROUP_COMMAND returns the CREATE_GROUP_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetCREATE_GROUP_COMMAND() string {
	if o == nil || IsNil(o.CREATE_GROUP_COMMAND) {
		var ret string
		return ret
	}
	return *o.CREATE_GROUP_COMMAND
}

// GetCREATE_GROUP_COMMANDOk returns a tuple with the CREATE_GROUP_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetCREATE_GROUP_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.CREATE_GROUP_COMMAND) {
		return nil, false
	}
	return o.CREATE_GROUP_COMMAND, true
}

// HasCREATE_GROUP_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasCREATE_GROUP_COMMAND() bool {
	if o != nil && !IsNil(o.CREATE_GROUP_COMMAND) {
		return true
	}

	return false
}

// SetCREATE_GROUP_COMMAND gets a reference to the given string and assigns it to the CREATE_GROUP_COMMAND field.
func (o *UNIXConnectionAttributes) SetCREATE_GROUP_COMMAND(v string) {
	o.CREATE_GROUP_COMMAND = &v
}

// GetACCOUNTS_FILE returns the ACCOUNTS_FILE field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetACCOUNTS_FILE() string {
	if o == nil || IsNil(o.ACCOUNTS_FILE) {
		var ret string
		return ret
	}
	return *o.ACCOUNTS_FILE
}

// GetACCOUNTS_FILEOk returns a tuple with the ACCOUNTS_FILE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetACCOUNTS_FILEOk() (*string, bool) {
	if o == nil || IsNil(o.ACCOUNTS_FILE) {
		return nil, false
	}
	return o.ACCOUNTS_FILE, true
}

// HasACCOUNTS_FILE returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasACCOUNTS_FILE() bool {
	if o != nil && !IsNil(o.ACCOUNTS_FILE) {
		return true
	}

	return false
}

// SetACCOUNTS_FILE gets a reference to the given string and assigns it to the ACCOUNTS_FILE field.
func (o *UNIXConnectionAttributes) SetACCOUNTS_FILE(v string) {
	o.ACCOUNTS_FILE = &v
}

// GetPASSPHRASE returns the PASSPHRASE field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetPASSPHRASE() string {
	if o == nil || IsNil(o.PASSPHRASE) {
		var ret string
		return ret
	}
	return *o.PASSPHRASE
}

// GetPASSPHRASEOk returns a tuple with the PASSPHRASE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetPASSPHRASEOk() (*string, bool) {
	if o == nil || IsNil(o.PASSPHRASE) {
		return nil, false
	}
	return o.PASSPHRASE, true
}

// HasPASSPHRASE returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasPASSPHRASE() bool {
	if o != nil && !IsNil(o.PASSPHRASE) {
		return true
	}

	return false
}

// SetPASSPHRASE gets a reference to the given string and assigns it to the PASSPHRASE field.
func (o *UNIXConnectionAttributes) SetPASSPHRASE(v string) {
	o.PASSPHRASE = &v
}

// GetDELETE_GROUP_COMMAND returns the DELETE_GROUP_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetDELETE_GROUP_COMMAND() string {
	if o == nil || IsNil(o.DELETE_GROUP_COMMAND) {
		var ret string
		return ret
	}
	return *o.DELETE_GROUP_COMMAND
}

// GetDELETE_GROUP_COMMANDOk returns a tuple with the DELETE_GROUP_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetDELETE_GROUP_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.DELETE_GROUP_COMMAND) {
		return nil, false
	}
	return o.DELETE_GROUP_COMMAND, true
}

// HasDELETE_GROUP_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasDELETE_GROUP_COMMAND() bool {
	if o != nil && !IsNil(o.DELETE_GROUP_COMMAND) {
		return true
	}

	return false
}

// SetDELETE_GROUP_COMMAND gets a reference to the given string and assigns it to the DELETE_GROUP_COMMAND field.
func (o *UNIXConnectionAttributes) SetDELETE_GROUP_COMMAND(v string) {
	o.DELETE_GROUP_COMMAND = &v
}

// GetHOST_NAME returns the HOST_NAME field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetHOST_NAME() string {
	if o == nil || IsNil(o.HOST_NAME) {
		var ret string
		return ret
	}
	return *o.HOST_NAME
}

// GetHOST_NAMEOk returns a tuple with the HOST_NAME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetHOST_NAMEOk() (*string, bool) {
	if o == nil || IsNil(o.HOST_NAME) {
		return nil, false
	}
	return o.HOST_NAME, true
}

// HasHOST_NAME returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasHOST_NAME() bool {
	if o != nil && !IsNil(o.HOST_NAME) {
		return true
	}

	return false
}

// SetHOST_NAME gets a reference to the given string and assigns it to the HOST_NAME field.
func (o *UNIXConnectionAttributes) SetHOST_NAME(v string) {
	o.HOST_NAME = &v
}

// GetADD_GROUP_OWNER_COMMAND returns the ADD_GROUP_OWNER_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetADD_GROUP_OWNER_COMMAND() string {
	if o == nil || IsNil(o.ADD_GROUP_OWNER_COMMAND) {
		var ret string
		return ret
	}
	return *o.ADD_GROUP_OWNER_COMMAND
}

// GetADD_GROUP_OWNER_COMMANDOk returns a tuple with the ADD_GROUP_OWNER_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetADD_GROUP_OWNER_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.ADD_GROUP_OWNER_COMMAND) {
		return nil, false
	}
	return o.ADD_GROUP_OWNER_COMMAND, true
}

// HasADD_GROUP_OWNER_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasADD_GROUP_OWNER_COMMAND() bool {
	if o != nil && !IsNil(o.ADD_GROUP_OWNER_COMMAND) {
		return true
	}

	return false
}

// SetADD_GROUP_OWNER_COMMAND gets a reference to the given string and assigns it to the ADD_GROUP_OWNER_COMMAND field.
func (o *UNIXConnectionAttributes) SetADD_GROUP_OWNER_COMMAND(v string) {
	o.ADD_GROUP_OWNER_COMMAND = &v
}

// GetSTATUS_THRESHOLD_CONFIG returns the STATUS_THRESHOLD_CONFIG field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetSTATUS_THRESHOLD_CONFIG() string {
	if o == nil || IsNil(o.STATUS_THRESHOLD_CONFIG) {
		var ret string
		return ret
	}
	return *o.STATUS_THRESHOLD_CONFIG
}

// GetSTATUS_THRESHOLD_CONFIGOk returns a tuple with the STATUS_THRESHOLD_CONFIG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetSTATUS_THRESHOLD_CONFIGOk() (*string, bool) {
	if o == nil || IsNil(o.STATUS_THRESHOLD_CONFIG) {
		return nil, false
	}
	return o.STATUS_THRESHOLD_CONFIG, true
}

// HasSTATUS_THRESHOLD_CONFIG returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasSTATUS_THRESHOLD_CONFIG() bool {
	if o != nil && !IsNil(o.STATUS_THRESHOLD_CONFIG) {
		return true
	}

	return false
}

// SetSTATUS_THRESHOLD_CONFIG gets a reference to the given string and assigns it to the STATUS_THRESHOLD_CONFIG field.
func (o *UNIXConnectionAttributes) SetSTATUS_THRESHOLD_CONFIG(v string) {
	o.STATUS_THRESHOLD_CONFIG = &v
}

// GetUSERNAME returns the USERNAME field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetUSERNAME() string {
	if o == nil || IsNil(o.USERNAME) {
		var ret string
		return ret
	}
	return *o.USERNAME
}

// GetUSERNAMEOk returns a tuple with the USERNAME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetUSERNAMEOk() (*string, bool) {
	if o == nil || IsNil(o.USERNAME) {
		return nil, false
	}
	return o.USERNAME, true
}

// HasUSERNAME returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasUSERNAME() bool {
	if o != nil && !IsNil(o.USERNAME) {
		return true
	}

	return false
}

// SetUSERNAME gets a reference to the given string and assigns it to the USERNAME field.
func (o *UNIXConnectionAttributes) SetUSERNAME(v string) {
	o.USERNAME = &v
}

// GetINACTIVE_LOCK_ACCOUNT returns the INACTIVE_LOCK_ACCOUNT field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetINACTIVE_LOCK_ACCOUNT() string {
	if o == nil || IsNil(o.INACTIVE_LOCK_ACCOUNT) {
		var ret string
		return ret
	}
	return *o.INACTIVE_LOCK_ACCOUNT
}

// GetINACTIVE_LOCK_ACCOUNTOk returns a tuple with the INACTIVE_LOCK_ACCOUNT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetINACTIVE_LOCK_ACCOUNTOk() (*string, bool) {
	if o == nil || IsNil(o.INACTIVE_LOCK_ACCOUNT) {
		return nil, false
	}
	return o.INACTIVE_LOCK_ACCOUNT, true
}

// HasINACTIVE_LOCK_ACCOUNT returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasINACTIVE_LOCK_ACCOUNT() bool {
	if o != nil && !IsNil(o.INACTIVE_LOCK_ACCOUNT) {
		return true
	}

	return false
}

// SetINACTIVE_LOCK_ACCOUNT gets a reference to the given string and assigns it to the INACTIVE_LOCK_ACCOUNT field.
func (o *UNIXConnectionAttributes) SetINACTIVE_LOCK_ACCOUNT(v string) {
	o.INACTIVE_LOCK_ACCOUNT = &v
}

// GetADD_ACCESS_COMMAND returns the ADD_ACCESS_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetADD_ACCESS_COMMAND() string {
	if o == nil || IsNil(o.ADD_ACCESS_COMMAND) {
		var ret string
		return ret
	}
	return *o.ADD_ACCESS_COMMAND
}

// GetADD_ACCESS_COMMANDOk returns a tuple with the ADD_ACCESS_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetADD_ACCESS_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.ADD_ACCESS_COMMAND) {
		return nil, false
	}
	return o.ADD_ACCESS_COMMAND, true
}

// HasADD_ACCESS_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasADD_ACCESS_COMMAND() bool {
	if o != nil && !IsNil(o.ADD_ACCESS_COMMAND) {
		return true
	}

	return false
}

// SetADD_ACCESS_COMMAND gets a reference to the given string and assigns it to the ADD_ACCESS_COMMAND field.
func (o *UNIXConnectionAttributes) SetADD_ACCESS_COMMAND(v string) {
	o.ADD_ACCESS_COMMAND = &v
}

// GetUPDATE_ACCOUNT_COMMAND returns the UPDATE_ACCOUNT_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetUPDATE_ACCOUNT_COMMAND() string {
	if o == nil || IsNil(o.UPDATE_ACCOUNT_COMMAND) {
		var ret string
		return ret
	}
	return *o.UPDATE_ACCOUNT_COMMAND
}

// GetUPDATE_ACCOUNT_COMMANDOk returns a tuple with the UPDATE_ACCOUNT_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetUPDATE_ACCOUNT_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.UPDATE_ACCOUNT_COMMAND) {
		return nil, false
	}
	return o.UPDATE_ACCOUNT_COMMAND, true
}

// HasUPDATE_ACCOUNT_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasUPDATE_ACCOUNT_COMMAND() bool {
	if o != nil && !IsNil(o.UPDATE_ACCOUNT_COMMAND) {
		return true
	}

	return false
}

// SetUPDATE_ACCOUNT_COMMAND gets a reference to the given string and assigns it to the UPDATE_ACCOUNT_COMMAND field.
func (o *UNIXConnectionAttributes) SetUPDATE_ACCOUNT_COMMAND(v string) {
	o.UPDATE_ACCOUNT_COMMAND = &v
}

// GetSSHPassThroughPassphrase returns the SSHPassThroughPassphrase field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetSSHPassThroughPassphrase() string {
	if o == nil || IsNil(o.SSHPassThroughPassphrase) {
		var ret string
		return ret
	}
	return *o.SSHPassThroughPassphrase
}

// GetSSHPassThroughPassphraseOk returns a tuple with the SSHPassThroughPassphrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetSSHPassThroughPassphraseOk() (*string, bool) {
	if o == nil || IsNil(o.SSHPassThroughPassphrase) {
		return nil, false
	}
	return o.SSHPassThroughPassphrase, true
}

// HasSSHPassThroughPassphrase returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasSSHPassThroughPassphrase() bool {
	if o != nil && !IsNil(o.SSHPassThroughPassphrase) {
		return true
	}

	return false
}

// SetSSHPassThroughPassphrase gets a reference to the given string and assigns it to the SSHPassThroughPassphrase field.
func (o *UNIXConnectionAttributes) SetSSHPassThroughPassphrase(v string) {
	o.SSHPassThroughPassphrase = &v
}

// GetSHADOW_FILE returns the SHADOW_FILE field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetSHADOW_FILE() string {
	if o == nil || IsNil(o.SHADOW_FILE) {
		var ret string
		return ret
	}
	return *o.SHADOW_FILE
}

// GetSHADOW_FILEOk returns a tuple with the SHADOW_FILE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetSHADOW_FILEOk() (*string, bool) {
	if o == nil || IsNil(o.SHADOW_FILE) {
		return nil, false
	}
	return o.SHADOW_FILE, true
}

// HasSHADOW_FILE returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasSHADOW_FILE() bool {
	if o != nil && !IsNil(o.SHADOW_FILE) {
		return true
	}

	return false
}

// SetSHADOW_FILE gets a reference to the given string and assigns it to the SHADOW_FILE field.
func (o *UNIXConnectionAttributes) SetSHADOW_FILE(v string) {
	o.SHADOW_FILE = &v
}

// GetIsTimeoutSupported returns the IsTimeoutSupported field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetIsTimeoutSupported() bool {
	if o == nil || IsNil(o.IsTimeoutSupported) {
		var ret bool
		return ret
	}
	return *o.IsTimeoutSupported
}

// GetIsTimeoutSupportedOk returns a tuple with the IsTimeoutSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetIsTimeoutSupportedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsTimeoutSupported) {
		return nil, false
	}
	return o.IsTimeoutSupported, true
}

// HasIsTimeoutSupported returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasIsTimeoutSupported() bool {
	if o != nil && !IsNil(o.IsTimeoutSupported) {
		return true
	}

	return false
}

// SetIsTimeoutSupported gets a reference to the given bool and assigns it to the IsTimeoutSupported field.
func (o *UNIXConnectionAttributes) SetIsTimeoutSupported(v bool) {
	o.IsTimeoutSupported = &v
}

// GetSSHPassThroughSSHKEY returns the SSHPassThroughSSHKEY field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetSSHPassThroughSSHKEY() string {
	if o == nil || IsNil(o.SSHPassThroughSSHKEY) {
		var ret string
		return ret
	}
	return *o.SSHPassThroughSSHKEY
}

// GetSSHPassThroughSSHKEYOk returns a tuple with the SSHPassThroughSSHKEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetSSHPassThroughSSHKEYOk() (*string, bool) {
	if o == nil || IsNil(o.SSHPassThroughSSHKEY) {
		return nil, false
	}
	return o.SSHPassThroughSSHKEY, true
}

// HasSSHPassThroughSSHKEY returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasSSHPassThroughSSHKEY() bool {
	if o != nil && !IsNil(o.SSHPassThroughSSHKEY) {
		return true
	}

	return false
}

// SetSSHPassThroughSSHKEY gets a reference to the given string and assigns it to the SSHPassThroughSSHKEY field.
func (o *UNIXConnectionAttributes) SetSSHPassThroughSSHKEY(v string) {
	o.SSHPassThroughSSHKEY = &v
}

// GetPROVISION_ACCOUNT_COMMAND returns the PROVISION_ACCOUNT_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetPROVISION_ACCOUNT_COMMAND() string {
	if o == nil || IsNil(o.PROVISION_ACCOUNT_COMMAND) {
		var ret string
		return ret
	}
	return *o.PROVISION_ACCOUNT_COMMAND
}

// GetPROVISION_ACCOUNT_COMMANDOk returns a tuple with the PROVISION_ACCOUNT_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetPROVISION_ACCOUNT_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.PROVISION_ACCOUNT_COMMAND) {
		return nil, false
	}
	return o.PROVISION_ACCOUNT_COMMAND, true
}

// HasPROVISION_ACCOUNT_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasPROVISION_ACCOUNT_COMMAND() bool {
	if o != nil && !IsNil(o.PROVISION_ACCOUNT_COMMAND) {
		return true
	}

	return false
}

// SetPROVISION_ACCOUNT_COMMAND gets a reference to the given string and assigns it to the PROVISION_ACCOUNT_COMMAND field.
func (o *UNIXConnectionAttributes) SetPROVISION_ACCOUNT_COMMAND(v string) {
	o.PROVISION_ACCOUNT_COMMAND = &v
}

// GetFIREFIGHTERID_GRANT_ACCESS_COMMAND returns the FIREFIGHTERID_GRANT_ACCESS_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetFIREFIGHTERID_GRANT_ACCESS_COMMAND() string {
	if o == nil || IsNil(o.FIREFIGHTERID_GRANT_ACCESS_COMMAND) {
		var ret string
		return ret
	}
	return *o.FIREFIGHTERID_GRANT_ACCESS_COMMAND
}

// GetFIREFIGHTERID_GRANT_ACCESS_COMMANDOk returns a tuple with the FIREFIGHTERID_GRANT_ACCESS_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetFIREFIGHTERID_GRANT_ACCESS_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.FIREFIGHTERID_GRANT_ACCESS_COMMAND) {
		return nil, false
	}
	return o.FIREFIGHTERID_GRANT_ACCESS_COMMAND, true
}

// HasFIREFIGHTERID_GRANT_ACCESS_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasFIREFIGHTERID_GRANT_ACCESS_COMMAND() bool {
	if o != nil && !IsNil(o.FIREFIGHTERID_GRANT_ACCESS_COMMAND) {
		return true
	}

	return false
}

// SetFIREFIGHTERID_GRANT_ACCESS_COMMAND gets a reference to the given string and assigns it to the FIREFIGHTERID_GRANT_ACCESS_COMMAND field.
func (o *UNIXConnectionAttributes) SetFIREFIGHTERID_GRANT_ACCESS_COMMAND(v string) {
	o.FIREFIGHTERID_GRANT_ACCESS_COMMAND = &v
}

// GetUNLOCK_ACCOUNT_COMMAND returns the UNLOCK_ACCOUNT_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetUNLOCK_ACCOUNT_COMMAND() string {
	if o == nil || IsNil(o.UNLOCK_ACCOUNT_COMMAND) {
		var ret string
		return ret
	}
	return *o.UNLOCK_ACCOUNT_COMMAND
}

// GetUNLOCK_ACCOUNT_COMMANDOk returns a tuple with the UNLOCK_ACCOUNT_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetUNLOCK_ACCOUNT_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.UNLOCK_ACCOUNT_COMMAND) {
		return nil, false
	}
	return o.UNLOCK_ACCOUNT_COMMAND, true
}

// HasUNLOCK_ACCOUNT_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasUNLOCK_ACCOUNT_COMMAND() bool {
	if o != nil && !IsNil(o.UNLOCK_ACCOUNT_COMMAND) {
		return true
	}

	return false
}

// SetUNLOCK_ACCOUNT_COMMAND gets a reference to the given string and assigns it to the UNLOCK_ACCOUNT_COMMAND field.
func (o *UNIXConnectionAttributes) SetUNLOCK_ACCOUNT_COMMAND(v string) {
	o.UNLOCK_ACCOUNT_COMMAND = &v
}

// GetDEPROVISION_ACCOUNT_COMMAND returns the DEPROVISION_ACCOUNT_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetDEPROVISION_ACCOUNT_COMMAND() string {
	if o == nil || IsNil(o.DEPROVISION_ACCOUNT_COMMAND) {
		var ret string
		return ret
	}
	return *o.DEPROVISION_ACCOUNT_COMMAND
}

// GetDEPROVISION_ACCOUNT_COMMANDOk returns a tuple with the DEPROVISION_ACCOUNT_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetDEPROVISION_ACCOUNT_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.DEPROVISION_ACCOUNT_COMMAND) {
		return nil, false
	}
	return o.DEPROVISION_ACCOUNT_COMMAND, true
}

// HasDEPROVISION_ACCOUNT_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasDEPROVISION_ACCOUNT_COMMAND() bool {
	if o != nil && !IsNil(o.DEPROVISION_ACCOUNT_COMMAND) {
		return true
	}

	return false
}

// SetDEPROVISION_ACCOUNT_COMMAND gets a reference to the given string and assigns it to the DEPROVISION_ACCOUNT_COMMAND field.
func (o *UNIXConnectionAttributes) SetDEPROVISION_ACCOUNT_COMMAND(v string) {
	o.DEPROVISION_ACCOUNT_COMMAND = &v
}

// GetCHANGE_PASSWRD_JSON returns the CHANGE_PASSWRD_JSON field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetCHANGE_PASSWRD_JSON() string {
	if o == nil || IsNil(o.CHANGE_PASSWRD_JSON) {
		var ret string
		return ret
	}
	return *o.CHANGE_PASSWRD_JSON
}

// GetCHANGE_PASSWRD_JSONOk returns a tuple with the CHANGE_PASSWRD_JSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetCHANGE_PASSWRD_JSONOk() (*string, bool) {
	if o == nil || IsNil(o.CHANGE_PASSWRD_JSON) {
		return nil, false
	}
	return o.CHANGE_PASSWRD_JSON, true
}

// HasCHANGE_PASSWRD_JSON returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasCHANGE_PASSWRD_JSON() bool {
	if o != nil && !IsNil(o.CHANGE_PASSWRD_JSON) {
		return true
	}

	return false
}

// SetCHANGE_PASSWRD_JSON gets a reference to the given string and assigns it to the CHANGE_PASSWRD_JSON field.
func (o *UNIXConnectionAttributes) SetCHANGE_PASSWRD_JSON(v string) {
	o.CHANGE_PASSWRD_JSON = &v
}

// GetSSHPassThroughPassword returns the SSHPassThroughPassword field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetSSHPassThroughPassword() string {
	if o == nil || IsNil(o.SSHPassThroughPassword) {
		var ret string
		return ret
	}
	return *o.SSHPassThroughPassword
}

// GetSSHPassThroughPasswordOk returns a tuple with the SSHPassThroughPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetSSHPassThroughPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.SSHPassThroughPassword) {
		return nil, false
	}
	return o.SSHPassThroughPassword, true
}

// HasSSHPassThroughPassword returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasSSHPassThroughPassword() bool {
	if o != nil && !IsNil(o.SSHPassThroughPassword) {
		return true
	}

	return false
}

// SetSSHPassThroughPassword gets a reference to the given string and assigns it to the SSHPassThroughPassword field.
func (o *UNIXConnectionAttributes) SetSSHPassThroughPassword(v string) {
	o.SSHPassThroughPassword = &v
}

// GetFIREFIGHTERID_REVOKE_ACCESS_COMMAND returns the FIREFIGHTERID_REVOKE_ACCESS_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetFIREFIGHTERID_REVOKE_ACCESS_COMMAND() string {
	if o == nil || IsNil(o.FIREFIGHTERID_REVOKE_ACCESS_COMMAND) {
		var ret string
		return ret
	}
	return *o.FIREFIGHTERID_REVOKE_ACCESS_COMMAND
}

// GetFIREFIGHTERID_REVOKE_ACCESS_COMMANDOk returns a tuple with the FIREFIGHTERID_REVOKE_ACCESS_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetFIREFIGHTERID_REVOKE_ACCESS_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.FIREFIGHTERID_REVOKE_ACCESS_COMMAND) {
		return nil, false
	}
	return o.FIREFIGHTERID_REVOKE_ACCESS_COMMAND, true
}

// HasFIREFIGHTERID_REVOKE_ACCESS_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasFIREFIGHTERID_REVOKE_ACCESS_COMMAND() bool {
	if o != nil && !IsNil(o.FIREFIGHTERID_REVOKE_ACCESS_COMMAND) {
		return true
	}

	return false
}

// SetFIREFIGHTERID_REVOKE_ACCESS_COMMAND gets a reference to the given string and assigns it to the FIREFIGHTERID_REVOKE_ACCESS_COMMAND field.
func (o *UNIXConnectionAttributes) SetFIREFIGHTERID_REVOKE_ACCESS_COMMAND(v string) {
	o.FIREFIGHTERID_REVOKE_ACCESS_COMMAND = &v
}

// GetADD_PRIMARY_GROUP_COMMAND returns the ADD_PRIMARY_GROUP_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetADD_PRIMARY_GROUP_COMMAND() string {
	if o == nil || IsNil(o.ADD_PRIMARY_GROUP_COMMAND) {
		var ret string
		return ret
	}
	return *o.ADD_PRIMARY_GROUP_COMMAND
}

// GetADD_PRIMARY_GROUP_COMMANDOk returns a tuple with the ADD_PRIMARY_GROUP_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetADD_PRIMARY_GROUP_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.ADD_PRIMARY_GROUP_COMMAND) {
		return nil, false
	}
	return o.ADD_PRIMARY_GROUP_COMMAND, true
}

// HasADD_PRIMARY_GROUP_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasADD_PRIMARY_GROUP_COMMAND() bool {
	if o != nil && !IsNil(o.ADD_PRIMARY_GROUP_COMMAND) {
		return true
	}

	return false
}

// SetADD_PRIMARY_GROUP_COMMAND gets a reference to the given string and assigns it to the ADD_PRIMARY_GROUP_COMMAND field.
func (o *UNIXConnectionAttributes) SetADD_PRIMARY_GROUP_COMMAND(v string) {
	o.ADD_PRIMARY_GROUP_COMMAND = &v
}

// GetIsTimeoutConfigValidated returns the IsTimeoutConfigValidated field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetIsTimeoutConfigValidated() bool {
	if o == nil || IsNil(o.IsTimeoutConfigValidated) {
		var ret bool
		return ret
	}
	return *o.IsTimeoutConfigValidated
}

// GetIsTimeoutConfigValidatedOk returns a tuple with the IsTimeoutConfigValidated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetIsTimeoutConfigValidatedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsTimeoutConfigValidated) {
		return nil, false
	}
	return o.IsTimeoutConfigValidated, true
}

// HasIsTimeoutConfigValidated returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasIsTimeoutConfigValidated() bool {
	if o != nil && !IsNil(o.IsTimeoutConfigValidated) {
		return true
	}

	return false
}

// SetIsTimeoutConfigValidated gets a reference to the given bool and assigns it to the IsTimeoutConfigValidated field.
func (o *UNIXConnectionAttributes) SetIsTimeoutConfigValidated(v bool) {
	o.IsTimeoutConfigValidated = &v
}

// GetLOCK_ACCOUNT_COMMAND returns the LOCK_ACCOUNT_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetLOCK_ACCOUNT_COMMAND() string {
	if o == nil || IsNil(o.LOCK_ACCOUNT_COMMAND) {
		var ret string
		return ret
	}
	return *o.LOCK_ACCOUNT_COMMAND
}

// GetLOCK_ACCOUNT_COMMANDOk returns a tuple with the LOCK_ACCOUNT_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetLOCK_ACCOUNT_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.LOCK_ACCOUNT_COMMAND) {
		return nil, false
	}
	return o.LOCK_ACCOUNT_COMMAND, true
}

// HasLOCK_ACCOUNT_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasLOCK_ACCOUNT_COMMAND() bool {
	if o != nil && !IsNil(o.LOCK_ACCOUNT_COMMAND) {
		return true
	}

	return false
}

// SetLOCK_ACCOUNT_COMMAND gets a reference to the given string and assigns it to the LOCK_ACCOUNT_COMMAND field.
func (o *UNIXConnectionAttributes) SetLOCK_ACCOUNT_COMMAND(v string) {
	o.LOCK_ACCOUNT_COMMAND = &v
}

// GetPASSWORD returns the PASSWORD field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetPASSWORD() string {
	if o == nil || IsNil(o.PASSWORD) {
		var ret string
		return ret
	}
	return *o.PASSWORD
}

// GetPASSWORDOk returns a tuple with the PASSWORD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetPASSWORDOk() (*string, bool) {
	if o == nil || IsNil(o.PASSWORD) {
		return nil, false
	}
	return o.PASSWORD, true
}

// HasPASSWORD returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasPASSWORD() bool {
	if o != nil && !IsNil(o.PASSWORD) {
		return true
	}

	return false
}

// SetPASSWORD gets a reference to the given string and assigns it to the PASSWORD field.
func (o *UNIXConnectionAttributes) SetPASSWORD(v string) {
	o.PASSWORD = &v
}

// GetCUSTOM_CONFIG_JSON returns the CUSTOM_CONFIG_JSON field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetCUSTOM_CONFIG_JSON() string {
	if o == nil || IsNil(o.CUSTOM_CONFIG_JSON) {
		var ret string
		return ret
	}
	return *o.CUSTOM_CONFIG_JSON
}

// GetCUSTOM_CONFIG_JSONOk returns a tuple with the CUSTOM_CONFIG_JSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetCUSTOM_CONFIG_JSONOk() (*string, bool) {
	if o == nil || IsNil(o.CUSTOM_CONFIG_JSON) {
		return nil, false
	}
	return o.CUSTOM_CONFIG_JSON, true
}

// HasCUSTOM_CONFIG_JSON returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasCUSTOM_CONFIG_JSON() bool {
	if o != nil && !IsNil(o.CUSTOM_CONFIG_JSON) {
		return true
	}

	return false
}

// SetCUSTOM_CONFIG_JSON gets a reference to the given string and assigns it to the CUSTOM_CONFIG_JSON field.
func (o *UNIXConnectionAttributes) SetCUSTOM_CONFIG_JSON(v string) {
	o.CUSTOM_CONFIG_JSON = &v
}

// GetENABLE_ACCOUNT_COMMAND returns the ENABLE_ACCOUNT_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnectionAttributes) GetENABLE_ACCOUNT_COMMAND() string {
	if o == nil || IsNil(o.ENABLE_ACCOUNT_COMMAND) {
		var ret string
		return ret
	}
	return *o.ENABLE_ACCOUNT_COMMAND
}

// GetENABLE_ACCOUNT_COMMANDOk returns a tuple with the ENABLE_ACCOUNT_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnectionAttributes) GetENABLE_ACCOUNT_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.ENABLE_ACCOUNT_COMMAND) {
		return nil, false
	}
	return o.ENABLE_ACCOUNT_COMMAND, true
}

// HasENABLE_ACCOUNT_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnectionAttributes) HasENABLE_ACCOUNT_COMMAND() bool {
	if o != nil && !IsNil(o.ENABLE_ACCOUNT_COMMAND) {
		return true
	}

	return false
}

// SetENABLE_ACCOUNT_COMMAND gets a reference to the given string and assigns it to the ENABLE_ACCOUNT_COMMAND field.
func (o *UNIXConnectionAttributes) SetENABLE_ACCOUNT_COMMAND(v string) {
	o.ENABLE_ACCOUNT_COMMAND = &v
}

func (o UNIXConnectionAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UNIXConnectionAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GROUPS_FILE) {
		toSerialize["GROUPS_FILE"] = o.GROUPS_FILE
	}
	if !IsNil(o.SSH_KEY) {
		toSerialize["SSH_KEY"] = o.SSH_KEY
	}
	if !IsNil(o.ACCOUNT_ENTITLEMENT_MAPPING_COMMAND) {
		toSerialize["ACCOUNT_ENTITLEMENT_MAPPING_COMMAND"] = o.ACCOUNT_ENTITLEMENT_MAPPING_COMMAND
	}
	if !IsNil(o.REMOVE_ACCESS_COMMAND) {
		toSerialize["REMOVE_ACCESS_COMMAND"] = o.REMOVE_ACCESS_COMMAND
	}
	if !IsNil(o.PEM_KEY_FILE) {
		toSerialize["PEM_KEY_FILE"] = o.PEM_KEY_FILE
	}
	if !IsNil(o.PassThroughConnectionDetails) {
		toSerialize["PassThroughConnectionDetails"] = o.PassThroughConnectionDetails
	}
	if !IsNil(o.DISABLE_ACCOUNT_COMMAND) {
		toSerialize["DISABLE_ACCOUNT_COMMAND"] = o.DISABLE_ACCOUNT_COMMAND
	}
	if !IsNil(o.ConnectionTimeoutConfig) {
		toSerialize["connectionTimeoutConfig"] = o.ConnectionTimeoutConfig
	}
	if !IsNil(o.PORT_NUMBER) {
		toSerialize["PORT_NUMBER"] = o.PORT_NUMBER
	}
	if !IsNil(o.ConnectionType) {
		toSerialize["connectionType"] = o.ConnectionType
	}
	if !IsNil(o.CREATE_GROUP_COMMAND) {
		toSerialize["CREATE_GROUP_COMMAND"] = o.CREATE_GROUP_COMMAND
	}
	if !IsNil(o.ACCOUNTS_FILE) {
		toSerialize["ACCOUNTS_FILE"] = o.ACCOUNTS_FILE
	}
	if !IsNil(o.PASSPHRASE) {
		toSerialize["PASSPHRASE"] = o.PASSPHRASE
	}
	if !IsNil(o.DELETE_GROUP_COMMAND) {
		toSerialize["DELETE_GROUP_COMMAND"] = o.DELETE_GROUP_COMMAND
	}
	if !IsNil(o.HOST_NAME) {
		toSerialize["HOST_NAME"] = o.HOST_NAME
	}
	if !IsNil(o.ADD_GROUP_OWNER_COMMAND) {
		toSerialize["ADD_GROUP_OWNER_COMMAND"] = o.ADD_GROUP_OWNER_COMMAND
	}
	if !IsNil(o.STATUS_THRESHOLD_CONFIG) {
		toSerialize["STATUS_THRESHOLD_CONFIG"] = o.STATUS_THRESHOLD_CONFIG
	}
	if !IsNil(o.USERNAME) {
		toSerialize["USERNAME"] = o.USERNAME
	}
	if !IsNil(o.INACTIVE_LOCK_ACCOUNT) {
		toSerialize["INACTIVE_LOCK_ACCOUNT"] = o.INACTIVE_LOCK_ACCOUNT
	}
	if !IsNil(o.ADD_ACCESS_COMMAND) {
		toSerialize["ADD_ACCESS_COMMAND"] = o.ADD_ACCESS_COMMAND
	}
	if !IsNil(o.UPDATE_ACCOUNT_COMMAND) {
		toSerialize["UPDATE_ACCOUNT_COMMAND"] = o.UPDATE_ACCOUNT_COMMAND
	}
	if !IsNil(o.SSHPassThroughPassphrase) {
		toSerialize["SSHPassThroughPassphrase"] = o.SSHPassThroughPassphrase
	}
	if !IsNil(o.SHADOW_FILE) {
		toSerialize["SHADOW_FILE"] = o.SHADOW_FILE
	}
	if !IsNil(o.IsTimeoutSupported) {
		toSerialize["isTimeoutSupported"] = o.IsTimeoutSupported
	}
	if !IsNil(o.SSHPassThroughSSHKEY) {
		toSerialize["SSHPassThroughSSHKEY"] = o.SSHPassThroughSSHKEY
	}
	if !IsNil(o.PROVISION_ACCOUNT_COMMAND) {
		toSerialize["PROVISION_ACCOUNT_COMMAND"] = o.PROVISION_ACCOUNT_COMMAND
	}
	if !IsNil(o.FIREFIGHTERID_GRANT_ACCESS_COMMAND) {
		toSerialize["FIREFIGHTERID_GRANT_ACCESS_COMMAND"] = o.FIREFIGHTERID_GRANT_ACCESS_COMMAND
	}
	if !IsNil(o.UNLOCK_ACCOUNT_COMMAND) {
		toSerialize["UNLOCK_ACCOUNT_COMMAND"] = o.UNLOCK_ACCOUNT_COMMAND
	}
	if !IsNil(o.DEPROVISION_ACCOUNT_COMMAND) {
		toSerialize["DEPROVISION_ACCOUNT_COMMAND"] = o.DEPROVISION_ACCOUNT_COMMAND
	}
	if !IsNil(o.CHANGE_PASSWRD_JSON) {
		toSerialize["CHANGE_PASSWRD_JSON"] = o.CHANGE_PASSWRD_JSON
	}
	if !IsNil(o.SSHPassThroughPassword) {
		toSerialize["SSHPassThroughPassword"] = o.SSHPassThroughPassword
	}
	if !IsNil(o.FIREFIGHTERID_REVOKE_ACCESS_COMMAND) {
		toSerialize["FIREFIGHTERID_REVOKE_ACCESS_COMMAND"] = o.FIREFIGHTERID_REVOKE_ACCESS_COMMAND
	}
	if !IsNil(o.ADD_PRIMARY_GROUP_COMMAND) {
		toSerialize["ADD_PRIMARY_GROUP_COMMAND"] = o.ADD_PRIMARY_GROUP_COMMAND
	}
	if !IsNil(o.IsTimeoutConfigValidated) {
		toSerialize["isTimeoutConfigValidated"] = o.IsTimeoutConfigValidated
	}
	if !IsNil(o.LOCK_ACCOUNT_COMMAND) {
		toSerialize["LOCK_ACCOUNT_COMMAND"] = o.LOCK_ACCOUNT_COMMAND
	}
	if !IsNil(o.PASSWORD) {
		toSerialize["PASSWORD"] = o.PASSWORD
	}
	if !IsNil(o.CUSTOM_CONFIG_JSON) {
		toSerialize["CUSTOM_CONFIG_JSON"] = o.CUSTOM_CONFIG_JSON
	}
	if !IsNil(o.ENABLE_ACCOUNT_COMMAND) {
		toSerialize["ENABLE_ACCOUNT_COMMAND"] = o.ENABLE_ACCOUNT_COMMAND
	}
	return toSerialize, nil
}

type NullableUNIXConnectionAttributes struct {
	value *UNIXConnectionAttributes
	isSet bool
}

func (v NullableUNIXConnectionAttributes) Get() *UNIXConnectionAttributes {
	return v.value
}

func (v *NullableUNIXConnectionAttributes) Set(val *UNIXConnectionAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableUNIXConnectionAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableUNIXConnectionAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUNIXConnectionAttributes(val *UNIXConnectionAttributes) *NullableUNIXConnectionAttributes {
	return &NullableUNIXConnectionAttributes{value: val, isSet: true}
}

func (v NullableUNIXConnectionAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUNIXConnectionAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
