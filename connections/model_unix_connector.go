/*
Connection Management API

Use this API to create a connection in Saviynt Identity Cloud.  The Authorization header must have \"Bearer {token}\".  **Mandatory Parameters:** - **connectionname**: Specify the name to identify the connection. - **connectiontype**: Specify a connection type. For example, if your target application is Active Directory, specify the connection type as \"AD\".  **Optional Parameters:** - **description**: Provide a description for the connection. - **defaultsavroles**: Specify the SAV role(s) required for managing this connection along with its associated security systems, endpoints, accounts, and entitlements. - **emailTemplate**: Specify the email template applicable for notifications. - **sslCertificate**: Specify the SSL certificate(s) to secure the connection between EIC and the target application. - **vaultConfiguration**: Specify the path of the vault to obtain secret data (suffix the connector name to make it unique). - **saveinvault**: Set to true to save the encrypted attribute in the configured vault.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connections

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UNIXConnector type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UNIXConnector{}

// UNIXConnector struct for UNIXConnector
type UNIXConnector struct {
	BaseConnector
	// Property for HOST_NAME
	HOST_NAME string `json:"HOST_NAME"`
	// Property for PORT_NUMBER
	PORT_NUMBER string `json:"PORT_NUMBER"`
	// Property for USERNAME
	USERNAME string `json:"USERNAME"`
	// Property for PASSWORD
	PASSWORD *string `json:"PASSWORD,omitempty"`
	// Property for GROUPS_FILE
	GROUPS_FILE *string `json:"GROUPS_FILE,omitempty"`
	// Property for ACCOUNTS_FILE
	ACCOUNTS_FILE *string `json:"ACCOUNTS_FILE,omitempty"`
	// Property for SHADOW_FILE
	SHADOW_FILE *string `json:"SHADOW_FILE,omitempty"`
	// Property for PROVISION_ACCOUNT_COMMAND
	PROVISION_ACCOUNT_COMMAND *string `json:"PROVISION_ACCOUNT_COMMAND,omitempty"`
	// Property for DEPROVISION_ACCOUNT_COMMAND
	DEPROVISION_ACCOUNT_COMMAND *string `json:"DEPROVISION_ACCOUNT_COMMAND,omitempty"`
	// Property for ADD_ACCESS_COMMAND
	ADD_ACCESS_COMMAND *string `json:"ADD_ACCESS_COMMAND,omitempty"`
	// Property for REMOVE_ACCESS_COMMAND
	REMOVE_ACCESS_COMMAND *string `json:"REMOVE_ACCESS_COMMAND,omitempty"`
	// Property for CHANGE_PASSWRD_JSON
	CHANGE_PASSWRD_JSON *string `json:"CHANGE_PASSWRD_JSON,omitempty"`
	// Property for PEM_KEY_FILE
	PEM_KEY_FILE *string `json:"PEM_KEY_FILE,omitempty"`
	// Property for ENABLE_ACCOUNT_COMMAND
	ENABLE_ACCOUNT_COMMAND *string `json:"ENABLE_ACCOUNT_COMMAND,omitempty"`
	// Property for DISABLE_ACCOUNT_COMMAND
	DISABLE_ACCOUNT_COMMAND *string `json:"DISABLE_ACCOUNT_COMMAND,omitempty"`
	// Property for ACCOUNT_ENTITLEMENT_MAPPING_COMMAND
	ACCOUNT_ENTITLEMENT_MAPPING_COMMAND *string `json:"ACCOUNT_ENTITLEMENT_MAPPING_COMMAND,omitempty"`
	// Property for PASSPHRASE
	PASSPHRASE *string `json:"PASSPHRASE,omitempty"`
	// Property for UPDATE_ACCOUNT_COMMAND
	UPDATE_ACCOUNT_COMMAND *string `json:"UPDATE_ACCOUNT_COMMAND,omitempty"`
	// Property for CREATE_GROUP_COMMAND
	CREATE_GROUP_COMMAND *string `json:"CREATE_GROUP_COMMAND,omitempty"`
	// Property for DELETE_GROUP_COMMAND
	DELETE_GROUP_COMMAND *string `json:"DELETE_GROUP_COMMAND,omitempty"`
	// Property for ADD_GROUP_OWNER_COMMAND
	ADD_GROUP_OWNER_COMMAND *string `json:"ADD_GROUP_OWNER_COMMAND,omitempty"`
	// Property for ADD_PRIMARY_GROUP_COMMAND
	ADD_PRIMARY_GROUP_COMMAND *string `json:"ADD_PRIMARY_GROUP_COMMAND,omitempty"`
	// Property for FIREFIGHTERID_GRANT_ACCESS_COMMAND
	FIREFIGHTERID_GRANT_ACCESS_COMMAND *string `json:"FIREFIGHTERID_GRANT_ACCESS_COMMAND,omitempty"`
	// Property for FIREFIGHTERID_REVOKE_ACCESS_COMMAND
	FIREFIGHTERID_REVOKE_ACCESS_COMMAND *string `json:"FIREFIGHTERID_REVOKE_ACCESS_COMMAND,omitempty"`
	// Property for INACTIVE_LOCK_ACCOUNT
	INACTIVE_LOCK_ACCOUNT *string `json:"INACTIVE_LOCK_ACCOUNT,omitempty"`
	// Property for STATUS_THRESHOLD_CONFIG
	STATUS_THRESHOLD_CONFIG *string `json:"STATUS_THRESHOLD_CONFIG,omitempty"`
	// Property for CUSTOM_CONFIG_JSON
	CUSTOM_CONFIG_JSON *string `json:"CUSTOM_CONFIG_JSON,omitempty"`
	// Property for SSH_KEY
	SSH_KEY *string `json:"SSH_KEY,omitempty"`
	// Property for LOCK_ACCOUNT_COMMAND
	LOCK_ACCOUNT_COMMAND *string `json:"LOCK_ACCOUNT_COMMAND,omitempty"`
	// Property for UNLOCK_ACCOUNT_COMMAND
	UNLOCK_ACCOUNT_COMMAND *string `json:"UNLOCK_ACCOUNT_COMMAND,omitempty"`
	// Property for PassThroughConnectionDetails
	PassThroughConnectionDetails *string `json:"PassThroughConnectionDetails,omitempty"`
	// Property for SSHPassThroughPassword
	SSHPassThroughPassword *string `json:"SSHPassThroughPassword,omitempty"`
	// Property for SSHPassThroughSSHKEY
	SSHPassThroughSSHKEY *string `json:"SSHPassThroughSSHKEY,omitempty"`
	// Property for SSHPassThroughPassphrase
	SSHPassThroughPassphrase *string `json:"SSHPassThroughPassphrase,omitempty"`
}

type _UNIXConnector UNIXConnector

// NewUNIXConnector instantiates a new UNIXConnector object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUNIXConnector(hOSTNAME string, pORTNUMBER string, uSERNAME string, connectionName string, connectiontype string) *UNIXConnector {
	this := UNIXConnector{}
	this.ConnectionName = connectionName
	this.Connectiontype = connectiontype
	this.HOST_NAME = hOSTNAME
	this.PORT_NUMBER = pORTNUMBER
	this.USERNAME = uSERNAME
	return &this
}

// NewUNIXConnectorWithDefaults instantiates a new UNIXConnector object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUNIXConnectorWithDefaults() *UNIXConnector {
	this := UNIXConnector{}
	return &this
}

// GetHOST_NAME returns the HOST_NAME field value
func (o *UNIXConnector) GetHOST_NAME() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HOST_NAME
}

// GetHOST_NAMEOk returns a tuple with the HOST_NAME field value
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetHOST_NAMEOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HOST_NAME, true
}

// SetHOST_NAME sets field value
func (o *UNIXConnector) SetHOST_NAME(v string) {
	o.HOST_NAME = v
}

// GetPORT_NUMBER returns the PORT_NUMBER field value
func (o *UNIXConnector) GetPORT_NUMBER() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PORT_NUMBER
}

// GetPORT_NUMBEROk returns a tuple with the PORT_NUMBER field value
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetPORT_NUMBEROk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PORT_NUMBER, true
}

// SetPORT_NUMBER sets field value
func (o *UNIXConnector) SetPORT_NUMBER(v string) {
	o.PORT_NUMBER = v
}

// GetUSERNAME returns the USERNAME field value
func (o *UNIXConnector) GetUSERNAME() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.USERNAME
}

// GetUSERNAMEOk returns a tuple with the USERNAME field value
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetUSERNAMEOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.USERNAME, true
}

// SetUSERNAME sets field value
func (o *UNIXConnector) SetUSERNAME(v string) {
	o.USERNAME = v
}

// GetPASSWORD returns the PASSWORD field value if set, zero value otherwise.
func (o *UNIXConnector) GetPASSWORD() string {
	if o == nil || IsNil(o.PASSWORD) {
		var ret string
		return ret
	}
	return *o.PASSWORD
}

// GetPASSWORDOk returns a tuple with the PASSWORD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetPASSWORDOk() (*string, bool) {
	if o == nil || IsNil(o.PASSWORD) {
		return nil, false
	}
	return o.PASSWORD, true
}

// HasPASSWORD returns a boolean if a field has been set.
func (o *UNIXConnector) HasPASSWORD() bool {
	if o != nil && !IsNil(o.PASSWORD) {
		return true
	}

	return false
}

// SetPASSWORD gets a reference to the given string and assigns it to the PASSWORD field.
func (o *UNIXConnector) SetPASSWORD(v string) {
	o.PASSWORD = &v
}

// GetGROUPS_FILE returns the GROUPS_FILE field value if set, zero value otherwise.
func (o *UNIXConnector) GetGROUPS_FILE() string {
	if o == nil || IsNil(o.GROUPS_FILE) {
		var ret string
		return ret
	}
	return *o.GROUPS_FILE
}

// GetGROUPS_FILEOk returns a tuple with the GROUPS_FILE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetGROUPS_FILEOk() (*string, bool) {
	if o == nil || IsNil(o.GROUPS_FILE) {
		return nil, false
	}
	return o.GROUPS_FILE, true
}

// HasGROUPS_FILE returns a boolean if a field has been set.
func (o *UNIXConnector) HasGROUPS_FILE() bool {
	if o != nil && !IsNil(o.GROUPS_FILE) {
		return true
	}

	return false
}

// SetGROUPS_FILE gets a reference to the given string and assigns it to the GROUPS_FILE field.
func (o *UNIXConnector) SetGROUPS_FILE(v string) {
	o.GROUPS_FILE = &v
}

// GetACCOUNTS_FILE returns the ACCOUNTS_FILE field value if set, zero value otherwise.
func (o *UNIXConnector) GetACCOUNTS_FILE() string {
	if o == nil || IsNil(o.ACCOUNTS_FILE) {
		var ret string
		return ret
	}
	return *o.ACCOUNTS_FILE
}

// GetACCOUNTS_FILEOk returns a tuple with the ACCOUNTS_FILE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetACCOUNTS_FILEOk() (*string, bool) {
	if o == nil || IsNil(o.ACCOUNTS_FILE) {
		return nil, false
	}
	return o.ACCOUNTS_FILE, true
}

// HasACCOUNTS_FILE returns a boolean if a field has been set.
func (o *UNIXConnector) HasACCOUNTS_FILE() bool {
	if o != nil && !IsNil(o.ACCOUNTS_FILE) {
		return true
	}

	return false
}

// SetACCOUNTS_FILE gets a reference to the given string and assigns it to the ACCOUNTS_FILE field.
func (o *UNIXConnector) SetACCOUNTS_FILE(v string) {
	o.ACCOUNTS_FILE = &v
}

// GetSHADOW_FILE returns the SHADOW_FILE field value if set, zero value otherwise.
func (o *UNIXConnector) GetSHADOW_FILE() string {
	if o == nil || IsNil(o.SHADOW_FILE) {
		var ret string
		return ret
	}
	return *o.SHADOW_FILE
}

// GetSHADOW_FILEOk returns a tuple with the SHADOW_FILE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetSHADOW_FILEOk() (*string, bool) {
	if o == nil || IsNil(o.SHADOW_FILE) {
		return nil, false
	}
	return o.SHADOW_FILE, true
}

// HasSHADOW_FILE returns a boolean if a field has been set.
func (o *UNIXConnector) HasSHADOW_FILE() bool {
	if o != nil && !IsNil(o.SHADOW_FILE) {
		return true
	}

	return false
}

// SetSHADOW_FILE gets a reference to the given string and assigns it to the SHADOW_FILE field.
func (o *UNIXConnector) SetSHADOW_FILE(v string) {
	o.SHADOW_FILE = &v
}

// GetPROVISION_ACCOUNT_COMMAND returns the PROVISION_ACCOUNT_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnector) GetPROVISION_ACCOUNT_COMMAND() string {
	if o == nil || IsNil(o.PROVISION_ACCOUNT_COMMAND) {
		var ret string
		return ret
	}
	return *o.PROVISION_ACCOUNT_COMMAND
}

// GetPROVISION_ACCOUNT_COMMANDOk returns a tuple with the PROVISION_ACCOUNT_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetPROVISION_ACCOUNT_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.PROVISION_ACCOUNT_COMMAND) {
		return nil, false
	}
	return o.PROVISION_ACCOUNT_COMMAND, true
}

// HasPROVISION_ACCOUNT_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnector) HasPROVISION_ACCOUNT_COMMAND() bool {
	if o != nil && !IsNil(o.PROVISION_ACCOUNT_COMMAND) {
		return true
	}

	return false
}

// SetPROVISION_ACCOUNT_COMMAND gets a reference to the given string and assigns it to the PROVISION_ACCOUNT_COMMAND field.
func (o *UNIXConnector) SetPROVISION_ACCOUNT_COMMAND(v string) {
	o.PROVISION_ACCOUNT_COMMAND = &v
}

// GetDEPROVISION_ACCOUNT_COMMAND returns the DEPROVISION_ACCOUNT_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnector) GetDEPROVISION_ACCOUNT_COMMAND() string {
	if o == nil || IsNil(o.DEPROVISION_ACCOUNT_COMMAND) {
		var ret string
		return ret
	}
	return *o.DEPROVISION_ACCOUNT_COMMAND
}

// GetDEPROVISION_ACCOUNT_COMMANDOk returns a tuple with the DEPROVISION_ACCOUNT_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetDEPROVISION_ACCOUNT_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.DEPROVISION_ACCOUNT_COMMAND) {
		return nil, false
	}
	return o.DEPROVISION_ACCOUNT_COMMAND, true
}

// HasDEPROVISION_ACCOUNT_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnector) HasDEPROVISION_ACCOUNT_COMMAND() bool {
	if o != nil && !IsNil(o.DEPROVISION_ACCOUNT_COMMAND) {
		return true
	}

	return false
}

// SetDEPROVISION_ACCOUNT_COMMAND gets a reference to the given string and assigns it to the DEPROVISION_ACCOUNT_COMMAND field.
func (o *UNIXConnector) SetDEPROVISION_ACCOUNT_COMMAND(v string) {
	o.DEPROVISION_ACCOUNT_COMMAND = &v
}

// GetADD_ACCESS_COMMAND returns the ADD_ACCESS_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnector) GetADD_ACCESS_COMMAND() string {
	if o == nil || IsNil(o.ADD_ACCESS_COMMAND) {
		var ret string
		return ret
	}
	return *o.ADD_ACCESS_COMMAND
}

// GetADD_ACCESS_COMMANDOk returns a tuple with the ADD_ACCESS_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetADD_ACCESS_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.ADD_ACCESS_COMMAND) {
		return nil, false
	}
	return o.ADD_ACCESS_COMMAND, true
}

// HasADD_ACCESS_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnector) HasADD_ACCESS_COMMAND() bool {
	if o != nil && !IsNil(o.ADD_ACCESS_COMMAND) {
		return true
	}

	return false
}

// SetADD_ACCESS_COMMAND gets a reference to the given string and assigns it to the ADD_ACCESS_COMMAND field.
func (o *UNIXConnector) SetADD_ACCESS_COMMAND(v string) {
	o.ADD_ACCESS_COMMAND = &v
}

// GetREMOVE_ACCESS_COMMAND returns the REMOVE_ACCESS_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnector) GetREMOVE_ACCESS_COMMAND() string {
	if o == nil || IsNil(o.REMOVE_ACCESS_COMMAND) {
		var ret string
		return ret
	}
	return *o.REMOVE_ACCESS_COMMAND
}

// GetREMOVE_ACCESS_COMMANDOk returns a tuple with the REMOVE_ACCESS_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetREMOVE_ACCESS_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.REMOVE_ACCESS_COMMAND) {
		return nil, false
	}
	return o.REMOVE_ACCESS_COMMAND, true
}

// HasREMOVE_ACCESS_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnector) HasREMOVE_ACCESS_COMMAND() bool {
	if o != nil && !IsNil(o.REMOVE_ACCESS_COMMAND) {
		return true
	}

	return false
}

// SetREMOVE_ACCESS_COMMAND gets a reference to the given string and assigns it to the REMOVE_ACCESS_COMMAND field.
func (o *UNIXConnector) SetREMOVE_ACCESS_COMMAND(v string) {
	o.REMOVE_ACCESS_COMMAND = &v
}

// GetCHANGE_PASSWRD_JSON returns the CHANGE_PASSWRD_JSON field value if set, zero value otherwise.
func (o *UNIXConnector) GetCHANGE_PASSWRD_JSON() string {
	if o == nil || IsNil(o.CHANGE_PASSWRD_JSON) {
		var ret string
		return ret
	}
	return *o.CHANGE_PASSWRD_JSON
}

// GetCHANGE_PASSWRD_JSONOk returns a tuple with the CHANGE_PASSWRD_JSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetCHANGE_PASSWRD_JSONOk() (*string, bool) {
	if o == nil || IsNil(o.CHANGE_PASSWRD_JSON) {
		return nil, false
	}
	return o.CHANGE_PASSWRD_JSON, true
}

// HasCHANGE_PASSWRD_JSON returns a boolean if a field has been set.
func (o *UNIXConnector) HasCHANGE_PASSWRD_JSON() bool {
	if o != nil && !IsNil(o.CHANGE_PASSWRD_JSON) {
		return true
	}

	return false
}

// SetCHANGE_PASSWRD_JSON gets a reference to the given string and assigns it to the CHANGE_PASSWRD_JSON field.
func (o *UNIXConnector) SetCHANGE_PASSWRD_JSON(v string) {
	o.CHANGE_PASSWRD_JSON = &v
}

// GetPEM_KEY_FILE returns the PEM_KEY_FILE field value if set, zero value otherwise.
func (o *UNIXConnector) GetPEM_KEY_FILE() string {
	if o == nil || IsNil(o.PEM_KEY_FILE) {
		var ret string
		return ret
	}
	return *o.PEM_KEY_FILE
}

// GetPEM_KEY_FILEOk returns a tuple with the PEM_KEY_FILE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetPEM_KEY_FILEOk() (*string, bool) {
	if o == nil || IsNil(o.PEM_KEY_FILE) {
		return nil, false
	}
	return o.PEM_KEY_FILE, true
}

// HasPEM_KEY_FILE returns a boolean if a field has been set.
func (o *UNIXConnector) HasPEM_KEY_FILE() bool {
	if o != nil && !IsNil(o.PEM_KEY_FILE) {
		return true
	}

	return false
}

// SetPEM_KEY_FILE gets a reference to the given string and assigns it to the PEM_KEY_FILE field.
func (o *UNIXConnector) SetPEM_KEY_FILE(v string) {
	o.PEM_KEY_FILE = &v
}

// GetENABLE_ACCOUNT_COMMAND returns the ENABLE_ACCOUNT_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnector) GetENABLE_ACCOUNT_COMMAND() string {
	if o == nil || IsNil(o.ENABLE_ACCOUNT_COMMAND) {
		var ret string
		return ret
	}
	return *o.ENABLE_ACCOUNT_COMMAND
}

// GetENABLE_ACCOUNT_COMMANDOk returns a tuple with the ENABLE_ACCOUNT_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetENABLE_ACCOUNT_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.ENABLE_ACCOUNT_COMMAND) {
		return nil, false
	}
	return o.ENABLE_ACCOUNT_COMMAND, true
}

// HasENABLE_ACCOUNT_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnector) HasENABLE_ACCOUNT_COMMAND() bool {
	if o != nil && !IsNil(o.ENABLE_ACCOUNT_COMMAND) {
		return true
	}

	return false
}

// SetENABLE_ACCOUNT_COMMAND gets a reference to the given string and assigns it to the ENABLE_ACCOUNT_COMMAND field.
func (o *UNIXConnector) SetENABLE_ACCOUNT_COMMAND(v string) {
	o.ENABLE_ACCOUNT_COMMAND = &v
}

// GetDISABLE_ACCOUNT_COMMAND returns the DISABLE_ACCOUNT_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnector) GetDISABLE_ACCOUNT_COMMAND() string {
	if o == nil || IsNil(o.DISABLE_ACCOUNT_COMMAND) {
		var ret string
		return ret
	}
	return *o.DISABLE_ACCOUNT_COMMAND
}

// GetDISABLE_ACCOUNT_COMMANDOk returns a tuple with the DISABLE_ACCOUNT_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetDISABLE_ACCOUNT_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.DISABLE_ACCOUNT_COMMAND) {
		return nil, false
	}
	return o.DISABLE_ACCOUNT_COMMAND, true
}

// HasDISABLE_ACCOUNT_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnector) HasDISABLE_ACCOUNT_COMMAND() bool {
	if o != nil && !IsNil(o.DISABLE_ACCOUNT_COMMAND) {
		return true
	}

	return false
}

// SetDISABLE_ACCOUNT_COMMAND gets a reference to the given string and assigns it to the DISABLE_ACCOUNT_COMMAND field.
func (o *UNIXConnector) SetDISABLE_ACCOUNT_COMMAND(v string) {
	o.DISABLE_ACCOUNT_COMMAND = &v
}

// GetACCOUNT_ENTITLEMENT_MAPPING_COMMAND returns the ACCOUNT_ENTITLEMENT_MAPPING_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnector) GetACCOUNT_ENTITLEMENT_MAPPING_COMMAND() string {
	if o == nil || IsNil(o.ACCOUNT_ENTITLEMENT_MAPPING_COMMAND) {
		var ret string
		return ret
	}
	return *o.ACCOUNT_ENTITLEMENT_MAPPING_COMMAND
}

// GetACCOUNT_ENTITLEMENT_MAPPING_COMMANDOk returns a tuple with the ACCOUNT_ENTITLEMENT_MAPPING_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetACCOUNT_ENTITLEMENT_MAPPING_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.ACCOUNT_ENTITLEMENT_MAPPING_COMMAND) {
		return nil, false
	}
	return o.ACCOUNT_ENTITLEMENT_MAPPING_COMMAND, true
}

// HasACCOUNT_ENTITLEMENT_MAPPING_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnector) HasACCOUNT_ENTITLEMENT_MAPPING_COMMAND() bool {
	if o != nil && !IsNil(o.ACCOUNT_ENTITLEMENT_MAPPING_COMMAND) {
		return true
	}

	return false
}

// SetACCOUNT_ENTITLEMENT_MAPPING_COMMAND gets a reference to the given string and assigns it to the ACCOUNT_ENTITLEMENT_MAPPING_COMMAND field.
func (o *UNIXConnector) SetACCOUNT_ENTITLEMENT_MAPPING_COMMAND(v string) {
	o.ACCOUNT_ENTITLEMENT_MAPPING_COMMAND = &v
}

// GetPASSPHRASE returns the PASSPHRASE field value if set, zero value otherwise.
func (o *UNIXConnector) GetPASSPHRASE() string {
	if o == nil || IsNil(o.PASSPHRASE) {
		var ret string
		return ret
	}
	return *o.PASSPHRASE
}

// GetPASSPHRASEOk returns a tuple with the PASSPHRASE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetPASSPHRASEOk() (*string, bool) {
	if o == nil || IsNil(o.PASSPHRASE) {
		return nil, false
	}
	return o.PASSPHRASE, true
}

// HasPASSPHRASE returns a boolean if a field has been set.
func (o *UNIXConnector) HasPASSPHRASE() bool {
	if o != nil && !IsNil(o.PASSPHRASE) {
		return true
	}

	return false
}

// SetPASSPHRASE gets a reference to the given string and assigns it to the PASSPHRASE field.
func (o *UNIXConnector) SetPASSPHRASE(v string) {
	o.PASSPHRASE = &v
}

// GetUPDATE_ACCOUNT_COMMAND returns the UPDATE_ACCOUNT_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnector) GetUPDATE_ACCOUNT_COMMAND() string {
	if o == nil || IsNil(o.UPDATE_ACCOUNT_COMMAND) {
		var ret string
		return ret
	}
	return *o.UPDATE_ACCOUNT_COMMAND
}

// GetUPDATE_ACCOUNT_COMMANDOk returns a tuple with the UPDATE_ACCOUNT_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetUPDATE_ACCOUNT_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.UPDATE_ACCOUNT_COMMAND) {
		return nil, false
	}
	return o.UPDATE_ACCOUNT_COMMAND, true
}

// HasUPDATE_ACCOUNT_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnector) HasUPDATE_ACCOUNT_COMMAND() bool {
	if o != nil && !IsNil(o.UPDATE_ACCOUNT_COMMAND) {
		return true
	}

	return false
}

// SetUPDATE_ACCOUNT_COMMAND gets a reference to the given string and assigns it to the UPDATE_ACCOUNT_COMMAND field.
func (o *UNIXConnector) SetUPDATE_ACCOUNT_COMMAND(v string) {
	o.UPDATE_ACCOUNT_COMMAND = &v
}

// GetCREATE_GROUP_COMMAND returns the CREATE_GROUP_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnector) GetCREATE_GROUP_COMMAND() string {
	if o == nil || IsNil(o.CREATE_GROUP_COMMAND) {
		var ret string
		return ret
	}
	return *o.CREATE_GROUP_COMMAND
}

// GetCREATE_GROUP_COMMANDOk returns a tuple with the CREATE_GROUP_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetCREATE_GROUP_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.CREATE_GROUP_COMMAND) {
		return nil, false
	}
	return o.CREATE_GROUP_COMMAND, true
}

// HasCREATE_GROUP_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnector) HasCREATE_GROUP_COMMAND() bool {
	if o != nil && !IsNil(o.CREATE_GROUP_COMMAND) {
		return true
	}

	return false
}

// SetCREATE_GROUP_COMMAND gets a reference to the given string and assigns it to the CREATE_GROUP_COMMAND field.
func (o *UNIXConnector) SetCREATE_GROUP_COMMAND(v string) {
	o.CREATE_GROUP_COMMAND = &v
}

// GetDELETE_GROUP_COMMAND returns the DELETE_GROUP_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnector) GetDELETE_GROUP_COMMAND() string {
	if o == nil || IsNil(o.DELETE_GROUP_COMMAND) {
		var ret string
		return ret
	}
	return *o.DELETE_GROUP_COMMAND
}

// GetDELETE_GROUP_COMMANDOk returns a tuple with the DELETE_GROUP_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetDELETE_GROUP_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.DELETE_GROUP_COMMAND) {
		return nil, false
	}
	return o.DELETE_GROUP_COMMAND, true
}

// HasDELETE_GROUP_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnector) HasDELETE_GROUP_COMMAND() bool {
	if o != nil && !IsNil(o.DELETE_GROUP_COMMAND) {
		return true
	}

	return false
}

// SetDELETE_GROUP_COMMAND gets a reference to the given string and assigns it to the DELETE_GROUP_COMMAND field.
func (o *UNIXConnector) SetDELETE_GROUP_COMMAND(v string) {
	o.DELETE_GROUP_COMMAND = &v
}

// GetADD_GROUP_OWNER_COMMAND returns the ADD_GROUP_OWNER_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnector) GetADD_GROUP_OWNER_COMMAND() string {
	if o == nil || IsNil(o.ADD_GROUP_OWNER_COMMAND) {
		var ret string
		return ret
	}
	return *o.ADD_GROUP_OWNER_COMMAND
}

// GetADD_GROUP_OWNER_COMMANDOk returns a tuple with the ADD_GROUP_OWNER_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetADD_GROUP_OWNER_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.ADD_GROUP_OWNER_COMMAND) {
		return nil, false
	}
	return o.ADD_GROUP_OWNER_COMMAND, true
}

// HasADD_GROUP_OWNER_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnector) HasADD_GROUP_OWNER_COMMAND() bool {
	if o != nil && !IsNil(o.ADD_GROUP_OWNER_COMMAND) {
		return true
	}

	return false
}

// SetADD_GROUP_OWNER_COMMAND gets a reference to the given string and assigns it to the ADD_GROUP_OWNER_COMMAND field.
func (o *UNIXConnector) SetADD_GROUP_OWNER_COMMAND(v string) {
	o.ADD_GROUP_OWNER_COMMAND = &v
}

// GetADD_PRIMARY_GROUP_COMMAND returns the ADD_PRIMARY_GROUP_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnector) GetADD_PRIMARY_GROUP_COMMAND() string {
	if o == nil || IsNil(o.ADD_PRIMARY_GROUP_COMMAND) {
		var ret string
		return ret
	}
	return *o.ADD_PRIMARY_GROUP_COMMAND
}

// GetADD_PRIMARY_GROUP_COMMANDOk returns a tuple with the ADD_PRIMARY_GROUP_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetADD_PRIMARY_GROUP_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.ADD_PRIMARY_GROUP_COMMAND) {
		return nil, false
	}
	return o.ADD_PRIMARY_GROUP_COMMAND, true
}

// HasADD_PRIMARY_GROUP_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnector) HasADD_PRIMARY_GROUP_COMMAND() bool {
	if o != nil && !IsNil(o.ADD_PRIMARY_GROUP_COMMAND) {
		return true
	}

	return false
}

// SetADD_PRIMARY_GROUP_COMMAND gets a reference to the given string and assigns it to the ADD_PRIMARY_GROUP_COMMAND field.
func (o *UNIXConnector) SetADD_PRIMARY_GROUP_COMMAND(v string) {
	o.ADD_PRIMARY_GROUP_COMMAND = &v
}

// GetFIREFIGHTERID_GRANT_ACCESS_COMMAND returns the FIREFIGHTERID_GRANT_ACCESS_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnector) GetFIREFIGHTERID_GRANT_ACCESS_COMMAND() string {
	if o == nil || IsNil(o.FIREFIGHTERID_GRANT_ACCESS_COMMAND) {
		var ret string
		return ret
	}
	return *o.FIREFIGHTERID_GRANT_ACCESS_COMMAND
}

// GetFIREFIGHTERID_GRANT_ACCESS_COMMANDOk returns a tuple with the FIREFIGHTERID_GRANT_ACCESS_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetFIREFIGHTERID_GRANT_ACCESS_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.FIREFIGHTERID_GRANT_ACCESS_COMMAND) {
		return nil, false
	}
	return o.FIREFIGHTERID_GRANT_ACCESS_COMMAND, true
}

// HasFIREFIGHTERID_GRANT_ACCESS_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnector) HasFIREFIGHTERID_GRANT_ACCESS_COMMAND() bool {
	if o != nil && !IsNil(o.FIREFIGHTERID_GRANT_ACCESS_COMMAND) {
		return true
	}

	return false
}

// SetFIREFIGHTERID_GRANT_ACCESS_COMMAND gets a reference to the given string and assigns it to the FIREFIGHTERID_GRANT_ACCESS_COMMAND field.
func (o *UNIXConnector) SetFIREFIGHTERID_GRANT_ACCESS_COMMAND(v string) {
	o.FIREFIGHTERID_GRANT_ACCESS_COMMAND = &v
}

// GetFIREFIGHTERID_REVOKE_ACCESS_COMMAND returns the FIREFIGHTERID_REVOKE_ACCESS_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnector) GetFIREFIGHTERID_REVOKE_ACCESS_COMMAND() string {
	if o == nil || IsNil(o.FIREFIGHTERID_REVOKE_ACCESS_COMMAND) {
		var ret string
		return ret
	}
	return *o.FIREFIGHTERID_REVOKE_ACCESS_COMMAND
}

// GetFIREFIGHTERID_REVOKE_ACCESS_COMMANDOk returns a tuple with the FIREFIGHTERID_REVOKE_ACCESS_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetFIREFIGHTERID_REVOKE_ACCESS_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.FIREFIGHTERID_REVOKE_ACCESS_COMMAND) {
		return nil, false
	}
	return o.FIREFIGHTERID_REVOKE_ACCESS_COMMAND, true
}

// HasFIREFIGHTERID_REVOKE_ACCESS_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnector) HasFIREFIGHTERID_REVOKE_ACCESS_COMMAND() bool {
	if o != nil && !IsNil(o.FIREFIGHTERID_REVOKE_ACCESS_COMMAND) {
		return true
	}

	return false
}

// SetFIREFIGHTERID_REVOKE_ACCESS_COMMAND gets a reference to the given string and assigns it to the FIREFIGHTERID_REVOKE_ACCESS_COMMAND field.
func (o *UNIXConnector) SetFIREFIGHTERID_REVOKE_ACCESS_COMMAND(v string) {
	o.FIREFIGHTERID_REVOKE_ACCESS_COMMAND = &v
}

// GetINACTIVE_LOCK_ACCOUNT returns the INACTIVE_LOCK_ACCOUNT field value if set, zero value otherwise.
func (o *UNIXConnector) GetINACTIVE_LOCK_ACCOUNT() string {
	if o == nil || IsNil(o.INACTIVE_LOCK_ACCOUNT) {
		var ret string
		return ret
	}
	return *o.INACTIVE_LOCK_ACCOUNT
}

// GetINACTIVE_LOCK_ACCOUNTOk returns a tuple with the INACTIVE_LOCK_ACCOUNT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetINACTIVE_LOCK_ACCOUNTOk() (*string, bool) {
	if o == nil || IsNil(o.INACTIVE_LOCK_ACCOUNT) {
		return nil, false
	}
	return o.INACTIVE_LOCK_ACCOUNT, true
}

// HasINACTIVE_LOCK_ACCOUNT returns a boolean if a field has been set.
func (o *UNIXConnector) HasINACTIVE_LOCK_ACCOUNT() bool {
	if o != nil && !IsNil(o.INACTIVE_LOCK_ACCOUNT) {
		return true
	}

	return false
}

// SetINACTIVE_LOCK_ACCOUNT gets a reference to the given string and assigns it to the INACTIVE_LOCK_ACCOUNT field.
func (o *UNIXConnector) SetINACTIVE_LOCK_ACCOUNT(v string) {
	o.INACTIVE_LOCK_ACCOUNT = &v
}

// GetSTATUS_THRESHOLD_CONFIG returns the STATUS_THRESHOLD_CONFIG field value if set, zero value otherwise.
func (o *UNIXConnector) GetSTATUS_THRESHOLD_CONFIG() string {
	if o == nil || IsNil(o.STATUS_THRESHOLD_CONFIG) {
		var ret string
		return ret
	}
	return *o.STATUS_THRESHOLD_CONFIG
}

// GetSTATUS_THRESHOLD_CONFIGOk returns a tuple with the STATUS_THRESHOLD_CONFIG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetSTATUS_THRESHOLD_CONFIGOk() (*string, bool) {
	if o == nil || IsNil(o.STATUS_THRESHOLD_CONFIG) {
		return nil, false
	}
	return o.STATUS_THRESHOLD_CONFIG, true
}

// HasSTATUS_THRESHOLD_CONFIG returns a boolean if a field has been set.
func (o *UNIXConnector) HasSTATUS_THRESHOLD_CONFIG() bool {
	if o != nil && !IsNil(o.STATUS_THRESHOLD_CONFIG) {
		return true
	}

	return false
}

// SetSTATUS_THRESHOLD_CONFIG gets a reference to the given string and assigns it to the STATUS_THRESHOLD_CONFIG field.
func (o *UNIXConnector) SetSTATUS_THRESHOLD_CONFIG(v string) {
	o.STATUS_THRESHOLD_CONFIG = &v
}

// GetCUSTOM_CONFIG_JSON returns the CUSTOM_CONFIG_JSON field value if set, zero value otherwise.
func (o *UNIXConnector) GetCUSTOM_CONFIG_JSON() string {
	if o == nil || IsNil(o.CUSTOM_CONFIG_JSON) {
		var ret string
		return ret
	}
	return *o.CUSTOM_CONFIG_JSON
}

// GetCUSTOM_CONFIG_JSONOk returns a tuple with the CUSTOM_CONFIG_JSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetCUSTOM_CONFIG_JSONOk() (*string, bool) {
	if o == nil || IsNil(o.CUSTOM_CONFIG_JSON) {
		return nil, false
	}
	return o.CUSTOM_CONFIG_JSON, true
}

// HasCUSTOM_CONFIG_JSON returns a boolean if a field has been set.
func (o *UNIXConnector) HasCUSTOM_CONFIG_JSON() bool {
	if o != nil && !IsNil(o.CUSTOM_CONFIG_JSON) {
		return true
	}

	return false
}

// SetCUSTOM_CONFIG_JSON gets a reference to the given string and assigns it to the CUSTOM_CONFIG_JSON field.
func (o *UNIXConnector) SetCUSTOM_CONFIG_JSON(v string) {
	o.CUSTOM_CONFIG_JSON = &v
}

// GetSSH_KEY returns the SSH_KEY field value if set, zero value otherwise.
func (o *UNIXConnector) GetSSH_KEY() string {
	if o == nil || IsNil(o.SSH_KEY) {
		var ret string
		return ret
	}
	return *o.SSH_KEY
}

// GetSSH_KEYOk returns a tuple with the SSH_KEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetSSH_KEYOk() (*string, bool) {
	if o == nil || IsNil(o.SSH_KEY) {
		return nil, false
	}
	return o.SSH_KEY, true
}

// HasSSH_KEY returns a boolean if a field has been set.
func (o *UNIXConnector) HasSSH_KEY() bool {
	if o != nil && !IsNil(o.SSH_KEY) {
		return true
	}

	return false
}

// SetSSH_KEY gets a reference to the given string and assigns it to the SSH_KEY field.
func (o *UNIXConnector) SetSSH_KEY(v string) {
	o.SSH_KEY = &v
}

// GetLOCK_ACCOUNT_COMMAND returns the LOCK_ACCOUNT_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnector) GetLOCK_ACCOUNT_COMMAND() string {
	if o == nil || IsNil(o.LOCK_ACCOUNT_COMMAND) {
		var ret string
		return ret
	}
	return *o.LOCK_ACCOUNT_COMMAND
}

// GetLOCK_ACCOUNT_COMMANDOk returns a tuple with the LOCK_ACCOUNT_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetLOCK_ACCOUNT_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.LOCK_ACCOUNT_COMMAND) {
		return nil, false
	}
	return o.LOCK_ACCOUNT_COMMAND, true
}

// HasLOCK_ACCOUNT_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnector) HasLOCK_ACCOUNT_COMMAND() bool {
	if o != nil && !IsNil(o.LOCK_ACCOUNT_COMMAND) {
		return true
	}

	return false
}

// SetLOCK_ACCOUNT_COMMAND gets a reference to the given string and assigns it to the LOCK_ACCOUNT_COMMAND field.
func (o *UNIXConnector) SetLOCK_ACCOUNT_COMMAND(v string) {
	o.LOCK_ACCOUNT_COMMAND = &v
}

// GetUNLOCK_ACCOUNT_COMMAND returns the UNLOCK_ACCOUNT_COMMAND field value if set, zero value otherwise.
func (o *UNIXConnector) GetUNLOCK_ACCOUNT_COMMAND() string {
	if o == nil || IsNil(o.UNLOCK_ACCOUNT_COMMAND) {
		var ret string
		return ret
	}
	return *o.UNLOCK_ACCOUNT_COMMAND
}

// GetUNLOCK_ACCOUNT_COMMANDOk returns a tuple with the UNLOCK_ACCOUNT_COMMAND field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetUNLOCK_ACCOUNT_COMMANDOk() (*string, bool) {
	if o == nil || IsNil(o.UNLOCK_ACCOUNT_COMMAND) {
		return nil, false
	}
	return o.UNLOCK_ACCOUNT_COMMAND, true
}

// HasUNLOCK_ACCOUNT_COMMAND returns a boolean if a field has been set.
func (o *UNIXConnector) HasUNLOCK_ACCOUNT_COMMAND() bool {
	if o != nil && !IsNil(o.UNLOCK_ACCOUNT_COMMAND) {
		return true
	}

	return false
}

// SetUNLOCK_ACCOUNT_COMMAND gets a reference to the given string and assigns it to the UNLOCK_ACCOUNT_COMMAND field.
func (o *UNIXConnector) SetUNLOCK_ACCOUNT_COMMAND(v string) {
	o.UNLOCK_ACCOUNT_COMMAND = &v
}

// GetPassThroughConnectionDetails returns the PassThroughConnectionDetails field value if set, zero value otherwise.
func (o *UNIXConnector) GetPassThroughConnectionDetails() string {
	if o == nil || IsNil(o.PassThroughConnectionDetails) {
		var ret string
		return ret
	}
	return *o.PassThroughConnectionDetails
}

// GetPassThroughConnectionDetailsOk returns a tuple with the PassThroughConnectionDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetPassThroughConnectionDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.PassThroughConnectionDetails) {
		return nil, false
	}
	return o.PassThroughConnectionDetails, true
}

// HasPassThroughConnectionDetails returns a boolean if a field has been set.
func (o *UNIXConnector) HasPassThroughConnectionDetails() bool {
	if o != nil && !IsNil(o.PassThroughConnectionDetails) {
		return true
	}

	return false
}

// SetPassThroughConnectionDetails gets a reference to the given string and assigns it to the PassThroughConnectionDetails field.
func (o *UNIXConnector) SetPassThroughConnectionDetails(v string) {
	o.PassThroughConnectionDetails = &v
}

// GetSSHPassThroughPassword returns the SSHPassThroughPassword field value if set, zero value otherwise.
func (o *UNIXConnector) GetSSHPassThroughPassword() string {
	if o == nil || IsNil(o.SSHPassThroughPassword) {
		var ret string
		return ret
	}
	return *o.SSHPassThroughPassword
}

// GetSSHPassThroughPasswordOk returns a tuple with the SSHPassThroughPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetSSHPassThroughPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.SSHPassThroughPassword) {
		return nil, false
	}
	return o.SSHPassThroughPassword, true
}

// HasSSHPassThroughPassword returns a boolean if a field has been set.
func (o *UNIXConnector) HasSSHPassThroughPassword() bool {
	if o != nil && !IsNil(o.SSHPassThroughPassword) {
		return true
	}

	return false
}

// SetSSHPassThroughPassword gets a reference to the given string and assigns it to the SSHPassThroughPassword field.
func (o *UNIXConnector) SetSSHPassThroughPassword(v string) {
	o.SSHPassThroughPassword = &v
}

// GetSSHPassThroughSSHKEY returns the SSHPassThroughSSHKEY field value if set, zero value otherwise.
func (o *UNIXConnector) GetSSHPassThroughSSHKEY() string {
	if o == nil || IsNil(o.SSHPassThroughSSHKEY) {
		var ret string
		return ret
	}
	return *o.SSHPassThroughSSHKEY
}

// GetSSHPassThroughSSHKEYOk returns a tuple with the SSHPassThroughSSHKEY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetSSHPassThroughSSHKEYOk() (*string, bool) {
	if o == nil || IsNil(o.SSHPassThroughSSHKEY) {
		return nil, false
	}
	return o.SSHPassThroughSSHKEY, true
}

// HasSSHPassThroughSSHKEY returns a boolean if a field has been set.
func (o *UNIXConnector) HasSSHPassThroughSSHKEY() bool {
	if o != nil && !IsNil(o.SSHPassThroughSSHKEY) {
		return true
	}

	return false
}

// SetSSHPassThroughSSHKEY gets a reference to the given string and assigns it to the SSHPassThroughSSHKEY field.
func (o *UNIXConnector) SetSSHPassThroughSSHKEY(v string) {
	o.SSHPassThroughSSHKEY = &v
}

// GetSSHPassThroughPassphrase returns the SSHPassThroughPassphrase field value if set, zero value otherwise.
func (o *UNIXConnector) GetSSHPassThroughPassphrase() string {
	if o == nil || IsNil(o.SSHPassThroughPassphrase) {
		var ret string
		return ret
	}
	return *o.SSHPassThroughPassphrase
}

// GetSSHPassThroughPassphraseOk returns a tuple with the SSHPassThroughPassphrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNIXConnector) GetSSHPassThroughPassphraseOk() (*string, bool) {
	if o == nil || IsNil(o.SSHPassThroughPassphrase) {
		return nil, false
	}
	return o.SSHPassThroughPassphrase, true
}

// HasSSHPassThroughPassphrase returns a boolean if a field has been set.
func (o *UNIXConnector) HasSSHPassThroughPassphrase() bool {
	if o != nil && !IsNil(o.SSHPassThroughPassphrase) {
		return true
	}

	return false
}

// SetSSHPassThroughPassphrase gets a reference to the given string and assigns it to the SSHPassThroughPassphrase field.
func (o *UNIXConnector) SetSSHPassThroughPassphrase(v string) {
	o.SSHPassThroughPassphrase = &v
}

func (o UNIXConnector) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UNIXConnector) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedBaseConnector, errBaseConnector := json.Marshal(o.BaseConnector)
	if errBaseConnector != nil {
		return map[string]interface{}{}, errBaseConnector
	}
	errBaseConnector = json.Unmarshal([]byte(serializedBaseConnector), &toSerialize)
	if errBaseConnector != nil {
		return map[string]interface{}{}, errBaseConnector
	}
	toSerialize["HOST_NAME"] = o.HOST_NAME
	toSerialize["PORT_NUMBER"] = o.PORT_NUMBER
	toSerialize["USERNAME"] = o.USERNAME
	if !IsNil(o.PASSWORD) {
		toSerialize["PASSWORD"] = o.PASSWORD
	}
	if !IsNil(o.GROUPS_FILE) {
		toSerialize["GROUPS_FILE"] = o.GROUPS_FILE
	}
	if !IsNil(o.ACCOUNTS_FILE) {
		toSerialize["ACCOUNTS_FILE"] = o.ACCOUNTS_FILE
	}
	if !IsNil(o.SHADOW_FILE) {
		toSerialize["SHADOW_FILE"] = o.SHADOW_FILE
	}
	if !IsNil(o.PROVISION_ACCOUNT_COMMAND) {
		toSerialize["PROVISION_ACCOUNT_COMMAND"] = o.PROVISION_ACCOUNT_COMMAND
	}
	if !IsNil(o.DEPROVISION_ACCOUNT_COMMAND) {
		toSerialize["DEPROVISION_ACCOUNT_COMMAND"] = o.DEPROVISION_ACCOUNT_COMMAND
	}
	if !IsNil(o.ADD_ACCESS_COMMAND) {
		toSerialize["ADD_ACCESS_COMMAND"] = o.ADD_ACCESS_COMMAND
	}
	if !IsNil(o.REMOVE_ACCESS_COMMAND) {
		toSerialize["REMOVE_ACCESS_COMMAND"] = o.REMOVE_ACCESS_COMMAND
	}
	if !IsNil(o.CHANGE_PASSWRD_JSON) {
		toSerialize["CHANGE_PASSWRD_JSON"] = o.CHANGE_PASSWRD_JSON
	}
	if !IsNil(o.PEM_KEY_FILE) {
		toSerialize["PEM_KEY_FILE"] = o.PEM_KEY_FILE
	}
	if !IsNil(o.ENABLE_ACCOUNT_COMMAND) {
		toSerialize["ENABLE_ACCOUNT_COMMAND"] = o.ENABLE_ACCOUNT_COMMAND
	}
	if !IsNil(o.DISABLE_ACCOUNT_COMMAND) {
		toSerialize["DISABLE_ACCOUNT_COMMAND"] = o.DISABLE_ACCOUNT_COMMAND
	}
	if !IsNil(o.ACCOUNT_ENTITLEMENT_MAPPING_COMMAND) {
		toSerialize["ACCOUNT_ENTITLEMENT_MAPPING_COMMAND"] = o.ACCOUNT_ENTITLEMENT_MAPPING_COMMAND
	}
	if !IsNil(o.PASSPHRASE) {
		toSerialize["PASSPHRASE"] = o.PASSPHRASE
	}
	if !IsNil(o.UPDATE_ACCOUNT_COMMAND) {
		toSerialize["UPDATE_ACCOUNT_COMMAND"] = o.UPDATE_ACCOUNT_COMMAND
	}
	if !IsNil(o.CREATE_GROUP_COMMAND) {
		toSerialize["CREATE_GROUP_COMMAND"] = o.CREATE_GROUP_COMMAND
	}
	if !IsNil(o.DELETE_GROUP_COMMAND) {
		toSerialize["DELETE_GROUP_COMMAND"] = o.DELETE_GROUP_COMMAND
	}
	if !IsNil(o.ADD_GROUP_OWNER_COMMAND) {
		toSerialize["ADD_GROUP_OWNER_COMMAND"] = o.ADD_GROUP_OWNER_COMMAND
	}
	if !IsNil(o.ADD_PRIMARY_GROUP_COMMAND) {
		toSerialize["ADD_PRIMARY_GROUP_COMMAND"] = o.ADD_PRIMARY_GROUP_COMMAND
	}
	if !IsNil(o.FIREFIGHTERID_GRANT_ACCESS_COMMAND) {
		toSerialize["FIREFIGHTERID_GRANT_ACCESS_COMMAND"] = o.FIREFIGHTERID_GRANT_ACCESS_COMMAND
	}
	if !IsNil(o.FIREFIGHTERID_REVOKE_ACCESS_COMMAND) {
		toSerialize["FIREFIGHTERID_REVOKE_ACCESS_COMMAND"] = o.FIREFIGHTERID_REVOKE_ACCESS_COMMAND
	}
	if !IsNil(o.INACTIVE_LOCK_ACCOUNT) {
		toSerialize["INACTIVE_LOCK_ACCOUNT"] = o.INACTIVE_LOCK_ACCOUNT
	}
	if !IsNil(o.STATUS_THRESHOLD_CONFIG) {
		toSerialize["STATUS_THRESHOLD_CONFIG"] = o.STATUS_THRESHOLD_CONFIG
	}
	if !IsNil(o.CUSTOM_CONFIG_JSON) {
		toSerialize["CUSTOM_CONFIG_JSON"] = o.CUSTOM_CONFIG_JSON
	}
	if !IsNil(o.SSH_KEY) {
		toSerialize["SSH_KEY"] = o.SSH_KEY
	}
	if !IsNil(o.LOCK_ACCOUNT_COMMAND) {
		toSerialize["LOCK_ACCOUNT_COMMAND"] = o.LOCK_ACCOUNT_COMMAND
	}
	if !IsNil(o.UNLOCK_ACCOUNT_COMMAND) {
		toSerialize["UNLOCK_ACCOUNT_COMMAND"] = o.UNLOCK_ACCOUNT_COMMAND
	}
	if !IsNil(o.PassThroughConnectionDetails) {
		toSerialize["PassThroughConnectionDetails"] = o.PassThroughConnectionDetails
	}
	if !IsNil(o.SSHPassThroughPassword) {
		toSerialize["SSHPassThroughPassword"] = o.SSHPassThroughPassword
	}
	if !IsNil(o.SSHPassThroughSSHKEY) {
		toSerialize["SSHPassThroughSSHKEY"] = o.SSHPassThroughSSHKEY
	}
	if !IsNil(o.SSHPassThroughPassphrase) {
		toSerialize["SSHPassThroughPassphrase"] = o.SSHPassThroughPassphrase
	}
	return toSerialize, nil
}

func (o *UNIXConnector) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"HOST_NAME",
		"PORT_NUMBER",
		"USERNAME",
		"connectionName",
		"connectiontype",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUNIXConnector := _UNIXConnector{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUNIXConnector)

	if err != nil {
		return err
	}

	*o = UNIXConnector(varUNIXConnector)

	return err
}

type NullableUNIXConnector struct {
	value *UNIXConnector
	isSet bool
}

func (v NullableUNIXConnector) Get() *UNIXConnector {
	return v.value
}

func (v *NullableUNIXConnector) Set(val *UNIXConnector) {
	v.value = val
	v.isSet = true
}

func (v NullableUNIXConnector) IsSet() bool {
	return v.isSet
}

func (v *NullableUNIXConnector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUNIXConnector(val *UNIXConnector) *NullableUNIXConnector {
	return &NullableUNIXConnector{value: val, isSet: true}
}

func (v NullableUNIXConnector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUNIXConnector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
