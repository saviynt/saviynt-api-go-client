/*
Saviynt Connections API

Connections

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connections

import (
	"encoding/json"
)

// checks if the ConnectionAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectionAttributes{}

// ConnectionAttributes struct for ConnectionAttributes
type ConnectionAttributes struct {
	ACCOUNT_ATTRIBUTE *string `json:"ACCOUNT_ATTRIBUTE,omitempty"`
	ACCOUNT_ATTRIBUTES *string `json:"ACCOUNT_ATTRIBUTES,omitempty"`
	ACCOUNT_ATTRIBUTE_LABEL *string `json:"ACCOUNT_ATTRIBUTE_LABEL,omitempty"`
	ACCOUNTNAMERULE *string `json:"ACCOUNTNAMERULE,omitempty"`
	ADVANCE_FILTER_JSON *string `json:"ADVANCE_FILTER_JSON,omitempty"`
	ADVSEARCH *string `json:"ADVSEARCH,omitempty"`
	APPLICATION_NAME *string `json:"APPLICATION_NAME,omitempty"`
	BASE *string `json:"BASE,omitempty"`
	CHECKFORUNIQUE *string `json:"CHECKFORUNIQUE,omitempty"`
	ConfigJSON *string `json:"ConfigJSON,omitempty"`
	CONNECTOR_FILE_PATH *string `json:"CONNECTOR_FILE_PATH,omitempty"`
	CREATEACCOUNTJSON *string `json:"CREATEACCOUNTJSON,omitempty"`
	CREATEORGJSON *string `json:"CREATEORGJSON,omitempty"`
	CUSTOM_ACCOUNT_ATTRIBUTES *string `json:"CUSTOM_ACCOUNT_ATTRIBUTES,omitempty"`
	CUSTOMER_ID *string `json:"CUSTOMER_ID,omitempty"`
	DC_LOCATOR *string `json:"DC_LOCATOR,omitempty"`
	DEFAULT_USER_ROLE *string `json:"DEFAULT_USER_ROLE,omitempty"`
	DISABLEACCOUNTJSON *string `json:"DISABLEACCOUNTJSON,omitempty"`
	ENABLEACCOUNTJSON *string `json:"ENABLEACCOUNTJSON,omitempty"`
	ENABLEGROUPMANAGEMENT *string `json:"ENABLEGROUPMANAGEMENT,omitempty"`
	ENDPOINTS_FILTER *string `json:"ENDPOINTS_FILTER,omitempty"`
	ENFORCE_TREE_DELETION *string `json:"ENFORCE_TREE_DELETION,omitempty"`
	ENTITLEMENT_ATTRIBUTE *string `json:"ENTITLEMENT_ATTRIBUTE,omitempty"`
	FILEFOLDER_ATTRIBUTES *string `json:"FILEFOLDER_ATTRIBUTES,omitempty"`
	FILTER *string `json:"FILTER,omitempty"`
	GROUP_ATTRIBUTES *string `json:"GROUP_ATTRIBUTES,omitempty"`
	IMPORT_USERS *string `json:"IMPORT_USERS,omitempty"`
	IMPORTJSON *string `json:"IMPORTJSON,omitempty"`
	INCREMENTAL_CONFIG *string `json:"INCREMENTAL_CONFIG,omitempty"`
	LAST_IMPORT_TIME *string `json:"LAST_IMPORT_TIME,omitempty"`
	LDAP_OR_AD *string `json:"LDAP_OR_AD,omitempty"`
	MAX_CHANGENUMBER *string `json:"MAX_CHANGENUMBER,omitempty"`
	MKTPLACEAPP_ATTRIBUTES *string `json:"MKTPLACEAPP_ATTRIBUTES,omitempty"`
	MODIFYUSERDATAJSON *string `json:"MODIFYUSERDATAJSON,omitempty"`
	OBJECTFILTER *string `json:"OBJECTFILTER,omitempty"`
	ORG_BASE *string `json:"ORG_BASE,omitempty"`
	ORGANIZATION_ATTRIBUTE *string `json:"ORGANIZATION_ATTRIBUTE,omitempty"`
	ORGIMPORTJSON *string `json:"ORGIMPORTJSON,omitempty"`
	PAGE_SIZE *string `json:"PAGE_SIZE,omitempty"`
	PAM_CONFIG *string `json:"PAM_CONFIG,omitempty"`
	PASSWORD *string `json:"PASSWORD,omitempty"`
	PASSWORD_MAX_LENGTH *string `json:"PASSWORD_MAX_LENGTH,omitempty"`
	PASSWORD_MIN_LENGTH *string `json:"PASSWORD_MIN_LENGTH,omitempty"`
	PASSWORD_NOOFCAPSALPHA *string `json:"PASSWORD_NOOFCAPSALPHA,omitempty"`
	PASSWORD_NOOFDIGITS *string `json:"PASSWORD_NOOFDIGITS,omitempty"`
	PASSWORD_NOOFSPLCHARS *string `json:"PASSWORD_NOOFSPLCHARS,omitempty"`
	QUARANTINE_FOLDER_ID *string `json:"QUARANTINE_FOLDER_ID,omitempty"`
	READ_OPERATIONAL_ATTRIBUTES *string `json:"READ_OPERATIONAL_ATTRIBUTES,omitempty"`
	REMOVEACCOUNTACTION *string `json:"REMOVEACCOUNTACTION,omitempty"`
	RESETANDCHANGEPASSWRDJSON *string `json:"RESETANDCHANGEPASSWRDJSON,omitempty"`
	REUSEACCOUNTJSON *string `json:"REUSEACCOUNTJSON,omitempty"`
	REUSEINACTIVEACCOUNT *string `json:"REUSEINACTIVEACCOUNT,omitempty"`
	SCOPES *string `json:"SCOPES,omitempty"`
	SEARCHFILTER *string `json:"SEARCHFILTER,omitempty"`
	SERVICE_ACCOUNT_ID *string `json:"SERVICE_ACCOUNT_ID,omitempty"`
	SERVICE_ACCOUNT_KEY_JSON *string `json:"SERVICE_ACCOUNT_KEY_JSON,omitempty"`
	SERVICE_ACCOUNT_USER *string `json:"SERVICE_ACCOUNT_USER,omitempty"`
	SETDEFAULTPAGESIZE *string `json:"SETDEFAULTPAGESIZE,omitempty"`
	SETRANDOMPASSWORD *string `json:"SETRANDOMPASSWORD,omitempty"`
	STATUS_THRESHOLD_CONFIG *string `json:"STATUS_THRESHOLD_CONFIG,omitempty"`
	STATUSKEYJSON *string `json:"STATUSKEYJSON,omitempty"`
	SUPPORTEMPTYSTRING *string `json:"SUPPORTEMPTYSTRING,omitempty"`
	SUSPEND_USER_ORGANIZATIONAL_UNIT *string `json:"SUSPEND_USER_ORGANIZATIONAL_UNIT,omitempty"`
	UNLOCKACCOUNTJSON *string `json:"UNLOCKACCOUNTJSON,omitempty"`
	UPDATEACCOUNTJSON *string `json:"UPDATEACCOUNTJSON,omitempty"`
	UPDATEORGJSON *string `json:"UPDATEORGJSON,omitempty"`
	UPDATEUSERJSON *string `json:"UPDATEUSERJSON,omitempty"`
	USER_ATTRIBUTE *string `json:"USER_ATTRIBUTE,omitempty"`
	USER_ATTRIBUTES *string `json:"USER_ATTRIBUTES,omitempty"`
	URL *string `json:"URL,omitempty"`
	USERNAME *string `json:"USERNAME,omitempty"`
	ConnectionTimeoutConfig *ConnectionTimeoutConfig `json:"connectionTimeoutConfig,omitempty"`
	ConnectionType *string `json:"connectionType,omitempty"`
	CreateUpdateMappings *string `json:"createUpdateMappings,omitempty"`
	GroupImportMapping *string `json:"groupImportMapping,omitempty"`
	GroupSearchBaseDN *string `json:"groupSearchBaseDN,omitempty"`
	IsTimeoutConfigValidated *bool `json:"isTimeoutConfigValidated,omitempty"`
	IsTimeoutSupported *bool `json:"isTimeoutSupported,omitempty"`
}

// NewConnectionAttributes instantiates a new ConnectionAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionAttributes() *ConnectionAttributes {
	this := ConnectionAttributes{}
	return &this
}

// NewConnectionAttributesWithDefaults instantiates a new ConnectionAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionAttributesWithDefaults() *ConnectionAttributes {
	this := ConnectionAttributes{}
	return &this
}

// GetACCOUNT_ATTRIBUTE returns the ACCOUNT_ATTRIBUTE field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetACCOUNT_ATTRIBUTE() string {
	if o == nil || IsNil(o.ACCOUNT_ATTRIBUTE) {
		var ret string
		return ret
	}
	return *o.ACCOUNT_ATTRIBUTE
}

// GetACCOUNT_ATTRIBUTEOk returns a tuple with the ACCOUNT_ATTRIBUTE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetACCOUNT_ATTRIBUTEOk() (*string, bool) {
	if o == nil || IsNil(o.ACCOUNT_ATTRIBUTE) {
		return nil, false
	}
	return o.ACCOUNT_ATTRIBUTE, true
}

// HasACCOUNT_ATTRIBUTE returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasACCOUNT_ATTRIBUTE() bool {
	if o != nil && !IsNil(o.ACCOUNT_ATTRIBUTE) {
		return true
	}

	return false
}

// SetACCOUNT_ATTRIBUTE gets a reference to the given string and assigns it to the ACCOUNT_ATTRIBUTE field.
func (o *ConnectionAttributes) SetACCOUNT_ATTRIBUTE(v string) {
	o.ACCOUNT_ATTRIBUTE = &v
}

// GetACCOUNT_ATTRIBUTES returns the ACCOUNT_ATTRIBUTES field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetACCOUNT_ATTRIBUTES() string {
	if o == nil || IsNil(o.ACCOUNT_ATTRIBUTES) {
		var ret string
		return ret
	}
	return *o.ACCOUNT_ATTRIBUTES
}

// GetACCOUNT_ATTRIBUTESOk returns a tuple with the ACCOUNT_ATTRIBUTES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetACCOUNT_ATTRIBUTESOk() (*string, bool) {
	if o == nil || IsNil(o.ACCOUNT_ATTRIBUTES) {
		return nil, false
	}
	return o.ACCOUNT_ATTRIBUTES, true
}

// HasACCOUNT_ATTRIBUTES returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasACCOUNT_ATTRIBUTES() bool {
	if o != nil && !IsNil(o.ACCOUNT_ATTRIBUTES) {
		return true
	}

	return false
}

// SetACCOUNT_ATTRIBUTES gets a reference to the given string and assigns it to the ACCOUNT_ATTRIBUTES field.
func (o *ConnectionAttributes) SetACCOUNT_ATTRIBUTES(v string) {
	o.ACCOUNT_ATTRIBUTES = &v
}

// GetACCOUNT_ATTRIBUTE_LABEL returns the ACCOUNT_ATTRIBUTE_LABEL field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetACCOUNT_ATTRIBUTE_LABEL() string {
	if o == nil || IsNil(o.ACCOUNT_ATTRIBUTE_LABEL) {
		var ret string
		return ret
	}
	return *o.ACCOUNT_ATTRIBUTE_LABEL
}

// GetACCOUNT_ATTRIBUTE_LABELOk returns a tuple with the ACCOUNT_ATTRIBUTE_LABEL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetACCOUNT_ATTRIBUTE_LABELOk() (*string, bool) {
	if o == nil || IsNil(o.ACCOUNT_ATTRIBUTE_LABEL) {
		return nil, false
	}
	return o.ACCOUNT_ATTRIBUTE_LABEL, true
}

// HasACCOUNT_ATTRIBUTE_LABEL returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasACCOUNT_ATTRIBUTE_LABEL() bool {
	if o != nil && !IsNil(o.ACCOUNT_ATTRIBUTE_LABEL) {
		return true
	}

	return false
}

// SetACCOUNT_ATTRIBUTE_LABEL gets a reference to the given string and assigns it to the ACCOUNT_ATTRIBUTE_LABEL field.
func (o *ConnectionAttributes) SetACCOUNT_ATTRIBUTE_LABEL(v string) {
	o.ACCOUNT_ATTRIBUTE_LABEL = &v
}

// GetACCOUNTNAMERULE returns the ACCOUNTNAMERULE field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetACCOUNTNAMERULE() string {
	if o == nil || IsNil(o.ACCOUNTNAMERULE) {
		var ret string
		return ret
	}
	return *o.ACCOUNTNAMERULE
}

// GetACCOUNTNAMERULEOk returns a tuple with the ACCOUNTNAMERULE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetACCOUNTNAMERULEOk() (*string, bool) {
	if o == nil || IsNil(o.ACCOUNTNAMERULE) {
		return nil, false
	}
	return o.ACCOUNTNAMERULE, true
}

// HasACCOUNTNAMERULE returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasACCOUNTNAMERULE() bool {
	if o != nil && !IsNil(o.ACCOUNTNAMERULE) {
		return true
	}

	return false
}

// SetACCOUNTNAMERULE gets a reference to the given string and assigns it to the ACCOUNTNAMERULE field.
func (o *ConnectionAttributes) SetACCOUNTNAMERULE(v string) {
	o.ACCOUNTNAMERULE = &v
}

// GetADVANCE_FILTER_JSON returns the ADVANCE_FILTER_JSON field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetADVANCE_FILTER_JSON() string {
	if o == nil || IsNil(o.ADVANCE_FILTER_JSON) {
		var ret string
		return ret
	}
	return *o.ADVANCE_FILTER_JSON
}

// GetADVANCE_FILTER_JSONOk returns a tuple with the ADVANCE_FILTER_JSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetADVANCE_FILTER_JSONOk() (*string, bool) {
	if o == nil || IsNil(o.ADVANCE_FILTER_JSON) {
		return nil, false
	}
	return o.ADVANCE_FILTER_JSON, true
}

// HasADVANCE_FILTER_JSON returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasADVANCE_FILTER_JSON() bool {
	if o != nil && !IsNil(o.ADVANCE_FILTER_JSON) {
		return true
	}

	return false
}

// SetADVANCE_FILTER_JSON gets a reference to the given string and assigns it to the ADVANCE_FILTER_JSON field.
func (o *ConnectionAttributes) SetADVANCE_FILTER_JSON(v string) {
	o.ADVANCE_FILTER_JSON = &v
}

// GetADVSEARCH returns the ADVSEARCH field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetADVSEARCH() string {
	if o == nil || IsNil(o.ADVSEARCH) {
		var ret string
		return ret
	}
	return *o.ADVSEARCH
}

// GetADVSEARCHOk returns a tuple with the ADVSEARCH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetADVSEARCHOk() (*string, bool) {
	if o == nil || IsNil(o.ADVSEARCH) {
		return nil, false
	}
	return o.ADVSEARCH, true
}

// HasADVSEARCH returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasADVSEARCH() bool {
	if o != nil && !IsNil(o.ADVSEARCH) {
		return true
	}

	return false
}

// SetADVSEARCH gets a reference to the given string and assigns it to the ADVSEARCH field.
func (o *ConnectionAttributes) SetADVSEARCH(v string) {
	o.ADVSEARCH = &v
}

// GetAPPLICATION_NAME returns the APPLICATION_NAME field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetAPPLICATION_NAME() string {
	if o == nil || IsNil(o.APPLICATION_NAME) {
		var ret string
		return ret
	}
	return *o.APPLICATION_NAME
}

// GetAPPLICATION_NAMEOk returns a tuple with the APPLICATION_NAME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetAPPLICATION_NAMEOk() (*string, bool) {
	if o == nil || IsNil(o.APPLICATION_NAME) {
		return nil, false
	}
	return o.APPLICATION_NAME, true
}

// HasAPPLICATION_NAME returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasAPPLICATION_NAME() bool {
	if o != nil && !IsNil(o.APPLICATION_NAME) {
		return true
	}

	return false
}

// SetAPPLICATION_NAME gets a reference to the given string and assigns it to the APPLICATION_NAME field.
func (o *ConnectionAttributes) SetAPPLICATION_NAME(v string) {
	o.APPLICATION_NAME = &v
}

// GetBASE returns the BASE field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetBASE() string {
	if o == nil || IsNil(o.BASE) {
		var ret string
		return ret
	}
	return *o.BASE
}

// GetBASEOk returns a tuple with the BASE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetBASEOk() (*string, bool) {
	if o == nil || IsNil(o.BASE) {
		return nil, false
	}
	return o.BASE, true
}

// HasBASE returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasBASE() bool {
	if o != nil && !IsNil(o.BASE) {
		return true
	}

	return false
}

// SetBASE gets a reference to the given string and assigns it to the BASE field.
func (o *ConnectionAttributes) SetBASE(v string) {
	o.BASE = &v
}

// GetCHECKFORUNIQUE returns the CHECKFORUNIQUE field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetCHECKFORUNIQUE() string {
	if o == nil || IsNil(o.CHECKFORUNIQUE) {
		var ret string
		return ret
	}
	return *o.CHECKFORUNIQUE
}

// GetCHECKFORUNIQUEOk returns a tuple with the CHECKFORUNIQUE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetCHECKFORUNIQUEOk() (*string, bool) {
	if o == nil || IsNil(o.CHECKFORUNIQUE) {
		return nil, false
	}
	return o.CHECKFORUNIQUE, true
}

// HasCHECKFORUNIQUE returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasCHECKFORUNIQUE() bool {
	if o != nil && !IsNil(o.CHECKFORUNIQUE) {
		return true
	}

	return false
}

// SetCHECKFORUNIQUE gets a reference to the given string and assigns it to the CHECKFORUNIQUE field.
func (o *ConnectionAttributes) SetCHECKFORUNIQUE(v string) {
	o.CHECKFORUNIQUE = &v
}

// GetConfigJSON returns the ConfigJSON field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetConfigJSON() string {
	if o == nil || IsNil(o.ConfigJSON) {
		var ret string
		return ret
	}
	return *o.ConfigJSON
}

// GetConfigJSONOk returns a tuple with the ConfigJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetConfigJSONOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigJSON) {
		return nil, false
	}
	return o.ConfigJSON, true
}

// HasConfigJSON returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasConfigJSON() bool {
	if o != nil && !IsNil(o.ConfigJSON) {
		return true
	}

	return false
}

// SetConfigJSON gets a reference to the given string and assigns it to the ConfigJSON field.
func (o *ConnectionAttributes) SetConfigJSON(v string) {
	o.ConfigJSON = &v
}

// GetCONNECTOR_FILE_PATH returns the CONNECTOR_FILE_PATH field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetCONNECTOR_FILE_PATH() string {
	if o == nil || IsNil(o.CONNECTOR_FILE_PATH) {
		var ret string
		return ret
	}
	return *o.CONNECTOR_FILE_PATH
}

// GetCONNECTOR_FILE_PATHOk returns a tuple with the CONNECTOR_FILE_PATH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetCONNECTOR_FILE_PATHOk() (*string, bool) {
	if o == nil || IsNil(o.CONNECTOR_FILE_PATH) {
		return nil, false
	}
	return o.CONNECTOR_FILE_PATH, true
}

// HasCONNECTOR_FILE_PATH returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasCONNECTOR_FILE_PATH() bool {
	if o != nil && !IsNil(o.CONNECTOR_FILE_PATH) {
		return true
	}

	return false
}

// SetCONNECTOR_FILE_PATH gets a reference to the given string and assigns it to the CONNECTOR_FILE_PATH field.
func (o *ConnectionAttributes) SetCONNECTOR_FILE_PATH(v string) {
	o.CONNECTOR_FILE_PATH = &v
}

// GetCREATEACCOUNTJSON returns the CREATEACCOUNTJSON field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetCREATEACCOUNTJSON() string {
	if o == nil || IsNil(o.CREATEACCOUNTJSON) {
		var ret string
		return ret
	}
	return *o.CREATEACCOUNTJSON
}

// GetCREATEACCOUNTJSONOk returns a tuple with the CREATEACCOUNTJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetCREATEACCOUNTJSONOk() (*string, bool) {
	if o == nil || IsNil(o.CREATEACCOUNTJSON) {
		return nil, false
	}
	return o.CREATEACCOUNTJSON, true
}

// HasCREATEACCOUNTJSON returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasCREATEACCOUNTJSON() bool {
	if o != nil && !IsNil(o.CREATEACCOUNTJSON) {
		return true
	}

	return false
}

// SetCREATEACCOUNTJSON gets a reference to the given string and assigns it to the CREATEACCOUNTJSON field.
func (o *ConnectionAttributes) SetCREATEACCOUNTJSON(v string) {
	o.CREATEACCOUNTJSON = &v
}

// GetCREATEORGJSON returns the CREATEORGJSON field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetCREATEORGJSON() string {
	if o == nil || IsNil(o.CREATEORGJSON) {
		var ret string
		return ret
	}
	return *o.CREATEORGJSON
}

// GetCREATEORGJSONOk returns a tuple with the CREATEORGJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetCREATEORGJSONOk() (*string, bool) {
	if o == nil || IsNil(o.CREATEORGJSON) {
		return nil, false
	}
	return o.CREATEORGJSON, true
}

// HasCREATEORGJSON returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasCREATEORGJSON() bool {
	if o != nil && !IsNil(o.CREATEORGJSON) {
		return true
	}

	return false
}

// SetCREATEORGJSON gets a reference to the given string and assigns it to the CREATEORGJSON field.
func (o *ConnectionAttributes) SetCREATEORGJSON(v string) {
	o.CREATEORGJSON = &v
}

// GetCUSTOM_ACCOUNT_ATTRIBUTES returns the CUSTOM_ACCOUNT_ATTRIBUTES field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetCUSTOM_ACCOUNT_ATTRIBUTES() string {
	if o == nil || IsNil(o.CUSTOM_ACCOUNT_ATTRIBUTES) {
		var ret string
		return ret
	}
	return *o.CUSTOM_ACCOUNT_ATTRIBUTES
}

// GetCUSTOM_ACCOUNT_ATTRIBUTESOk returns a tuple with the CUSTOM_ACCOUNT_ATTRIBUTES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetCUSTOM_ACCOUNT_ATTRIBUTESOk() (*string, bool) {
	if o == nil || IsNil(o.CUSTOM_ACCOUNT_ATTRIBUTES) {
		return nil, false
	}
	return o.CUSTOM_ACCOUNT_ATTRIBUTES, true
}

// HasCUSTOM_ACCOUNT_ATTRIBUTES returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasCUSTOM_ACCOUNT_ATTRIBUTES() bool {
	if o != nil && !IsNil(o.CUSTOM_ACCOUNT_ATTRIBUTES) {
		return true
	}

	return false
}

// SetCUSTOM_ACCOUNT_ATTRIBUTES gets a reference to the given string and assigns it to the CUSTOM_ACCOUNT_ATTRIBUTES field.
func (o *ConnectionAttributes) SetCUSTOM_ACCOUNT_ATTRIBUTES(v string) {
	o.CUSTOM_ACCOUNT_ATTRIBUTES = &v
}

// GetCUSTOMER_ID returns the CUSTOMER_ID field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetCUSTOMER_ID() string {
	if o == nil || IsNil(o.CUSTOMER_ID) {
		var ret string
		return ret
	}
	return *o.CUSTOMER_ID
}

// GetCUSTOMER_IDOk returns a tuple with the CUSTOMER_ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetCUSTOMER_IDOk() (*string, bool) {
	if o == nil || IsNil(o.CUSTOMER_ID) {
		return nil, false
	}
	return o.CUSTOMER_ID, true
}

// HasCUSTOMER_ID returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasCUSTOMER_ID() bool {
	if o != nil && !IsNil(o.CUSTOMER_ID) {
		return true
	}

	return false
}

// SetCUSTOMER_ID gets a reference to the given string and assigns it to the CUSTOMER_ID field.
func (o *ConnectionAttributes) SetCUSTOMER_ID(v string) {
	o.CUSTOMER_ID = &v
}

// GetDC_LOCATOR returns the DC_LOCATOR field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetDC_LOCATOR() string {
	if o == nil || IsNil(o.DC_LOCATOR) {
		var ret string
		return ret
	}
	return *o.DC_LOCATOR
}

// GetDC_LOCATOROk returns a tuple with the DC_LOCATOR field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetDC_LOCATOROk() (*string, bool) {
	if o == nil || IsNil(o.DC_LOCATOR) {
		return nil, false
	}
	return o.DC_LOCATOR, true
}

// HasDC_LOCATOR returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasDC_LOCATOR() bool {
	if o != nil && !IsNil(o.DC_LOCATOR) {
		return true
	}

	return false
}

// SetDC_LOCATOR gets a reference to the given string and assigns it to the DC_LOCATOR field.
func (o *ConnectionAttributes) SetDC_LOCATOR(v string) {
	o.DC_LOCATOR = &v
}

// GetDEFAULT_USER_ROLE returns the DEFAULT_USER_ROLE field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetDEFAULT_USER_ROLE() string {
	if o == nil || IsNil(o.DEFAULT_USER_ROLE) {
		var ret string
		return ret
	}
	return *o.DEFAULT_USER_ROLE
}

// GetDEFAULT_USER_ROLEOk returns a tuple with the DEFAULT_USER_ROLE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetDEFAULT_USER_ROLEOk() (*string, bool) {
	if o == nil || IsNil(o.DEFAULT_USER_ROLE) {
		return nil, false
	}
	return o.DEFAULT_USER_ROLE, true
}

// HasDEFAULT_USER_ROLE returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasDEFAULT_USER_ROLE() bool {
	if o != nil && !IsNil(o.DEFAULT_USER_ROLE) {
		return true
	}

	return false
}

// SetDEFAULT_USER_ROLE gets a reference to the given string and assigns it to the DEFAULT_USER_ROLE field.
func (o *ConnectionAttributes) SetDEFAULT_USER_ROLE(v string) {
	o.DEFAULT_USER_ROLE = &v
}

// GetDISABLEACCOUNTJSON returns the DISABLEACCOUNTJSON field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetDISABLEACCOUNTJSON() string {
	if o == nil || IsNil(o.DISABLEACCOUNTJSON) {
		var ret string
		return ret
	}
	return *o.DISABLEACCOUNTJSON
}

// GetDISABLEACCOUNTJSONOk returns a tuple with the DISABLEACCOUNTJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetDISABLEACCOUNTJSONOk() (*string, bool) {
	if o == nil || IsNil(o.DISABLEACCOUNTJSON) {
		return nil, false
	}
	return o.DISABLEACCOUNTJSON, true
}

// HasDISABLEACCOUNTJSON returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasDISABLEACCOUNTJSON() bool {
	if o != nil && !IsNil(o.DISABLEACCOUNTJSON) {
		return true
	}

	return false
}

// SetDISABLEACCOUNTJSON gets a reference to the given string and assigns it to the DISABLEACCOUNTJSON field.
func (o *ConnectionAttributes) SetDISABLEACCOUNTJSON(v string) {
	o.DISABLEACCOUNTJSON = &v
}

// GetENABLEACCOUNTJSON returns the ENABLEACCOUNTJSON field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetENABLEACCOUNTJSON() string {
	if o == nil || IsNil(o.ENABLEACCOUNTJSON) {
		var ret string
		return ret
	}
	return *o.ENABLEACCOUNTJSON
}

// GetENABLEACCOUNTJSONOk returns a tuple with the ENABLEACCOUNTJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetENABLEACCOUNTJSONOk() (*string, bool) {
	if o == nil || IsNil(o.ENABLEACCOUNTJSON) {
		return nil, false
	}
	return o.ENABLEACCOUNTJSON, true
}

// HasENABLEACCOUNTJSON returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasENABLEACCOUNTJSON() bool {
	if o != nil && !IsNil(o.ENABLEACCOUNTJSON) {
		return true
	}

	return false
}

// SetENABLEACCOUNTJSON gets a reference to the given string and assigns it to the ENABLEACCOUNTJSON field.
func (o *ConnectionAttributes) SetENABLEACCOUNTJSON(v string) {
	o.ENABLEACCOUNTJSON = &v
}

// GetENABLEGROUPMANAGEMENT returns the ENABLEGROUPMANAGEMENT field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetENABLEGROUPMANAGEMENT() string {
	if o == nil || IsNil(o.ENABLEGROUPMANAGEMENT) {
		var ret string
		return ret
	}
	return *o.ENABLEGROUPMANAGEMENT
}

// GetENABLEGROUPMANAGEMENTOk returns a tuple with the ENABLEGROUPMANAGEMENT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetENABLEGROUPMANAGEMENTOk() (*string, bool) {
	if o == nil || IsNil(o.ENABLEGROUPMANAGEMENT) {
		return nil, false
	}
	return o.ENABLEGROUPMANAGEMENT, true
}

// HasENABLEGROUPMANAGEMENT returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasENABLEGROUPMANAGEMENT() bool {
	if o != nil && !IsNil(o.ENABLEGROUPMANAGEMENT) {
		return true
	}

	return false
}

// SetENABLEGROUPMANAGEMENT gets a reference to the given string and assigns it to the ENABLEGROUPMANAGEMENT field.
func (o *ConnectionAttributes) SetENABLEGROUPMANAGEMENT(v string) {
	o.ENABLEGROUPMANAGEMENT = &v
}

// GetENDPOINTS_FILTER returns the ENDPOINTS_FILTER field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetENDPOINTS_FILTER() string {
	if o == nil || IsNil(o.ENDPOINTS_FILTER) {
		var ret string
		return ret
	}
	return *o.ENDPOINTS_FILTER
}

// GetENDPOINTS_FILTEROk returns a tuple with the ENDPOINTS_FILTER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetENDPOINTS_FILTEROk() (*string, bool) {
	if o == nil || IsNil(o.ENDPOINTS_FILTER) {
		return nil, false
	}
	return o.ENDPOINTS_FILTER, true
}

// HasENDPOINTS_FILTER returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasENDPOINTS_FILTER() bool {
	if o != nil && !IsNil(o.ENDPOINTS_FILTER) {
		return true
	}

	return false
}

// SetENDPOINTS_FILTER gets a reference to the given string and assigns it to the ENDPOINTS_FILTER field.
func (o *ConnectionAttributes) SetENDPOINTS_FILTER(v string) {
	o.ENDPOINTS_FILTER = &v
}

// GetENFORCE_TREE_DELETION returns the ENFORCE_TREE_DELETION field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetENFORCE_TREE_DELETION() string {
	if o == nil || IsNil(o.ENFORCE_TREE_DELETION) {
		var ret string
		return ret
	}
	return *o.ENFORCE_TREE_DELETION
}

// GetENFORCE_TREE_DELETIONOk returns a tuple with the ENFORCE_TREE_DELETION field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetENFORCE_TREE_DELETIONOk() (*string, bool) {
	if o == nil || IsNil(o.ENFORCE_TREE_DELETION) {
		return nil, false
	}
	return o.ENFORCE_TREE_DELETION, true
}

// HasENFORCE_TREE_DELETION returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasENFORCE_TREE_DELETION() bool {
	if o != nil && !IsNil(o.ENFORCE_TREE_DELETION) {
		return true
	}

	return false
}

// SetENFORCE_TREE_DELETION gets a reference to the given string and assigns it to the ENFORCE_TREE_DELETION field.
func (o *ConnectionAttributes) SetENFORCE_TREE_DELETION(v string) {
	o.ENFORCE_TREE_DELETION = &v
}

// GetENTITLEMENT_ATTRIBUTE returns the ENTITLEMENT_ATTRIBUTE field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetENTITLEMENT_ATTRIBUTE() string {
	if o == nil || IsNil(o.ENTITLEMENT_ATTRIBUTE) {
		var ret string
		return ret
	}
	return *o.ENTITLEMENT_ATTRIBUTE
}

// GetENTITLEMENT_ATTRIBUTEOk returns a tuple with the ENTITLEMENT_ATTRIBUTE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetENTITLEMENT_ATTRIBUTEOk() (*string, bool) {
	if o == nil || IsNil(o.ENTITLEMENT_ATTRIBUTE) {
		return nil, false
	}
	return o.ENTITLEMENT_ATTRIBUTE, true
}

// HasENTITLEMENT_ATTRIBUTE returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasENTITLEMENT_ATTRIBUTE() bool {
	if o != nil && !IsNil(o.ENTITLEMENT_ATTRIBUTE) {
		return true
	}

	return false
}

// SetENTITLEMENT_ATTRIBUTE gets a reference to the given string and assigns it to the ENTITLEMENT_ATTRIBUTE field.
func (o *ConnectionAttributes) SetENTITLEMENT_ATTRIBUTE(v string) {
	o.ENTITLEMENT_ATTRIBUTE = &v
}

// GetFILEFOLDER_ATTRIBUTES returns the FILEFOLDER_ATTRIBUTES field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetFILEFOLDER_ATTRIBUTES() string {
	if o == nil || IsNil(o.FILEFOLDER_ATTRIBUTES) {
		var ret string
		return ret
	}
	return *o.FILEFOLDER_ATTRIBUTES
}

// GetFILEFOLDER_ATTRIBUTESOk returns a tuple with the FILEFOLDER_ATTRIBUTES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetFILEFOLDER_ATTRIBUTESOk() (*string, bool) {
	if o == nil || IsNil(o.FILEFOLDER_ATTRIBUTES) {
		return nil, false
	}
	return o.FILEFOLDER_ATTRIBUTES, true
}

// HasFILEFOLDER_ATTRIBUTES returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasFILEFOLDER_ATTRIBUTES() bool {
	if o != nil && !IsNil(o.FILEFOLDER_ATTRIBUTES) {
		return true
	}

	return false
}

// SetFILEFOLDER_ATTRIBUTES gets a reference to the given string and assigns it to the FILEFOLDER_ATTRIBUTES field.
func (o *ConnectionAttributes) SetFILEFOLDER_ATTRIBUTES(v string) {
	o.FILEFOLDER_ATTRIBUTES = &v
}

// GetFILTER returns the FILTER field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetFILTER() string {
	if o == nil || IsNil(o.FILTER) {
		var ret string
		return ret
	}
	return *o.FILTER
}

// GetFILTEROk returns a tuple with the FILTER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetFILTEROk() (*string, bool) {
	if o == nil || IsNil(o.FILTER) {
		return nil, false
	}
	return o.FILTER, true
}

// HasFILTER returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasFILTER() bool {
	if o != nil && !IsNil(o.FILTER) {
		return true
	}

	return false
}

// SetFILTER gets a reference to the given string and assigns it to the FILTER field.
func (o *ConnectionAttributes) SetFILTER(v string) {
	o.FILTER = &v
}

// GetGROUP_ATTRIBUTES returns the GROUP_ATTRIBUTES field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetGROUP_ATTRIBUTES() string {
	if o == nil || IsNil(o.GROUP_ATTRIBUTES) {
		var ret string
		return ret
	}
	return *o.GROUP_ATTRIBUTES
}

// GetGROUP_ATTRIBUTESOk returns a tuple with the GROUP_ATTRIBUTES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetGROUP_ATTRIBUTESOk() (*string, bool) {
	if o == nil || IsNil(o.GROUP_ATTRIBUTES) {
		return nil, false
	}
	return o.GROUP_ATTRIBUTES, true
}

// HasGROUP_ATTRIBUTES returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasGROUP_ATTRIBUTES() bool {
	if o != nil && !IsNil(o.GROUP_ATTRIBUTES) {
		return true
	}

	return false
}

// SetGROUP_ATTRIBUTES gets a reference to the given string and assigns it to the GROUP_ATTRIBUTES field.
func (o *ConnectionAttributes) SetGROUP_ATTRIBUTES(v string) {
	o.GROUP_ATTRIBUTES = &v
}

// GetIMPORT_USERS returns the IMPORT_USERS field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetIMPORT_USERS() string {
	if o == nil || IsNil(o.IMPORT_USERS) {
		var ret string
		return ret
	}
	return *o.IMPORT_USERS
}

// GetIMPORT_USERSOk returns a tuple with the IMPORT_USERS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetIMPORT_USERSOk() (*string, bool) {
	if o == nil || IsNil(o.IMPORT_USERS) {
		return nil, false
	}
	return o.IMPORT_USERS, true
}

// HasIMPORT_USERS returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasIMPORT_USERS() bool {
	if o != nil && !IsNil(o.IMPORT_USERS) {
		return true
	}

	return false
}

// SetIMPORT_USERS gets a reference to the given string and assigns it to the IMPORT_USERS field.
func (o *ConnectionAttributes) SetIMPORT_USERS(v string) {
	o.IMPORT_USERS = &v
}

// GetIMPORTJSON returns the IMPORTJSON field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetIMPORTJSON() string {
	if o == nil || IsNil(o.IMPORTJSON) {
		var ret string
		return ret
	}
	return *o.IMPORTJSON
}

// GetIMPORTJSONOk returns a tuple with the IMPORTJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetIMPORTJSONOk() (*string, bool) {
	if o == nil || IsNil(o.IMPORTJSON) {
		return nil, false
	}
	return o.IMPORTJSON, true
}

// HasIMPORTJSON returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasIMPORTJSON() bool {
	if o != nil && !IsNil(o.IMPORTJSON) {
		return true
	}

	return false
}

// SetIMPORTJSON gets a reference to the given string and assigns it to the IMPORTJSON field.
func (o *ConnectionAttributes) SetIMPORTJSON(v string) {
	o.IMPORTJSON = &v
}

// GetINCREMENTAL_CONFIG returns the INCREMENTAL_CONFIG field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetINCREMENTAL_CONFIG() string {
	if o == nil || IsNil(o.INCREMENTAL_CONFIG) {
		var ret string
		return ret
	}
	return *o.INCREMENTAL_CONFIG
}

// GetINCREMENTAL_CONFIGOk returns a tuple with the INCREMENTAL_CONFIG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetINCREMENTAL_CONFIGOk() (*string, bool) {
	if o == nil || IsNil(o.INCREMENTAL_CONFIG) {
		return nil, false
	}
	return o.INCREMENTAL_CONFIG, true
}

// HasINCREMENTAL_CONFIG returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasINCREMENTAL_CONFIG() bool {
	if o != nil && !IsNil(o.INCREMENTAL_CONFIG) {
		return true
	}

	return false
}

// SetINCREMENTAL_CONFIG gets a reference to the given string and assigns it to the INCREMENTAL_CONFIG field.
func (o *ConnectionAttributes) SetINCREMENTAL_CONFIG(v string) {
	o.INCREMENTAL_CONFIG = &v
}

// GetLAST_IMPORT_TIME returns the LAST_IMPORT_TIME field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetLAST_IMPORT_TIME() string {
	if o == nil || IsNil(o.LAST_IMPORT_TIME) {
		var ret string
		return ret
	}
	return *o.LAST_IMPORT_TIME
}

// GetLAST_IMPORT_TIMEOk returns a tuple with the LAST_IMPORT_TIME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetLAST_IMPORT_TIMEOk() (*string, bool) {
	if o == nil || IsNil(o.LAST_IMPORT_TIME) {
		return nil, false
	}
	return o.LAST_IMPORT_TIME, true
}

// HasLAST_IMPORT_TIME returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasLAST_IMPORT_TIME() bool {
	if o != nil && !IsNil(o.LAST_IMPORT_TIME) {
		return true
	}

	return false
}

// SetLAST_IMPORT_TIME gets a reference to the given string and assigns it to the LAST_IMPORT_TIME field.
func (o *ConnectionAttributes) SetLAST_IMPORT_TIME(v string) {
	o.LAST_IMPORT_TIME = &v
}

// GetLDAP_OR_AD returns the LDAP_OR_AD field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetLDAP_OR_AD() string {
	if o == nil || IsNil(o.LDAP_OR_AD) {
		var ret string
		return ret
	}
	return *o.LDAP_OR_AD
}

// GetLDAP_OR_ADOk returns a tuple with the LDAP_OR_AD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetLDAP_OR_ADOk() (*string, bool) {
	if o == nil || IsNil(o.LDAP_OR_AD) {
		return nil, false
	}
	return o.LDAP_OR_AD, true
}

// HasLDAP_OR_AD returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasLDAP_OR_AD() bool {
	if o != nil && !IsNil(o.LDAP_OR_AD) {
		return true
	}

	return false
}

// SetLDAP_OR_AD gets a reference to the given string and assigns it to the LDAP_OR_AD field.
func (o *ConnectionAttributes) SetLDAP_OR_AD(v string) {
	o.LDAP_OR_AD = &v
}

// GetMAX_CHANGENUMBER returns the MAX_CHANGENUMBER field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetMAX_CHANGENUMBER() string {
	if o == nil || IsNil(o.MAX_CHANGENUMBER) {
		var ret string
		return ret
	}
	return *o.MAX_CHANGENUMBER
}

// GetMAX_CHANGENUMBEROk returns a tuple with the MAX_CHANGENUMBER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetMAX_CHANGENUMBEROk() (*string, bool) {
	if o == nil || IsNil(o.MAX_CHANGENUMBER) {
		return nil, false
	}
	return o.MAX_CHANGENUMBER, true
}

// HasMAX_CHANGENUMBER returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasMAX_CHANGENUMBER() bool {
	if o != nil && !IsNil(o.MAX_CHANGENUMBER) {
		return true
	}

	return false
}

// SetMAX_CHANGENUMBER gets a reference to the given string and assigns it to the MAX_CHANGENUMBER field.
func (o *ConnectionAttributes) SetMAX_CHANGENUMBER(v string) {
	o.MAX_CHANGENUMBER = &v
}

// GetMKTPLACEAPP_ATTRIBUTES returns the MKTPLACEAPP_ATTRIBUTES field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetMKTPLACEAPP_ATTRIBUTES() string {
	if o == nil || IsNil(o.MKTPLACEAPP_ATTRIBUTES) {
		var ret string
		return ret
	}
	return *o.MKTPLACEAPP_ATTRIBUTES
}

// GetMKTPLACEAPP_ATTRIBUTESOk returns a tuple with the MKTPLACEAPP_ATTRIBUTES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetMKTPLACEAPP_ATTRIBUTESOk() (*string, bool) {
	if o == nil || IsNil(o.MKTPLACEAPP_ATTRIBUTES) {
		return nil, false
	}
	return o.MKTPLACEAPP_ATTRIBUTES, true
}

// HasMKTPLACEAPP_ATTRIBUTES returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasMKTPLACEAPP_ATTRIBUTES() bool {
	if o != nil && !IsNil(o.MKTPLACEAPP_ATTRIBUTES) {
		return true
	}

	return false
}

// SetMKTPLACEAPP_ATTRIBUTES gets a reference to the given string and assigns it to the MKTPLACEAPP_ATTRIBUTES field.
func (o *ConnectionAttributes) SetMKTPLACEAPP_ATTRIBUTES(v string) {
	o.MKTPLACEAPP_ATTRIBUTES = &v
}

// GetMODIFYUSERDATAJSON returns the MODIFYUSERDATAJSON field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetMODIFYUSERDATAJSON() string {
	if o == nil || IsNil(o.MODIFYUSERDATAJSON) {
		var ret string
		return ret
	}
	return *o.MODIFYUSERDATAJSON
}

// GetMODIFYUSERDATAJSONOk returns a tuple with the MODIFYUSERDATAJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetMODIFYUSERDATAJSONOk() (*string, bool) {
	if o == nil || IsNil(o.MODIFYUSERDATAJSON) {
		return nil, false
	}
	return o.MODIFYUSERDATAJSON, true
}

// HasMODIFYUSERDATAJSON returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasMODIFYUSERDATAJSON() bool {
	if o != nil && !IsNil(o.MODIFYUSERDATAJSON) {
		return true
	}

	return false
}

// SetMODIFYUSERDATAJSON gets a reference to the given string and assigns it to the MODIFYUSERDATAJSON field.
func (o *ConnectionAttributes) SetMODIFYUSERDATAJSON(v string) {
	o.MODIFYUSERDATAJSON = &v
}

// GetOBJECTFILTER returns the OBJECTFILTER field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetOBJECTFILTER() string {
	if o == nil || IsNil(o.OBJECTFILTER) {
		var ret string
		return ret
	}
	return *o.OBJECTFILTER
}

// GetOBJECTFILTEROk returns a tuple with the OBJECTFILTER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetOBJECTFILTEROk() (*string, bool) {
	if o == nil || IsNil(o.OBJECTFILTER) {
		return nil, false
	}
	return o.OBJECTFILTER, true
}

// HasOBJECTFILTER returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasOBJECTFILTER() bool {
	if o != nil && !IsNil(o.OBJECTFILTER) {
		return true
	}

	return false
}

// SetOBJECTFILTER gets a reference to the given string and assigns it to the OBJECTFILTER field.
func (o *ConnectionAttributes) SetOBJECTFILTER(v string) {
	o.OBJECTFILTER = &v
}

// GetORG_BASE returns the ORG_BASE field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetORG_BASE() string {
	if o == nil || IsNil(o.ORG_BASE) {
		var ret string
		return ret
	}
	return *o.ORG_BASE
}

// GetORG_BASEOk returns a tuple with the ORG_BASE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetORG_BASEOk() (*string, bool) {
	if o == nil || IsNil(o.ORG_BASE) {
		return nil, false
	}
	return o.ORG_BASE, true
}

// HasORG_BASE returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasORG_BASE() bool {
	if o != nil && !IsNil(o.ORG_BASE) {
		return true
	}

	return false
}

// SetORG_BASE gets a reference to the given string and assigns it to the ORG_BASE field.
func (o *ConnectionAttributes) SetORG_BASE(v string) {
	o.ORG_BASE = &v
}

// GetORGANIZATION_ATTRIBUTE returns the ORGANIZATION_ATTRIBUTE field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetORGANIZATION_ATTRIBUTE() string {
	if o == nil || IsNil(o.ORGANIZATION_ATTRIBUTE) {
		var ret string
		return ret
	}
	return *o.ORGANIZATION_ATTRIBUTE
}

// GetORGANIZATION_ATTRIBUTEOk returns a tuple with the ORGANIZATION_ATTRIBUTE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetORGANIZATION_ATTRIBUTEOk() (*string, bool) {
	if o == nil || IsNil(o.ORGANIZATION_ATTRIBUTE) {
		return nil, false
	}
	return o.ORGANIZATION_ATTRIBUTE, true
}

// HasORGANIZATION_ATTRIBUTE returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasORGANIZATION_ATTRIBUTE() bool {
	if o != nil && !IsNil(o.ORGANIZATION_ATTRIBUTE) {
		return true
	}

	return false
}

// SetORGANIZATION_ATTRIBUTE gets a reference to the given string and assigns it to the ORGANIZATION_ATTRIBUTE field.
func (o *ConnectionAttributes) SetORGANIZATION_ATTRIBUTE(v string) {
	o.ORGANIZATION_ATTRIBUTE = &v
}

// GetORGIMPORTJSON returns the ORGIMPORTJSON field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetORGIMPORTJSON() string {
	if o == nil || IsNil(o.ORGIMPORTJSON) {
		var ret string
		return ret
	}
	return *o.ORGIMPORTJSON
}

// GetORGIMPORTJSONOk returns a tuple with the ORGIMPORTJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetORGIMPORTJSONOk() (*string, bool) {
	if o == nil || IsNil(o.ORGIMPORTJSON) {
		return nil, false
	}
	return o.ORGIMPORTJSON, true
}

// HasORGIMPORTJSON returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasORGIMPORTJSON() bool {
	if o != nil && !IsNil(o.ORGIMPORTJSON) {
		return true
	}

	return false
}

// SetORGIMPORTJSON gets a reference to the given string and assigns it to the ORGIMPORTJSON field.
func (o *ConnectionAttributes) SetORGIMPORTJSON(v string) {
	o.ORGIMPORTJSON = &v
}

// GetPAGE_SIZE returns the PAGE_SIZE field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetPAGE_SIZE() string {
	if o == nil || IsNil(o.PAGE_SIZE) {
		var ret string
		return ret
	}
	return *o.PAGE_SIZE
}

// GetPAGE_SIZEOk returns a tuple with the PAGE_SIZE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetPAGE_SIZEOk() (*string, bool) {
	if o == nil || IsNil(o.PAGE_SIZE) {
		return nil, false
	}
	return o.PAGE_SIZE, true
}

// HasPAGE_SIZE returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasPAGE_SIZE() bool {
	if o != nil && !IsNil(o.PAGE_SIZE) {
		return true
	}

	return false
}

// SetPAGE_SIZE gets a reference to the given string and assigns it to the PAGE_SIZE field.
func (o *ConnectionAttributes) SetPAGE_SIZE(v string) {
	o.PAGE_SIZE = &v
}

// GetPAM_CONFIG returns the PAM_CONFIG field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetPAM_CONFIG() string {
	if o == nil || IsNil(o.PAM_CONFIG) {
		var ret string
		return ret
	}
	return *o.PAM_CONFIG
}

// GetPAM_CONFIGOk returns a tuple with the PAM_CONFIG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetPAM_CONFIGOk() (*string, bool) {
	if o == nil || IsNil(o.PAM_CONFIG) {
		return nil, false
	}
	return o.PAM_CONFIG, true
}

// HasPAM_CONFIG returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasPAM_CONFIG() bool {
	if o != nil && !IsNil(o.PAM_CONFIG) {
		return true
	}

	return false
}

// SetPAM_CONFIG gets a reference to the given string and assigns it to the PAM_CONFIG field.
func (o *ConnectionAttributes) SetPAM_CONFIG(v string) {
	o.PAM_CONFIG = &v
}

// GetPASSWORD returns the PASSWORD field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetPASSWORD() string {
	if o == nil || IsNil(o.PASSWORD) {
		var ret string
		return ret
	}
	return *o.PASSWORD
}

// GetPASSWORDOk returns a tuple with the PASSWORD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetPASSWORDOk() (*string, bool) {
	if o == nil || IsNil(o.PASSWORD) {
		return nil, false
	}
	return o.PASSWORD, true
}

// HasPASSWORD returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasPASSWORD() bool {
	if o != nil && !IsNil(o.PASSWORD) {
		return true
	}

	return false
}

// SetPASSWORD gets a reference to the given string and assigns it to the PASSWORD field.
func (o *ConnectionAttributes) SetPASSWORD(v string) {
	o.PASSWORD = &v
}

// GetPASSWORD_MAX_LENGTH returns the PASSWORD_MAX_LENGTH field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetPASSWORD_MAX_LENGTH() string {
	if o == nil || IsNil(o.PASSWORD_MAX_LENGTH) {
		var ret string
		return ret
	}
	return *o.PASSWORD_MAX_LENGTH
}

// GetPASSWORD_MAX_LENGTHOk returns a tuple with the PASSWORD_MAX_LENGTH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetPASSWORD_MAX_LENGTHOk() (*string, bool) {
	if o == nil || IsNil(o.PASSWORD_MAX_LENGTH) {
		return nil, false
	}
	return o.PASSWORD_MAX_LENGTH, true
}

// HasPASSWORD_MAX_LENGTH returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasPASSWORD_MAX_LENGTH() bool {
	if o != nil && !IsNil(o.PASSWORD_MAX_LENGTH) {
		return true
	}

	return false
}

// SetPASSWORD_MAX_LENGTH gets a reference to the given string and assigns it to the PASSWORD_MAX_LENGTH field.
func (o *ConnectionAttributes) SetPASSWORD_MAX_LENGTH(v string) {
	o.PASSWORD_MAX_LENGTH = &v
}

// GetPASSWORD_MIN_LENGTH returns the PASSWORD_MIN_LENGTH field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetPASSWORD_MIN_LENGTH() string {
	if o == nil || IsNil(o.PASSWORD_MIN_LENGTH) {
		var ret string
		return ret
	}
	return *o.PASSWORD_MIN_LENGTH
}

// GetPASSWORD_MIN_LENGTHOk returns a tuple with the PASSWORD_MIN_LENGTH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetPASSWORD_MIN_LENGTHOk() (*string, bool) {
	if o == nil || IsNil(o.PASSWORD_MIN_LENGTH) {
		return nil, false
	}
	return o.PASSWORD_MIN_LENGTH, true
}

// HasPASSWORD_MIN_LENGTH returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasPASSWORD_MIN_LENGTH() bool {
	if o != nil && !IsNil(o.PASSWORD_MIN_LENGTH) {
		return true
	}

	return false
}

// SetPASSWORD_MIN_LENGTH gets a reference to the given string and assigns it to the PASSWORD_MIN_LENGTH field.
func (o *ConnectionAttributes) SetPASSWORD_MIN_LENGTH(v string) {
	o.PASSWORD_MIN_LENGTH = &v
}

// GetPASSWORD_NOOFCAPSALPHA returns the PASSWORD_NOOFCAPSALPHA field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetPASSWORD_NOOFCAPSALPHA() string {
	if o == nil || IsNil(o.PASSWORD_NOOFCAPSALPHA) {
		var ret string
		return ret
	}
	return *o.PASSWORD_NOOFCAPSALPHA
}

// GetPASSWORD_NOOFCAPSALPHAOk returns a tuple with the PASSWORD_NOOFCAPSALPHA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetPASSWORD_NOOFCAPSALPHAOk() (*string, bool) {
	if o == nil || IsNil(o.PASSWORD_NOOFCAPSALPHA) {
		return nil, false
	}
	return o.PASSWORD_NOOFCAPSALPHA, true
}

// HasPASSWORD_NOOFCAPSALPHA returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasPASSWORD_NOOFCAPSALPHA() bool {
	if o != nil && !IsNil(o.PASSWORD_NOOFCAPSALPHA) {
		return true
	}

	return false
}

// SetPASSWORD_NOOFCAPSALPHA gets a reference to the given string and assigns it to the PASSWORD_NOOFCAPSALPHA field.
func (o *ConnectionAttributes) SetPASSWORD_NOOFCAPSALPHA(v string) {
	o.PASSWORD_NOOFCAPSALPHA = &v
}

// GetPASSWORD_NOOFDIGITS returns the PASSWORD_NOOFDIGITS field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetPASSWORD_NOOFDIGITS() string {
	if o == nil || IsNil(o.PASSWORD_NOOFDIGITS) {
		var ret string
		return ret
	}
	return *o.PASSWORD_NOOFDIGITS
}

// GetPASSWORD_NOOFDIGITSOk returns a tuple with the PASSWORD_NOOFDIGITS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetPASSWORD_NOOFDIGITSOk() (*string, bool) {
	if o == nil || IsNil(o.PASSWORD_NOOFDIGITS) {
		return nil, false
	}
	return o.PASSWORD_NOOFDIGITS, true
}

// HasPASSWORD_NOOFDIGITS returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasPASSWORD_NOOFDIGITS() bool {
	if o != nil && !IsNil(o.PASSWORD_NOOFDIGITS) {
		return true
	}

	return false
}

// SetPASSWORD_NOOFDIGITS gets a reference to the given string and assigns it to the PASSWORD_NOOFDIGITS field.
func (o *ConnectionAttributes) SetPASSWORD_NOOFDIGITS(v string) {
	o.PASSWORD_NOOFDIGITS = &v
}

// GetPASSWORD_NOOFSPLCHARS returns the PASSWORD_NOOFSPLCHARS field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetPASSWORD_NOOFSPLCHARS() string {
	if o == nil || IsNil(o.PASSWORD_NOOFSPLCHARS) {
		var ret string
		return ret
	}
	return *o.PASSWORD_NOOFSPLCHARS
}

// GetPASSWORD_NOOFSPLCHARSOk returns a tuple with the PASSWORD_NOOFSPLCHARS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetPASSWORD_NOOFSPLCHARSOk() (*string, bool) {
	if o == nil || IsNil(o.PASSWORD_NOOFSPLCHARS) {
		return nil, false
	}
	return o.PASSWORD_NOOFSPLCHARS, true
}

// HasPASSWORD_NOOFSPLCHARS returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasPASSWORD_NOOFSPLCHARS() bool {
	if o != nil && !IsNil(o.PASSWORD_NOOFSPLCHARS) {
		return true
	}

	return false
}

// SetPASSWORD_NOOFSPLCHARS gets a reference to the given string and assigns it to the PASSWORD_NOOFSPLCHARS field.
func (o *ConnectionAttributes) SetPASSWORD_NOOFSPLCHARS(v string) {
	o.PASSWORD_NOOFSPLCHARS = &v
}

// GetQUARANTINE_FOLDER_ID returns the QUARANTINE_FOLDER_ID field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetQUARANTINE_FOLDER_ID() string {
	if o == nil || IsNil(o.QUARANTINE_FOLDER_ID) {
		var ret string
		return ret
	}
	return *o.QUARANTINE_FOLDER_ID
}

// GetQUARANTINE_FOLDER_IDOk returns a tuple with the QUARANTINE_FOLDER_ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetQUARANTINE_FOLDER_IDOk() (*string, bool) {
	if o == nil || IsNil(o.QUARANTINE_FOLDER_ID) {
		return nil, false
	}
	return o.QUARANTINE_FOLDER_ID, true
}

// HasQUARANTINE_FOLDER_ID returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasQUARANTINE_FOLDER_ID() bool {
	if o != nil && !IsNil(o.QUARANTINE_FOLDER_ID) {
		return true
	}

	return false
}

// SetQUARANTINE_FOLDER_ID gets a reference to the given string and assigns it to the QUARANTINE_FOLDER_ID field.
func (o *ConnectionAttributes) SetQUARANTINE_FOLDER_ID(v string) {
	o.QUARANTINE_FOLDER_ID = &v
}

// GetREAD_OPERATIONAL_ATTRIBUTES returns the READ_OPERATIONAL_ATTRIBUTES field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetREAD_OPERATIONAL_ATTRIBUTES() string {
	if o == nil || IsNil(o.READ_OPERATIONAL_ATTRIBUTES) {
		var ret string
		return ret
	}
	return *o.READ_OPERATIONAL_ATTRIBUTES
}

// GetREAD_OPERATIONAL_ATTRIBUTESOk returns a tuple with the READ_OPERATIONAL_ATTRIBUTES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetREAD_OPERATIONAL_ATTRIBUTESOk() (*string, bool) {
	if o == nil || IsNil(o.READ_OPERATIONAL_ATTRIBUTES) {
		return nil, false
	}
	return o.READ_OPERATIONAL_ATTRIBUTES, true
}

// HasREAD_OPERATIONAL_ATTRIBUTES returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasREAD_OPERATIONAL_ATTRIBUTES() bool {
	if o != nil && !IsNil(o.READ_OPERATIONAL_ATTRIBUTES) {
		return true
	}

	return false
}

// SetREAD_OPERATIONAL_ATTRIBUTES gets a reference to the given string and assigns it to the READ_OPERATIONAL_ATTRIBUTES field.
func (o *ConnectionAttributes) SetREAD_OPERATIONAL_ATTRIBUTES(v string) {
	o.READ_OPERATIONAL_ATTRIBUTES = &v
}

// GetREMOVEACCOUNTACTION returns the REMOVEACCOUNTACTION field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetREMOVEACCOUNTACTION() string {
	if o == nil || IsNil(o.REMOVEACCOUNTACTION) {
		var ret string
		return ret
	}
	return *o.REMOVEACCOUNTACTION
}

// GetREMOVEACCOUNTACTIONOk returns a tuple with the REMOVEACCOUNTACTION field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetREMOVEACCOUNTACTIONOk() (*string, bool) {
	if o == nil || IsNil(o.REMOVEACCOUNTACTION) {
		return nil, false
	}
	return o.REMOVEACCOUNTACTION, true
}

// HasREMOVEACCOUNTACTION returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasREMOVEACCOUNTACTION() bool {
	if o != nil && !IsNil(o.REMOVEACCOUNTACTION) {
		return true
	}

	return false
}

// SetREMOVEACCOUNTACTION gets a reference to the given string and assigns it to the REMOVEACCOUNTACTION field.
func (o *ConnectionAttributes) SetREMOVEACCOUNTACTION(v string) {
	o.REMOVEACCOUNTACTION = &v
}

// GetRESETANDCHANGEPASSWRDJSON returns the RESETANDCHANGEPASSWRDJSON field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetRESETANDCHANGEPASSWRDJSON() string {
	if o == nil || IsNil(o.RESETANDCHANGEPASSWRDJSON) {
		var ret string
		return ret
	}
	return *o.RESETANDCHANGEPASSWRDJSON
}

// GetRESETANDCHANGEPASSWRDJSONOk returns a tuple with the RESETANDCHANGEPASSWRDJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetRESETANDCHANGEPASSWRDJSONOk() (*string, bool) {
	if o == nil || IsNil(o.RESETANDCHANGEPASSWRDJSON) {
		return nil, false
	}
	return o.RESETANDCHANGEPASSWRDJSON, true
}

// HasRESETANDCHANGEPASSWRDJSON returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasRESETANDCHANGEPASSWRDJSON() bool {
	if o != nil && !IsNil(o.RESETANDCHANGEPASSWRDJSON) {
		return true
	}

	return false
}

// SetRESETANDCHANGEPASSWRDJSON gets a reference to the given string and assigns it to the RESETANDCHANGEPASSWRDJSON field.
func (o *ConnectionAttributes) SetRESETANDCHANGEPASSWRDJSON(v string) {
	o.RESETANDCHANGEPASSWRDJSON = &v
}

// GetREUSEACCOUNTJSON returns the REUSEACCOUNTJSON field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetREUSEACCOUNTJSON() string {
	if o == nil || IsNil(o.REUSEACCOUNTJSON) {
		var ret string
		return ret
	}
	return *o.REUSEACCOUNTJSON
}

// GetREUSEACCOUNTJSONOk returns a tuple with the REUSEACCOUNTJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetREUSEACCOUNTJSONOk() (*string, bool) {
	if o == nil || IsNil(o.REUSEACCOUNTJSON) {
		return nil, false
	}
	return o.REUSEACCOUNTJSON, true
}

// HasREUSEACCOUNTJSON returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasREUSEACCOUNTJSON() bool {
	if o != nil && !IsNil(o.REUSEACCOUNTJSON) {
		return true
	}

	return false
}

// SetREUSEACCOUNTJSON gets a reference to the given string and assigns it to the REUSEACCOUNTJSON field.
func (o *ConnectionAttributes) SetREUSEACCOUNTJSON(v string) {
	o.REUSEACCOUNTJSON = &v
}

// GetREUSEINACTIVEACCOUNT returns the REUSEINACTIVEACCOUNT field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetREUSEINACTIVEACCOUNT() string {
	if o == nil || IsNil(o.REUSEINACTIVEACCOUNT) {
		var ret string
		return ret
	}
	return *o.REUSEINACTIVEACCOUNT
}

// GetREUSEINACTIVEACCOUNTOk returns a tuple with the REUSEINACTIVEACCOUNT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetREUSEINACTIVEACCOUNTOk() (*string, bool) {
	if o == nil || IsNil(o.REUSEINACTIVEACCOUNT) {
		return nil, false
	}
	return o.REUSEINACTIVEACCOUNT, true
}

// HasREUSEINACTIVEACCOUNT returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasREUSEINACTIVEACCOUNT() bool {
	if o != nil && !IsNil(o.REUSEINACTIVEACCOUNT) {
		return true
	}

	return false
}

// SetREUSEINACTIVEACCOUNT gets a reference to the given string and assigns it to the REUSEINACTIVEACCOUNT field.
func (o *ConnectionAttributes) SetREUSEINACTIVEACCOUNT(v string) {
	o.REUSEINACTIVEACCOUNT = &v
}

// GetSCOPES returns the SCOPES field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetSCOPES() string {
	if o == nil || IsNil(o.SCOPES) {
		var ret string
		return ret
	}
	return *o.SCOPES
}

// GetSCOPESOk returns a tuple with the SCOPES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetSCOPESOk() (*string, bool) {
	if o == nil || IsNil(o.SCOPES) {
		return nil, false
	}
	return o.SCOPES, true
}

// HasSCOPES returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasSCOPES() bool {
	if o != nil && !IsNil(o.SCOPES) {
		return true
	}

	return false
}

// SetSCOPES gets a reference to the given string and assigns it to the SCOPES field.
func (o *ConnectionAttributes) SetSCOPES(v string) {
	o.SCOPES = &v
}

// GetSEARCHFILTER returns the SEARCHFILTER field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetSEARCHFILTER() string {
	if o == nil || IsNil(o.SEARCHFILTER) {
		var ret string
		return ret
	}
	return *o.SEARCHFILTER
}

// GetSEARCHFILTEROk returns a tuple with the SEARCHFILTER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetSEARCHFILTEROk() (*string, bool) {
	if o == nil || IsNil(o.SEARCHFILTER) {
		return nil, false
	}
	return o.SEARCHFILTER, true
}

// HasSEARCHFILTER returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasSEARCHFILTER() bool {
	if o != nil && !IsNil(o.SEARCHFILTER) {
		return true
	}

	return false
}

// SetSEARCHFILTER gets a reference to the given string and assigns it to the SEARCHFILTER field.
func (o *ConnectionAttributes) SetSEARCHFILTER(v string) {
	o.SEARCHFILTER = &v
}

// GetSERVICE_ACCOUNT_ID returns the SERVICE_ACCOUNT_ID field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetSERVICE_ACCOUNT_ID() string {
	if o == nil || IsNil(o.SERVICE_ACCOUNT_ID) {
		var ret string
		return ret
	}
	return *o.SERVICE_ACCOUNT_ID
}

// GetSERVICE_ACCOUNT_IDOk returns a tuple with the SERVICE_ACCOUNT_ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetSERVICE_ACCOUNT_IDOk() (*string, bool) {
	if o == nil || IsNil(o.SERVICE_ACCOUNT_ID) {
		return nil, false
	}
	return o.SERVICE_ACCOUNT_ID, true
}

// HasSERVICE_ACCOUNT_ID returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasSERVICE_ACCOUNT_ID() bool {
	if o != nil && !IsNil(o.SERVICE_ACCOUNT_ID) {
		return true
	}

	return false
}

// SetSERVICE_ACCOUNT_ID gets a reference to the given string and assigns it to the SERVICE_ACCOUNT_ID field.
func (o *ConnectionAttributes) SetSERVICE_ACCOUNT_ID(v string) {
	o.SERVICE_ACCOUNT_ID = &v
}

// GetSERVICE_ACCOUNT_KEY_JSON returns the SERVICE_ACCOUNT_KEY_JSON field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetSERVICE_ACCOUNT_KEY_JSON() string {
	if o == nil || IsNil(o.SERVICE_ACCOUNT_KEY_JSON) {
		var ret string
		return ret
	}
	return *o.SERVICE_ACCOUNT_KEY_JSON
}

// GetSERVICE_ACCOUNT_KEY_JSONOk returns a tuple with the SERVICE_ACCOUNT_KEY_JSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetSERVICE_ACCOUNT_KEY_JSONOk() (*string, bool) {
	if o == nil || IsNil(o.SERVICE_ACCOUNT_KEY_JSON) {
		return nil, false
	}
	return o.SERVICE_ACCOUNT_KEY_JSON, true
}

// HasSERVICE_ACCOUNT_KEY_JSON returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasSERVICE_ACCOUNT_KEY_JSON() bool {
	if o != nil && !IsNil(o.SERVICE_ACCOUNT_KEY_JSON) {
		return true
	}

	return false
}

// SetSERVICE_ACCOUNT_KEY_JSON gets a reference to the given string and assigns it to the SERVICE_ACCOUNT_KEY_JSON field.
func (o *ConnectionAttributes) SetSERVICE_ACCOUNT_KEY_JSON(v string) {
	o.SERVICE_ACCOUNT_KEY_JSON = &v
}

// GetSERVICE_ACCOUNT_USER returns the SERVICE_ACCOUNT_USER field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetSERVICE_ACCOUNT_USER() string {
	if o == nil || IsNil(o.SERVICE_ACCOUNT_USER) {
		var ret string
		return ret
	}
	return *o.SERVICE_ACCOUNT_USER
}

// GetSERVICE_ACCOUNT_USEROk returns a tuple with the SERVICE_ACCOUNT_USER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetSERVICE_ACCOUNT_USEROk() (*string, bool) {
	if o == nil || IsNil(o.SERVICE_ACCOUNT_USER) {
		return nil, false
	}
	return o.SERVICE_ACCOUNT_USER, true
}

// HasSERVICE_ACCOUNT_USER returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasSERVICE_ACCOUNT_USER() bool {
	if o != nil && !IsNil(o.SERVICE_ACCOUNT_USER) {
		return true
	}

	return false
}

// SetSERVICE_ACCOUNT_USER gets a reference to the given string and assigns it to the SERVICE_ACCOUNT_USER field.
func (o *ConnectionAttributes) SetSERVICE_ACCOUNT_USER(v string) {
	o.SERVICE_ACCOUNT_USER = &v
}

// GetSETDEFAULTPAGESIZE returns the SETDEFAULTPAGESIZE field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetSETDEFAULTPAGESIZE() string {
	if o == nil || IsNil(o.SETDEFAULTPAGESIZE) {
		var ret string
		return ret
	}
	return *o.SETDEFAULTPAGESIZE
}

// GetSETDEFAULTPAGESIZEOk returns a tuple with the SETDEFAULTPAGESIZE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetSETDEFAULTPAGESIZEOk() (*string, bool) {
	if o == nil || IsNil(o.SETDEFAULTPAGESIZE) {
		return nil, false
	}
	return o.SETDEFAULTPAGESIZE, true
}

// HasSETDEFAULTPAGESIZE returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasSETDEFAULTPAGESIZE() bool {
	if o != nil && !IsNil(o.SETDEFAULTPAGESIZE) {
		return true
	}

	return false
}

// SetSETDEFAULTPAGESIZE gets a reference to the given string and assigns it to the SETDEFAULTPAGESIZE field.
func (o *ConnectionAttributes) SetSETDEFAULTPAGESIZE(v string) {
	o.SETDEFAULTPAGESIZE = &v
}

// GetSETRANDOMPASSWORD returns the SETRANDOMPASSWORD field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetSETRANDOMPASSWORD() string {
	if o == nil || IsNil(o.SETRANDOMPASSWORD) {
		var ret string
		return ret
	}
	return *o.SETRANDOMPASSWORD
}

// GetSETRANDOMPASSWORDOk returns a tuple with the SETRANDOMPASSWORD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetSETRANDOMPASSWORDOk() (*string, bool) {
	if o == nil || IsNil(o.SETRANDOMPASSWORD) {
		return nil, false
	}
	return o.SETRANDOMPASSWORD, true
}

// HasSETRANDOMPASSWORD returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasSETRANDOMPASSWORD() bool {
	if o != nil && !IsNil(o.SETRANDOMPASSWORD) {
		return true
	}

	return false
}

// SetSETRANDOMPASSWORD gets a reference to the given string and assigns it to the SETRANDOMPASSWORD field.
func (o *ConnectionAttributes) SetSETRANDOMPASSWORD(v string) {
	o.SETRANDOMPASSWORD = &v
}

// GetSTATUS_THRESHOLD_CONFIG returns the STATUS_THRESHOLD_CONFIG field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetSTATUS_THRESHOLD_CONFIG() string {
	if o == nil || IsNil(o.STATUS_THRESHOLD_CONFIG) {
		var ret string
		return ret
	}
	return *o.STATUS_THRESHOLD_CONFIG
}

// GetSTATUS_THRESHOLD_CONFIGOk returns a tuple with the STATUS_THRESHOLD_CONFIG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetSTATUS_THRESHOLD_CONFIGOk() (*string, bool) {
	if o == nil || IsNil(o.STATUS_THRESHOLD_CONFIG) {
		return nil, false
	}
	return o.STATUS_THRESHOLD_CONFIG, true
}

// HasSTATUS_THRESHOLD_CONFIG returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasSTATUS_THRESHOLD_CONFIG() bool {
	if o != nil && !IsNil(o.STATUS_THRESHOLD_CONFIG) {
		return true
	}

	return false
}

// SetSTATUS_THRESHOLD_CONFIG gets a reference to the given string and assigns it to the STATUS_THRESHOLD_CONFIG field.
func (o *ConnectionAttributes) SetSTATUS_THRESHOLD_CONFIG(v string) {
	o.STATUS_THRESHOLD_CONFIG = &v
}

// GetSTATUSKEYJSON returns the STATUSKEYJSON field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetSTATUSKEYJSON() string {
	if o == nil || IsNil(o.STATUSKEYJSON) {
		var ret string
		return ret
	}
	return *o.STATUSKEYJSON
}

// GetSTATUSKEYJSONOk returns a tuple with the STATUSKEYJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetSTATUSKEYJSONOk() (*string, bool) {
	if o == nil || IsNil(o.STATUSKEYJSON) {
		return nil, false
	}
	return o.STATUSKEYJSON, true
}

// HasSTATUSKEYJSON returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasSTATUSKEYJSON() bool {
	if o != nil && !IsNil(o.STATUSKEYJSON) {
		return true
	}

	return false
}

// SetSTATUSKEYJSON gets a reference to the given string and assigns it to the STATUSKEYJSON field.
func (o *ConnectionAttributes) SetSTATUSKEYJSON(v string) {
	o.STATUSKEYJSON = &v
}

// GetSUPPORTEMPTYSTRING returns the SUPPORTEMPTYSTRING field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetSUPPORTEMPTYSTRING() string {
	if o == nil || IsNil(o.SUPPORTEMPTYSTRING) {
		var ret string
		return ret
	}
	return *o.SUPPORTEMPTYSTRING
}

// GetSUPPORTEMPTYSTRINGOk returns a tuple with the SUPPORTEMPTYSTRING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetSUPPORTEMPTYSTRINGOk() (*string, bool) {
	if o == nil || IsNil(o.SUPPORTEMPTYSTRING) {
		return nil, false
	}
	return o.SUPPORTEMPTYSTRING, true
}

// HasSUPPORTEMPTYSTRING returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasSUPPORTEMPTYSTRING() bool {
	if o != nil && !IsNil(o.SUPPORTEMPTYSTRING) {
		return true
	}

	return false
}

// SetSUPPORTEMPTYSTRING gets a reference to the given string and assigns it to the SUPPORTEMPTYSTRING field.
func (o *ConnectionAttributes) SetSUPPORTEMPTYSTRING(v string) {
	o.SUPPORTEMPTYSTRING = &v
}

// GetSUSPEND_USER_ORGANIZATIONAL_UNIT returns the SUSPEND_USER_ORGANIZATIONAL_UNIT field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetSUSPEND_USER_ORGANIZATIONAL_UNIT() string {
	if o == nil || IsNil(o.SUSPEND_USER_ORGANIZATIONAL_UNIT) {
		var ret string
		return ret
	}
	return *o.SUSPEND_USER_ORGANIZATIONAL_UNIT
}

// GetSUSPEND_USER_ORGANIZATIONAL_UNITOk returns a tuple with the SUSPEND_USER_ORGANIZATIONAL_UNIT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetSUSPEND_USER_ORGANIZATIONAL_UNITOk() (*string, bool) {
	if o == nil || IsNil(o.SUSPEND_USER_ORGANIZATIONAL_UNIT) {
		return nil, false
	}
	return o.SUSPEND_USER_ORGANIZATIONAL_UNIT, true
}

// HasSUSPEND_USER_ORGANIZATIONAL_UNIT returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasSUSPEND_USER_ORGANIZATIONAL_UNIT() bool {
	if o != nil && !IsNil(o.SUSPEND_USER_ORGANIZATIONAL_UNIT) {
		return true
	}

	return false
}

// SetSUSPEND_USER_ORGANIZATIONAL_UNIT gets a reference to the given string and assigns it to the SUSPEND_USER_ORGANIZATIONAL_UNIT field.
func (o *ConnectionAttributes) SetSUSPEND_USER_ORGANIZATIONAL_UNIT(v string) {
	o.SUSPEND_USER_ORGANIZATIONAL_UNIT = &v
}

// GetUNLOCKACCOUNTJSON returns the UNLOCKACCOUNTJSON field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetUNLOCKACCOUNTJSON() string {
	if o == nil || IsNil(o.UNLOCKACCOUNTJSON) {
		var ret string
		return ret
	}
	return *o.UNLOCKACCOUNTJSON
}

// GetUNLOCKACCOUNTJSONOk returns a tuple with the UNLOCKACCOUNTJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetUNLOCKACCOUNTJSONOk() (*string, bool) {
	if o == nil || IsNil(o.UNLOCKACCOUNTJSON) {
		return nil, false
	}
	return o.UNLOCKACCOUNTJSON, true
}

// HasUNLOCKACCOUNTJSON returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasUNLOCKACCOUNTJSON() bool {
	if o != nil && !IsNil(o.UNLOCKACCOUNTJSON) {
		return true
	}

	return false
}

// SetUNLOCKACCOUNTJSON gets a reference to the given string and assigns it to the UNLOCKACCOUNTJSON field.
func (o *ConnectionAttributes) SetUNLOCKACCOUNTJSON(v string) {
	o.UNLOCKACCOUNTJSON = &v
}

// GetUPDATEACCOUNTJSON returns the UPDATEACCOUNTJSON field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetUPDATEACCOUNTJSON() string {
	if o == nil || IsNil(o.UPDATEACCOUNTJSON) {
		var ret string
		return ret
	}
	return *o.UPDATEACCOUNTJSON
}

// GetUPDATEACCOUNTJSONOk returns a tuple with the UPDATEACCOUNTJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetUPDATEACCOUNTJSONOk() (*string, bool) {
	if o == nil || IsNil(o.UPDATEACCOUNTJSON) {
		return nil, false
	}
	return o.UPDATEACCOUNTJSON, true
}

// HasUPDATEACCOUNTJSON returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasUPDATEACCOUNTJSON() bool {
	if o != nil && !IsNil(o.UPDATEACCOUNTJSON) {
		return true
	}

	return false
}

// SetUPDATEACCOUNTJSON gets a reference to the given string and assigns it to the UPDATEACCOUNTJSON field.
func (o *ConnectionAttributes) SetUPDATEACCOUNTJSON(v string) {
	o.UPDATEACCOUNTJSON = &v
}

// GetUPDATEORGJSON returns the UPDATEORGJSON field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetUPDATEORGJSON() string {
	if o == nil || IsNil(o.UPDATEORGJSON) {
		var ret string
		return ret
	}
	return *o.UPDATEORGJSON
}

// GetUPDATEORGJSONOk returns a tuple with the UPDATEORGJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetUPDATEORGJSONOk() (*string, bool) {
	if o == nil || IsNil(o.UPDATEORGJSON) {
		return nil, false
	}
	return o.UPDATEORGJSON, true
}

// HasUPDATEORGJSON returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasUPDATEORGJSON() bool {
	if o != nil && !IsNil(o.UPDATEORGJSON) {
		return true
	}

	return false
}

// SetUPDATEORGJSON gets a reference to the given string and assigns it to the UPDATEORGJSON field.
func (o *ConnectionAttributes) SetUPDATEORGJSON(v string) {
	o.UPDATEORGJSON = &v
}

// GetUPDATEUSERJSON returns the UPDATEUSERJSON field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetUPDATEUSERJSON() string {
	if o == nil || IsNil(o.UPDATEUSERJSON) {
		var ret string
		return ret
	}
	return *o.UPDATEUSERJSON
}

// GetUPDATEUSERJSONOk returns a tuple with the UPDATEUSERJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetUPDATEUSERJSONOk() (*string, bool) {
	if o == nil || IsNil(o.UPDATEUSERJSON) {
		return nil, false
	}
	return o.UPDATEUSERJSON, true
}

// HasUPDATEUSERJSON returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasUPDATEUSERJSON() bool {
	if o != nil && !IsNil(o.UPDATEUSERJSON) {
		return true
	}

	return false
}

// SetUPDATEUSERJSON gets a reference to the given string and assigns it to the UPDATEUSERJSON field.
func (o *ConnectionAttributes) SetUPDATEUSERJSON(v string) {
	o.UPDATEUSERJSON = &v
}

// GetUSER_ATTRIBUTE returns the USER_ATTRIBUTE field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetUSER_ATTRIBUTE() string {
	if o == nil || IsNil(o.USER_ATTRIBUTE) {
		var ret string
		return ret
	}
	return *o.USER_ATTRIBUTE
}

// GetUSER_ATTRIBUTEOk returns a tuple with the USER_ATTRIBUTE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetUSER_ATTRIBUTEOk() (*string, bool) {
	if o == nil || IsNil(o.USER_ATTRIBUTE) {
		return nil, false
	}
	return o.USER_ATTRIBUTE, true
}

// HasUSER_ATTRIBUTE returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasUSER_ATTRIBUTE() bool {
	if o != nil && !IsNil(o.USER_ATTRIBUTE) {
		return true
	}

	return false
}

// SetUSER_ATTRIBUTE gets a reference to the given string and assigns it to the USER_ATTRIBUTE field.
func (o *ConnectionAttributes) SetUSER_ATTRIBUTE(v string) {
	o.USER_ATTRIBUTE = &v
}

// GetUSER_ATTRIBUTES returns the USER_ATTRIBUTES field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetUSER_ATTRIBUTES() string {
	if o == nil || IsNil(o.USER_ATTRIBUTES) {
		var ret string
		return ret
	}
	return *o.USER_ATTRIBUTES
}

// GetUSER_ATTRIBUTESOk returns a tuple with the USER_ATTRIBUTES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetUSER_ATTRIBUTESOk() (*string, bool) {
	if o == nil || IsNil(o.USER_ATTRIBUTES) {
		return nil, false
	}
	return o.USER_ATTRIBUTES, true
}

// HasUSER_ATTRIBUTES returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasUSER_ATTRIBUTES() bool {
	if o != nil && !IsNil(o.USER_ATTRIBUTES) {
		return true
	}

	return false
}

// SetUSER_ATTRIBUTES gets a reference to the given string and assigns it to the USER_ATTRIBUTES field.
func (o *ConnectionAttributes) SetUSER_ATTRIBUTES(v string) {
	o.USER_ATTRIBUTES = &v
}

// GetURL returns the URL field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetURL() string {
	if o == nil || IsNil(o.URL) {
		var ret string
		return ret
	}
	return *o.URL
}

// GetURLOk returns a tuple with the URL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetURLOk() (*string, bool) {
	if o == nil || IsNil(o.URL) {
		return nil, false
	}
	return o.URL, true
}

// HasURL returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasURL() bool {
	if o != nil && !IsNil(o.URL) {
		return true
	}

	return false
}

// SetURL gets a reference to the given string and assigns it to the URL field.
func (o *ConnectionAttributes) SetURL(v string) {
	o.URL = &v
}

// GetUSERNAME returns the USERNAME field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetUSERNAME() string {
	if o == nil || IsNil(o.USERNAME) {
		var ret string
		return ret
	}
	return *o.USERNAME
}

// GetUSERNAMEOk returns a tuple with the USERNAME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetUSERNAMEOk() (*string, bool) {
	if o == nil || IsNil(o.USERNAME) {
		return nil, false
	}
	return o.USERNAME, true
}

// HasUSERNAME returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasUSERNAME() bool {
	if o != nil && !IsNil(o.USERNAME) {
		return true
	}

	return false
}

// SetUSERNAME gets a reference to the given string and assigns it to the USERNAME field.
func (o *ConnectionAttributes) SetUSERNAME(v string) {
	o.USERNAME = &v
}

// GetConnectionTimeoutConfig returns the ConnectionTimeoutConfig field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetConnectionTimeoutConfig() ConnectionTimeoutConfig {
	if o == nil || IsNil(o.ConnectionTimeoutConfig) {
		var ret ConnectionTimeoutConfig
		return ret
	}
	return *o.ConnectionTimeoutConfig
}

// GetConnectionTimeoutConfigOk returns a tuple with the ConnectionTimeoutConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetConnectionTimeoutConfigOk() (*ConnectionTimeoutConfig, bool) {
	if o == nil || IsNil(o.ConnectionTimeoutConfig) {
		return nil, false
	}
	return o.ConnectionTimeoutConfig, true
}

// HasConnectionTimeoutConfig returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasConnectionTimeoutConfig() bool {
	if o != nil && !IsNil(o.ConnectionTimeoutConfig) {
		return true
	}

	return false
}

// SetConnectionTimeoutConfig gets a reference to the given ConnectionTimeoutConfig and assigns it to the ConnectionTimeoutConfig field.
func (o *ConnectionAttributes) SetConnectionTimeoutConfig(v ConnectionTimeoutConfig) {
	o.ConnectionTimeoutConfig = &v
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetConnectionType() string {
	if o == nil || IsNil(o.ConnectionType) {
		var ret string
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetConnectionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionType) {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasConnectionType() bool {
	if o != nil && !IsNil(o.ConnectionType) {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given string and assigns it to the ConnectionType field.
func (o *ConnectionAttributes) SetConnectionType(v string) {
	o.ConnectionType = &v
}

// GetCreateUpdateMappings returns the CreateUpdateMappings field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetCreateUpdateMappings() string {
	if o == nil || IsNil(o.CreateUpdateMappings) {
		var ret string
		return ret
	}
	return *o.CreateUpdateMappings
}

// GetCreateUpdateMappingsOk returns a tuple with the CreateUpdateMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetCreateUpdateMappingsOk() (*string, bool) {
	if o == nil || IsNil(o.CreateUpdateMappings) {
		return nil, false
	}
	return o.CreateUpdateMappings, true
}

// HasCreateUpdateMappings returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasCreateUpdateMappings() bool {
	if o != nil && !IsNil(o.CreateUpdateMappings) {
		return true
	}

	return false
}

// SetCreateUpdateMappings gets a reference to the given string and assigns it to the CreateUpdateMappings field.
func (o *ConnectionAttributes) SetCreateUpdateMappings(v string) {
	o.CreateUpdateMappings = &v
}

// GetGroupImportMapping returns the GroupImportMapping field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetGroupImportMapping() string {
	if o == nil || IsNil(o.GroupImportMapping) {
		var ret string
		return ret
	}
	return *o.GroupImportMapping
}

// GetGroupImportMappingOk returns a tuple with the GroupImportMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetGroupImportMappingOk() (*string, bool) {
	if o == nil || IsNil(o.GroupImportMapping) {
		return nil, false
	}
	return o.GroupImportMapping, true
}

// HasGroupImportMapping returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasGroupImportMapping() bool {
	if o != nil && !IsNil(o.GroupImportMapping) {
		return true
	}

	return false
}

// SetGroupImportMapping gets a reference to the given string and assigns it to the GroupImportMapping field.
func (o *ConnectionAttributes) SetGroupImportMapping(v string) {
	o.GroupImportMapping = &v
}

// GetGroupSearchBaseDN returns the GroupSearchBaseDN field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetGroupSearchBaseDN() string {
	if o == nil || IsNil(o.GroupSearchBaseDN) {
		var ret string
		return ret
	}
	return *o.GroupSearchBaseDN
}

// GetGroupSearchBaseDNOk returns a tuple with the GroupSearchBaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetGroupSearchBaseDNOk() (*string, bool) {
	if o == nil || IsNil(o.GroupSearchBaseDN) {
		return nil, false
	}
	return o.GroupSearchBaseDN, true
}

// HasGroupSearchBaseDN returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasGroupSearchBaseDN() bool {
	if o != nil && !IsNil(o.GroupSearchBaseDN) {
		return true
	}

	return false
}

// SetGroupSearchBaseDN gets a reference to the given string and assigns it to the GroupSearchBaseDN field.
func (o *ConnectionAttributes) SetGroupSearchBaseDN(v string) {
	o.GroupSearchBaseDN = &v
}

// GetIsTimeoutConfigValidated returns the IsTimeoutConfigValidated field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetIsTimeoutConfigValidated() bool {
	if o == nil || IsNil(o.IsTimeoutConfigValidated) {
		var ret bool
		return ret
	}
	return *o.IsTimeoutConfigValidated
}

// GetIsTimeoutConfigValidatedOk returns a tuple with the IsTimeoutConfigValidated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetIsTimeoutConfigValidatedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsTimeoutConfigValidated) {
		return nil, false
	}
	return o.IsTimeoutConfigValidated, true
}

// HasIsTimeoutConfigValidated returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasIsTimeoutConfigValidated() bool {
	if o != nil && !IsNil(o.IsTimeoutConfigValidated) {
		return true
	}

	return false
}

// SetIsTimeoutConfigValidated gets a reference to the given bool and assigns it to the IsTimeoutConfigValidated field.
func (o *ConnectionAttributes) SetIsTimeoutConfigValidated(v bool) {
	o.IsTimeoutConfigValidated = &v
}

// GetIsTimeoutSupported returns the IsTimeoutSupported field value if set, zero value otherwise.
func (o *ConnectionAttributes) GetIsTimeoutSupported() bool {
	if o == nil || IsNil(o.IsTimeoutSupported) {
		var ret bool
		return ret
	}
	return *o.IsTimeoutSupported
}

// GetIsTimeoutSupportedOk returns a tuple with the IsTimeoutSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionAttributes) GetIsTimeoutSupportedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsTimeoutSupported) {
		return nil, false
	}
	return o.IsTimeoutSupported, true
}

// HasIsTimeoutSupported returns a boolean if a field has been set.
func (o *ConnectionAttributes) HasIsTimeoutSupported() bool {
	if o != nil && !IsNil(o.IsTimeoutSupported) {
		return true
	}

	return false
}

// SetIsTimeoutSupported gets a reference to the given bool and assigns it to the IsTimeoutSupported field.
func (o *ConnectionAttributes) SetIsTimeoutSupported(v bool) {
	o.IsTimeoutSupported = &v
}

func (o ConnectionAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectionAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ACCOUNT_ATTRIBUTE) {
		toSerialize["ACCOUNT_ATTRIBUTE"] = o.ACCOUNT_ATTRIBUTE
	}
	if !IsNil(o.ACCOUNT_ATTRIBUTES) {
		toSerialize["ACCOUNT_ATTRIBUTES"] = o.ACCOUNT_ATTRIBUTES
	}
	if !IsNil(o.ACCOUNT_ATTRIBUTE_LABEL) {
		toSerialize["ACCOUNT_ATTRIBUTE_LABEL"] = o.ACCOUNT_ATTRIBUTE_LABEL
	}
	if !IsNil(o.ACCOUNTNAMERULE) {
		toSerialize["ACCOUNTNAMERULE"] = o.ACCOUNTNAMERULE
	}
	if !IsNil(o.ADVANCE_FILTER_JSON) {
		toSerialize["ADVANCE_FILTER_JSON"] = o.ADVANCE_FILTER_JSON
	}
	if !IsNil(o.ADVSEARCH) {
		toSerialize["ADVSEARCH"] = o.ADVSEARCH
	}
	if !IsNil(o.APPLICATION_NAME) {
		toSerialize["APPLICATION_NAME"] = o.APPLICATION_NAME
	}
	if !IsNil(o.BASE) {
		toSerialize["BASE"] = o.BASE
	}
	if !IsNil(o.CHECKFORUNIQUE) {
		toSerialize["CHECKFORUNIQUE"] = o.CHECKFORUNIQUE
	}
	if !IsNil(o.ConfigJSON) {
		toSerialize["ConfigJSON"] = o.ConfigJSON
	}
	if !IsNil(o.CONNECTOR_FILE_PATH) {
		toSerialize["CONNECTOR_FILE_PATH"] = o.CONNECTOR_FILE_PATH
	}
	if !IsNil(o.CREATEACCOUNTJSON) {
		toSerialize["CREATEACCOUNTJSON"] = o.CREATEACCOUNTJSON
	}
	if !IsNil(o.CREATEORGJSON) {
		toSerialize["CREATEORGJSON"] = o.CREATEORGJSON
	}
	if !IsNil(o.CUSTOM_ACCOUNT_ATTRIBUTES) {
		toSerialize["CUSTOM_ACCOUNT_ATTRIBUTES"] = o.CUSTOM_ACCOUNT_ATTRIBUTES
	}
	if !IsNil(o.CUSTOMER_ID) {
		toSerialize["CUSTOMER_ID"] = o.CUSTOMER_ID
	}
	if !IsNil(o.DC_LOCATOR) {
		toSerialize["DC_LOCATOR"] = o.DC_LOCATOR
	}
	if !IsNil(o.DEFAULT_USER_ROLE) {
		toSerialize["DEFAULT_USER_ROLE"] = o.DEFAULT_USER_ROLE
	}
	if !IsNil(o.DISABLEACCOUNTJSON) {
		toSerialize["DISABLEACCOUNTJSON"] = o.DISABLEACCOUNTJSON
	}
	if !IsNil(o.ENABLEACCOUNTJSON) {
		toSerialize["ENABLEACCOUNTJSON"] = o.ENABLEACCOUNTJSON
	}
	if !IsNil(o.ENABLEGROUPMANAGEMENT) {
		toSerialize["ENABLEGROUPMANAGEMENT"] = o.ENABLEGROUPMANAGEMENT
	}
	if !IsNil(o.ENDPOINTS_FILTER) {
		toSerialize["ENDPOINTS_FILTER"] = o.ENDPOINTS_FILTER
	}
	if !IsNil(o.ENFORCE_TREE_DELETION) {
		toSerialize["ENFORCE_TREE_DELETION"] = o.ENFORCE_TREE_DELETION
	}
	if !IsNil(o.ENTITLEMENT_ATTRIBUTE) {
		toSerialize["ENTITLEMENT_ATTRIBUTE"] = o.ENTITLEMENT_ATTRIBUTE
	}
	if !IsNil(o.FILEFOLDER_ATTRIBUTES) {
		toSerialize["FILEFOLDER_ATTRIBUTES"] = o.FILEFOLDER_ATTRIBUTES
	}
	if !IsNil(o.FILTER) {
		toSerialize["FILTER"] = o.FILTER
	}
	if !IsNil(o.GROUP_ATTRIBUTES) {
		toSerialize["GROUP_ATTRIBUTES"] = o.GROUP_ATTRIBUTES
	}
	if !IsNil(o.IMPORT_USERS) {
		toSerialize["IMPORT_USERS"] = o.IMPORT_USERS
	}
	if !IsNil(o.IMPORTJSON) {
		toSerialize["IMPORTJSON"] = o.IMPORTJSON
	}
	if !IsNil(o.INCREMENTAL_CONFIG) {
		toSerialize["INCREMENTAL_CONFIG"] = o.INCREMENTAL_CONFIG
	}
	if !IsNil(o.LAST_IMPORT_TIME) {
		toSerialize["LAST_IMPORT_TIME"] = o.LAST_IMPORT_TIME
	}
	if !IsNil(o.LDAP_OR_AD) {
		toSerialize["LDAP_OR_AD"] = o.LDAP_OR_AD
	}
	if !IsNil(o.MAX_CHANGENUMBER) {
		toSerialize["MAX_CHANGENUMBER"] = o.MAX_CHANGENUMBER
	}
	if !IsNil(o.MKTPLACEAPP_ATTRIBUTES) {
		toSerialize["MKTPLACEAPP_ATTRIBUTES"] = o.MKTPLACEAPP_ATTRIBUTES
	}
	if !IsNil(o.MODIFYUSERDATAJSON) {
		toSerialize["MODIFYUSERDATAJSON"] = o.MODIFYUSERDATAJSON
	}
	if !IsNil(o.OBJECTFILTER) {
		toSerialize["OBJECTFILTER"] = o.OBJECTFILTER
	}
	if !IsNil(o.ORG_BASE) {
		toSerialize["ORG_BASE"] = o.ORG_BASE
	}
	if !IsNil(o.ORGANIZATION_ATTRIBUTE) {
		toSerialize["ORGANIZATION_ATTRIBUTE"] = o.ORGANIZATION_ATTRIBUTE
	}
	if !IsNil(o.ORGIMPORTJSON) {
		toSerialize["ORGIMPORTJSON"] = o.ORGIMPORTJSON
	}
	if !IsNil(o.PAGE_SIZE) {
		toSerialize["PAGE_SIZE"] = o.PAGE_SIZE
	}
	if !IsNil(o.PAM_CONFIG) {
		toSerialize["PAM_CONFIG"] = o.PAM_CONFIG
	}
	if !IsNil(o.PASSWORD) {
		toSerialize["PASSWORD"] = o.PASSWORD
	}
	if !IsNil(o.PASSWORD_MAX_LENGTH) {
		toSerialize["PASSWORD_MAX_LENGTH"] = o.PASSWORD_MAX_LENGTH
	}
	if !IsNil(o.PASSWORD_MIN_LENGTH) {
		toSerialize["PASSWORD_MIN_LENGTH"] = o.PASSWORD_MIN_LENGTH
	}
	if !IsNil(o.PASSWORD_NOOFCAPSALPHA) {
		toSerialize["PASSWORD_NOOFCAPSALPHA"] = o.PASSWORD_NOOFCAPSALPHA
	}
	if !IsNil(o.PASSWORD_NOOFDIGITS) {
		toSerialize["PASSWORD_NOOFDIGITS"] = o.PASSWORD_NOOFDIGITS
	}
	if !IsNil(o.PASSWORD_NOOFSPLCHARS) {
		toSerialize["PASSWORD_NOOFSPLCHARS"] = o.PASSWORD_NOOFSPLCHARS
	}
	if !IsNil(o.QUARANTINE_FOLDER_ID) {
		toSerialize["QUARANTINE_FOLDER_ID"] = o.QUARANTINE_FOLDER_ID
	}
	if !IsNil(o.READ_OPERATIONAL_ATTRIBUTES) {
		toSerialize["READ_OPERATIONAL_ATTRIBUTES"] = o.READ_OPERATIONAL_ATTRIBUTES
	}
	if !IsNil(o.REMOVEACCOUNTACTION) {
		toSerialize["REMOVEACCOUNTACTION"] = o.REMOVEACCOUNTACTION
	}
	if !IsNil(o.RESETANDCHANGEPASSWRDJSON) {
		toSerialize["RESETANDCHANGEPASSWRDJSON"] = o.RESETANDCHANGEPASSWRDJSON
	}
	if !IsNil(o.REUSEACCOUNTJSON) {
		toSerialize["REUSEACCOUNTJSON"] = o.REUSEACCOUNTJSON
	}
	if !IsNil(o.REUSEINACTIVEACCOUNT) {
		toSerialize["REUSEINACTIVEACCOUNT"] = o.REUSEINACTIVEACCOUNT
	}
	if !IsNil(o.SCOPES) {
		toSerialize["SCOPES"] = o.SCOPES
	}
	if !IsNil(o.SEARCHFILTER) {
		toSerialize["SEARCHFILTER"] = o.SEARCHFILTER
	}
	if !IsNil(o.SERVICE_ACCOUNT_ID) {
		toSerialize["SERVICE_ACCOUNT_ID"] = o.SERVICE_ACCOUNT_ID
	}
	if !IsNil(o.SERVICE_ACCOUNT_KEY_JSON) {
		toSerialize["SERVICE_ACCOUNT_KEY_JSON"] = o.SERVICE_ACCOUNT_KEY_JSON
	}
	if !IsNil(o.SERVICE_ACCOUNT_USER) {
		toSerialize["SERVICE_ACCOUNT_USER"] = o.SERVICE_ACCOUNT_USER
	}
	if !IsNil(o.SETDEFAULTPAGESIZE) {
		toSerialize["SETDEFAULTPAGESIZE"] = o.SETDEFAULTPAGESIZE
	}
	if !IsNil(o.SETRANDOMPASSWORD) {
		toSerialize["SETRANDOMPASSWORD"] = o.SETRANDOMPASSWORD
	}
	if !IsNil(o.STATUS_THRESHOLD_CONFIG) {
		toSerialize["STATUS_THRESHOLD_CONFIG"] = o.STATUS_THRESHOLD_CONFIG
	}
	if !IsNil(o.STATUSKEYJSON) {
		toSerialize["STATUSKEYJSON"] = o.STATUSKEYJSON
	}
	if !IsNil(o.SUPPORTEMPTYSTRING) {
		toSerialize["SUPPORTEMPTYSTRING"] = o.SUPPORTEMPTYSTRING
	}
	if !IsNil(o.SUSPEND_USER_ORGANIZATIONAL_UNIT) {
		toSerialize["SUSPEND_USER_ORGANIZATIONAL_UNIT"] = o.SUSPEND_USER_ORGANIZATIONAL_UNIT
	}
	if !IsNil(o.UNLOCKACCOUNTJSON) {
		toSerialize["UNLOCKACCOUNTJSON"] = o.UNLOCKACCOUNTJSON
	}
	if !IsNil(o.UPDATEACCOUNTJSON) {
		toSerialize["UPDATEACCOUNTJSON"] = o.UPDATEACCOUNTJSON
	}
	if !IsNil(o.UPDATEORGJSON) {
		toSerialize["UPDATEORGJSON"] = o.UPDATEORGJSON
	}
	if !IsNil(o.UPDATEUSERJSON) {
		toSerialize["UPDATEUSERJSON"] = o.UPDATEUSERJSON
	}
	if !IsNil(o.USER_ATTRIBUTE) {
		toSerialize["USER_ATTRIBUTE"] = o.USER_ATTRIBUTE
	}
	if !IsNil(o.USER_ATTRIBUTES) {
		toSerialize["USER_ATTRIBUTES"] = o.USER_ATTRIBUTES
	}
	if !IsNil(o.URL) {
		toSerialize["URL"] = o.URL
	}
	if !IsNil(o.USERNAME) {
		toSerialize["USERNAME"] = o.USERNAME
	}
	if !IsNil(o.ConnectionTimeoutConfig) {
		toSerialize["connectionTimeoutConfig"] = o.ConnectionTimeoutConfig
	}
	if !IsNil(o.ConnectionType) {
		toSerialize["connectionType"] = o.ConnectionType
	}
	if !IsNil(o.CreateUpdateMappings) {
		toSerialize["createUpdateMappings"] = o.CreateUpdateMappings
	}
	if !IsNil(o.GroupImportMapping) {
		toSerialize["groupImportMapping"] = o.GroupImportMapping
	}
	if !IsNil(o.GroupSearchBaseDN) {
		toSerialize["groupSearchBaseDN"] = o.GroupSearchBaseDN
	}
	if !IsNil(o.IsTimeoutConfigValidated) {
		toSerialize["isTimeoutConfigValidated"] = o.IsTimeoutConfigValidated
	}
	if !IsNil(o.IsTimeoutSupported) {
		toSerialize["isTimeoutSupported"] = o.IsTimeoutSupported
	}
	return toSerialize, nil
}

type NullableConnectionAttributes struct {
	value *ConnectionAttributes
	isSet bool
}

func (v NullableConnectionAttributes) Get() *ConnectionAttributes {
	return v.value
}

func (v *NullableConnectionAttributes) Set(val *ConnectionAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionAttributes(val *ConnectionAttributes) *NullableConnectionAttributes {
	return &NullableConnectionAttributes{value: val, isSet: true}
}

func (v NullableConnectionAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


