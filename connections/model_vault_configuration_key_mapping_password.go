/*
Saviynt Connections API

Connections

API version: 1.0
Contact: https://github.com/saviynt
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connections

import (
	"encoding/json"
)

// checks if the VaultConfigurationKeyMappingPassword type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VaultConfigurationKeyMappingPassword{}

// VaultConfigurationKeyMappingPassword struct for VaultConfigurationKeyMappingPassword
type VaultConfigurationKeyMappingPassword struct {
	KeyName *string `json:"keyName,omitempty"`
	GroupName *string `json:"groupName,omitempty"`
	Encryptionmechanism *string `json:"encryptionmechanism,omitempty"`
	// Use mappings like `groupName` and `keyName`.
	IgnoreMapping []string `json:"ignoreMapping,omitempty"`
}

// NewVaultConfigurationKeyMappingPassword instantiates a new VaultConfigurationKeyMappingPassword object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVaultConfigurationKeyMappingPassword() *VaultConfigurationKeyMappingPassword {
	this := VaultConfigurationKeyMappingPassword{}
	return &this
}

// NewVaultConfigurationKeyMappingPasswordWithDefaults instantiates a new VaultConfigurationKeyMappingPassword object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVaultConfigurationKeyMappingPasswordWithDefaults() *VaultConfigurationKeyMappingPassword {
	this := VaultConfigurationKeyMappingPassword{}
	return &this
}

// GetKeyName returns the KeyName field value if set, zero value otherwise.
func (o *VaultConfigurationKeyMappingPassword) GetKeyName() string {
	if o == nil || IsNil(o.KeyName) {
		var ret string
		return ret
	}
	return *o.KeyName
}

// GetKeyNameOk returns a tuple with the KeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultConfigurationKeyMappingPassword) GetKeyNameOk() (*string, bool) {
	if o == nil || IsNil(o.KeyName) {
		return nil, false
	}
	return o.KeyName, true
}

// HasKeyName returns a boolean if a field has been set.
func (o *VaultConfigurationKeyMappingPassword) HasKeyName() bool {
	if o != nil && !IsNil(o.KeyName) {
		return true
	}

	return false
}

// SetKeyName gets a reference to the given string and assigns it to the KeyName field.
func (o *VaultConfigurationKeyMappingPassword) SetKeyName(v string) {
	o.KeyName = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *VaultConfigurationKeyMappingPassword) GetGroupName() string {
	if o == nil || IsNil(o.GroupName) {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultConfigurationKeyMappingPassword) GetGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.GroupName) {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *VaultConfigurationKeyMappingPassword) HasGroupName() bool {
	if o != nil && !IsNil(o.GroupName) {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *VaultConfigurationKeyMappingPassword) SetGroupName(v string) {
	o.GroupName = &v
}

// GetEncryptionmechanism returns the Encryptionmechanism field value if set, zero value otherwise.
func (o *VaultConfigurationKeyMappingPassword) GetEncryptionmechanism() string {
	if o == nil || IsNil(o.Encryptionmechanism) {
		var ret string
		return ret
	}
	return *o.Encryptionmechanism
}

// GetEncryptionmechanismOk returns a tuple with the Encryptionmechanism field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultConfigurationKeyMappingPassword) GetEncryptionmechanismOk() (*string, bool) {
	if o == nil || IsNil(o.Encryptionmechanism) {
		return nil, false
	}
	return o.Encryptionmechanism, true
}

// HasEncryptionmechanism returns a boolean if a field has been set.
func (o *VaultConfigurationKeyMappingPassword) HasEncryptionmechanism() bool {
	if o != nil && !IsNil(o.Encryptionmechanism) {
		return true
	}

	return false
}

// SetEncryptionmechanism gets a reference to the given string and assigns it to the Encryptionmechanism field.
func (o *VaultConfigurationKeyMappingPassword) SetEncryptionmechanism(v string) {
	o.Encryptionmechanism = &v
}

// GetIgnoreMapping returns the IgnoreMapping field value if set, zero value otherwise.
func (o *VaultConfigurationKeyMappingPassword) GetIgnoreMapping() []string {
	if o == nil || IsNil(o.IgnoreMapping) {
		var ret []string
		return ret
	}
	return o.IgnoreMapping
}

// GetIgnoreMappingOk returns a tuple with the IgnoreMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultConfigurationKeyMappingPassword) GetIgnoreMappingOk() ([]string, bool) {
	if o == nil || IsNil(o.IgnoreMapping) {
		return nil, false
	}
	return o.IgnoreMapping, true
}

// HasIgnoreMapping returns a boolean if a field has been set.
func (o *VaultConfigurationKeyMappingPassword) HasIgnoreMapping() bool {
	if o != nil && !IsNil(o.IgnoreMapping) {
		return true
	}

	return false
}

// SetIgnoreMapping gets a reference to the given []string and assigns it to the IgnoreMapping field.
func (o *VaultConfigurationKeyMappingPassword) SetIgnoreMapping(v []string) {
	o.IgnoreMapping = v
}

func (o VaultConfigurationKeyMappingPassword) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VaultConfigurationKeyMappingPassword) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.KeyName) {
		toSerialize["keyName"] = o.KeyName
	}
	if !IsNil(o.GroupName) {
		toSerialize["groupName"] = o.GroupName
	}
	if !IsNil(o.Encryptionmechanism) {
		toSerialize["encryptionmechanism"] = o.Encryptionmechanism
	}
	if !IsNil(o.IgnoreMapping) {
		toSerialize["ignoreMapping"] = o.IgnoreMapping
	}
	return toSerialize, nil
}

type NullableVaultConfigurationKeyMappingPassword struct {
	value *VaultConfigurationKeyMappingPassword
	isSet bool
}

func (v NullableVaultConfigurationKeyMappingPassword) Get() *VaultConfigurationKeyMappingPassword {
	return v.value
}

func (v *NullableVaultConfigurationKeyMappingPassword) Set(val *VaultConfigurationKeyMappingPassword) {
	v.value = val
	v.isSet = true
}

func (v NullableVaultConfigurationKeyMappingPassword) IsSet() bool {
	return v.isSet
}

func (v *NullableVaultConfigurationKeyMappingPassword) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVaultConfigurationKeyMappingPassword(val *VaultConfigurationKeyMappingPassword) *NullableVaultConfigurationKeyMappingPassword {
	return &NullableVaultConfigurationKeyMappingPassword{value: val, isSet: true}
}

func (v NullableVaultConfigurationKeyMappingPassword) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVaultConfigurationKeyMappingPassword) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


