/*
Connection Management API

Use this API to create a connection in Saviynt Identity Cloud.  The Authorization header must have \"Bearer {token}\".  **Mandatory Parameters:** - **connectionname**: Specify the name to identify the connection. - **connectiontype**: Specify a connection type. For example, if your target application is Active Directory, specify the connection type as \"AD\".  **Optional Parameters:** - **description**: Provide a description for the connection. - **defaultsavroles**: Specify the SAV role(s) required for managing this connection along with its associated security systems, endpoints, accounts, and entitlements. - **emailTemplate**: Specify the email template applicable for notifications. - **sslCertificate**: Specify the SSL certificate(s) to secure the connection between EIC and the target application. - **vaultConfiguration**: Specify the path of the vault to obtain secret data (suffix the connector name to make it unique). - **saveinvault**: Set to true to save the encrypted attribute in the configured vault.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connections

import (
	"encoding/json"
)

// checks if the GithubRESTConnectionAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GithubRESTConnectionAttributes{}

// GithubRESTConnectionAttributes struct for GithubRESTConnectionAttributes
type GithubRESTConnectionAttributes struct {
	IsTimeoutSupported       *bool                    `json:"isTimeoutSupported,omitempty"`
	ConnectionJSON           *string                  `json:"ConnectionJSON,omitempty"`
	PAM_CONFIG               *string                  `json:"PAM_CONFIG,omitempty"`
	ORGANIZATION_LIST        *string                  `json:"ORGANIZATION_LIST,omitempty"`
	ImportAccountEntJSON     *string                  `json:"ImportAccountEntJSON,omitempty"`
	STATUS_THRESHOLD_CONFIG  *string                  `json:"STATUS_THRESHOLD_CONFIG,omitempty"`
	ACCESS_TOKENS            *string                  `json:"ACCESS_TOKENS,omitempty"`
	ConnectionTimeoutConfig  *ConnectionTimeoutConfig `json:"connectionTimeoutConfig,omitempty"`
	ConnectionType           *string                  `json:"connectionType,omitempty"`
	IsTimeoutConfigValidated *bool                    `json:"isTimeoutConfigValidated,omitempty"`
}

// NewGithubRESTConnectionAttributes instantiates a new GithubRESTConnectionAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubRESTConnectionAttributes() *GithubRESTConnectionAttributes {
	this := GithubRESTConnectionAttributes{}
	return &this
}

// NewGithubRESTConnectionAttributesWithDefaults instantiates a new GithubRESTConnectionAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubRESTConnectionAttributesWithDefaults() *GithubRESTConnectionAttributes {
	this := GithubRESTConnectionAttributes{}
	return &this
}

// GetIsTimeoutSupported returns the IsTimeoutSupported field value if set, zero value otherwise.
func (o *GithubRESTConnectionAttributes) GetIsTimeoutSupported() bool {
	if o == nil || IsNil(o.IsTimeoutSupported) {
		var ret bool
		return ret
	}
	return *o.IsTimeoutSupported
}

// GetIsTimeoutSupportedOk returns a tuple with the IsTimeoutSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRESTConnectionAttributes) GetIsTimeoutSupportedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsTimeoutSupported) {
		return nil, false
	}
	return o.IsTimeoutSupported, true
}

// HasIsTimeoutSupported returns a boolean if a field has been set.
func (o *GithubRESTConnectionAttributes) HasIsTimeoutSupported() bool {
	if o != nil && !IsNil(o.IsTimeoutSupported) {
		return true
	}

	return false
}

// SetIsTimeoutSupported gets a reference to the given bool and assigns it to the IsTimeoutSupported field.
func (o *GithubRESTConnectionAttributes) SetIsTimeoutSupported(v bool) {
	o.IsTimeoutSupported = &v
}

// GetConnectionJSON returns the ConnectionJSON field value if set, zero value otherwise.
func (o *GithubRESTConnectionAttributes) GetConnectionJSON() string {
	if o == nil || IsNil(o.ConnectionJSON) {
		var ret string
		return ret
	}
	return *o.ConnectionJSON
}

// GetConnectionJSONOk returns a tuple with the ConnectionJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRESTConnectionAttributes) GetConnectionJSONOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionJSON) {
		return nil, false
	}
	return o.ConnectionJSON, true
}

// HasConnectionJSON returns a boolean if a field has been set.
func (o *GithubRESTConnectionAttributes) HasConnectionJSON() bool {
	if o != nil && !IsNil(o.ConnectionJSON) {
		return true
	}

	return false
}

// SetConnectionJSON gets a reference to the given string and assigns it to the ConnectionJSON field.
func (o *GithubRESTConnectionAttributes) SetConnectionJSON(v string) {
	o.ConnectionJSON = &v
}

// GetPAM_CONFIG returns the PAM_CONFIG field value if set, zero value otherwise.
func (o *GithubRESTConnectionAttributes) GetPAM_CONFIG() string {
	if o == nil || IsNil(o.PAM_CONFIG) {
		var ret string
		return ret
	}
	return *o.PAM_CONFIG
}

// GetPAM_CONFIGOk returns a tuple with the PAM_CONFIG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRESTConnectionAttributes) GetPAM_CONFIGOk() (*string, bool) {
	if o == nil || IsNil(o.PAM_CONFIG) {
		return nil, false
	}
	return o.PAM_CONFIG, true
}

// HasPAM_CONFIG returns a boolean if a field has been set.
func (o *GithubRESTConnectionAttributes) HasPAM_CONFIG() bool {
	if o != nil && !IsNil(o.PAM_CONFIG) {
		return true
	}

	return false
}

// SetPAM_CONFIG gets a reference to the given string and assigns it to the PAM_CONFIG field.
func (o *GithubRESTConnectionAttributes) SetPAM_CONFIG(v string) {
	o.PAM_CONFIG = &v
}

// GetORGANIZATION_LIST returns the ORGANIZATION_LIST field value if set, zero value otherwise.
func (o *GithubRESTConnectionAttributes) GetORGANIZATION_LIST() string {
	if o == nil || IsNil(o.ORGANIZATION_LIST) {
		var ret string
		return ret
	}
	return *o.ORGANIZATION_LIST
}

// GetORGANIZATION_LISTOk returns a tuple with the ORGANIZATION_LIST field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRESTConnectionAttributes) GetORGANIZATION_LISTOk() (*string, bool) {
	if o == nil || IsNil(o.ORGANIZATION_LIST) {
		return nil, false
	}
	return o.ORGANIZATION_LIST, true
}

// HasORGANIZATION_LIST returns a boolean if a field has been set.
func (o *GithubRESTConnectionAttributes) HasORGANIZATION_LIST() bool {
	if o != nil && !IsNil(o.ORGANIZATION_LIST) {
		return true
	}

	return false
}

// SetORGANIZATION_LIST gets a reference to the given string and assigns it to the ORGANIZATION_LIST field.
func (o *GithubRESTConnectionAttributes) SetORGANIZATION_LIST(v string) {
	o.ORGANIZATION_LIST = &v
}

// GetImportAccountEntJSON returns the ImportAccountEntJSON field value if set, zero value otherwise.
func (o *GithubRESTConnectionAttributes) GetImportAccountEntJSON() string {
	if o == nil || IsNil(o.ImportAccountEntJSON) {
		var ret string
		return ret
	}
	return *o.ImportAccountEntJSON
}

// GetImportAccountEntJSONOk returns a tuple with the ImportAccountEntJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRESTConnectionAttributes) GetImportAccountEntJSONOk() (*string, bool) {
	if o == nil || IsNil(o.ImportAccountEntJSON) {
		return nil, false
	}
	return o.ImportAccountEntJSON, true
}

// HasImportAccountEntJSON returns a boolean if a field has been set.
func (o *GithubRESTConnectionAttributes) HasImportAccountEntJSON() bool {
	if o != nil && !IsNil(o.ImportAccountEntJSON) {
		return true
	}

	return false
}

// SetImportAccountEntJSON gets a reference to the given string and assigns it to the ImportAccountEntJSON field.
func (o *GithubRESTConnectionAttributes) SetImportAccountEntJSON(v string) {
	o.ImportAccountEntJSON = &v
}

// GetSTATUS_THRESHOLD_CONFIG returns the STATUS_THRESHOLD_CONFIG field value if set, zero value otherwise.
func (o *GithubRESTConnectionAttributes) GetSTATUS_THRESHOLD_CONFIG() string {
	if o == nil || IsNil(o.STATUS_THRESHOLD_CONFIG) {
		var ret string
		return ret
	}
	return *o.STATUS_THRESHOLD_CONFIG
}

// GetSTATUS_THRESHOLD_CONFIGOk returns a tuple with the STATUS_THRESHOLD_CONFIG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRESTConnectionAttributes) GetSTATUS_THRESHOLD_CONFIGOk() (*string, bool) {
	if o == nil || IsNil(o.STATUS_THRESHOLD_CONFIG) {
		return nil, false
	}
	return o.STATUS_THRESHOLD_CONFIG, true
}

// HasSTATUS_THRESHOLD_CONFIG returns a boolean if a field has been set.
func (o *GithubRESTConnectionAttributes) HasSTATUS_THRESHOLD_CONFIG() bool {
	if o != nil && !IsNil(o.STATUS_THRESHOLD_CONFIG) {
		return true
	}

	return false
}

// SetSTATUS_THRESHOLD_CONFIG gets a reference to the given string and assigns it to the STATUS_THRESHOLD_CONFIG field.
func (o *GithubRESTConnectionAttributes) SetSTATUS_THRESHOLD_CONFIG(v string) {
	o.STATUS_THRESHOLD_CONFIG = &v
}

// GetACCESS_TOKENS returns the ACCESS_TOKENS field value if set, zero value otherwise.
func (o *GithubRESTConnectionAttributes) GetACCESS_TOKENS() string {
	if o == nil || IsNil(o.ACCESS_TOKENS) {
		var ret string
		return ret
	}
	return *o.ACCESS_TOKENS
}

// GetACCESS_TOKENSOk returns a tuple with the ACCESS_TOKENS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRESTConnectionAttributes) GetACCESS_TOKENSOk() (*string, bool) {
	if o == nil || IsNil(o.ACCESS_TOKENS) {
		return nil, false
	}
	return o.ACCESS_TOKENS, true
}

// HasACCESS_TOKENS returns a boolean if a field has been set.
func (o *GithubRESTConnectionAttributes) HasACCESS_TOKENS() bool {
	if o != nil && !IsNil(o.ACCESS_TOKENS) {
		return true
	}

	return false
}

// SetACCESS_TOKENS gets a reference to the given string and assigns it to the ACCESS_TOKENS field.
func (o *GithubRESTConnectionAttributes) SetACCESS_TOKENS(v string) {
	o.ACCESS_TOKENS = &v
}

// GetConnectionTimeoutConfig returns the ConnectionTimeoutConfig field value if set, zero value otherwise.
func (o *GithubRESTConnectionAttributes) GetConnectionTimeoutConfig() ConnectionTimeoutConfig {
	if o == nil || IsNil(o.ConnectionTimeoutConfig) {
		var ret ConnectionTimeoutConfig
		return ret
	}
	return *o.ConnectionTimeoutConfig
}

// GetConnectionTimeoutConfigOk returns a tuple with the ConnectionTimeoutConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRESTConnectionAttributes) GetConnectionTimeoutConfigOk() (*ConnectionTimeoutConfig, bool) {
	if o == nil || IsNil(o.ConnectionTimeoutConfig) {
		return nil, false
	}
	return o.ConnectionTimeoutConfig, true
}

// HasConnectionTimeoutConfig returns a boolean if a field has been set.
func (o *GithubRESTConnectionAttributes) HasConnectionTimeoutConfig() bool {
	if o != nil && !IsNil(o.ConnectionTimeoutConfig) {
		return true
	}

	return false
}

// SetConnectionTimeoutConfig gets a reference to the given ConnectionTimeoutConfig and assigns it to the ConnectionTimeoutConfig field.
func (o *GithubRESTConnectionAttributes) SetConnectionTimeoutConfig(v ConnectionTimeoutConfig) {
	o.ConnectionTimeoutConfig = &v
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *GithubRESTConnectionAttributes) GetConnectionType() string {
	if o == nil || IsNil(o.ConnectionType) {
		var ret string
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRESTConnectionAttributes) GetConnectionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionType) {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *GithubRESTConnectionAttributes) HasConnectionType() bool {
	if o != nil && !IsNil(o.ConnectionType) {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given string and assigns it to the ConnectionType field.
func (o *GithubRESTConnectionAttributes) SetConnectionType(v string) {
	o.ConnectionType = &v
}

// GetIsTimeoutConfigValidated returns the IsTimeoutConfigValidated field value if set, zero value otherwise.
func (o *GithubRESTConnectionAttributes) GetIsTimeoutConfigValidated() bool {
	if o == nil || IsNil(o.IsTimeoutConfigValidated) {
		var ret bool
		return ret
	}
	return *o.IsTimeoutConfigValidated
}

// GetIsTimeoutConfigValidatedOk returns a tuple with the IsTimeoutConfigValidated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRESTConnectionAttributes) GetIsTimeoutConfigValidatedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsTimeoutConfigValidated) {
		return nil, false
	}
	return o.IsTimeoutConfigValidated, true
}

// HasIsTimeoutConfigValidated returns a boolean if a field has been set.
func (o *GithubRESTConnectionAttributes) HasIsTimeoutConfigValidated() bool {
	if o != nil && !IsNil(o.IsTimeoutConfigValidated) {
		return true
	}

	return false
}

// SetIsTimeoutConfigValidated gets a reference to the given bool and assigns it to the IsTimeoutConfigValidated field.
func (o *GithubRESTConnectionAttributes) SetIsTimeoutConfigValidated(v bool) {
	o.IsTimeoutConfigValidated = &v
}

func (o GithubRESTConnectionAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GithubRESTConnectionAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsTimeoutSupported) {
		toSerialize["isTimeoutSupported"] = o.IsTimeoutSupported
	}
	if !IsNil(o.ConnectionJSON) {
		toSerialize["ConnectionJSON"] = o.ConnectionJSON
	}
	if !IsNil(o.PAM_CONFIG) {
		toSerialize["PAM_CONFIG"] = o.PAM_CONFIG
	}
	if !IsNil(o.ORGANIZATION_LIST) {
		toSerialize["ORGANIZATION_LIST"] = o.ORGANIZATION_LIST
	}
	if !IsNil(o.ImportAccountEntJSON) {
		toSerialize["ImportAccountEntJSON"] = o.ImportAccountEntJSON
	}
	if !IsNil(o.STATUS_THRESHOLD_CONFIG) {
		toSerialize["STATUS_THRESHOLD_CONFIG"] = o.STATUS_THRESHOLD_CONFIG
	}
	if !IsNil(o.ACCESS_TOKENS) {
		toSerialize["ACCESS_TOKENS"] = o.ACCESS_TOKENS
	}
	if !IsNil(o.ConnectionTimeoutConfig) {
		toSerialize["connectionTimeoutConfig"] = o.ConnectionTimeoutConfig
	}
	if !IsNil(o.ConnectionType) {
		toSerialize["connectionType"] = o.ConnectionType
	}
	if !IsNil(o.IsTimeoutConfigValidated) {
		toSerialize["isTimeoutConfigValidated"] = o.IsTimeoutConfigValidated
	}
	return toSerialize, nil
}

type NullableGithubRESTConnectionAttributes struct {
	value *GithubRESTConnectionAttributes
	isSet bool
}

func (v NullableGithubRESTConnectionAttributes) Get() *GithubRESTConnectionAttributes {
	return v.value
}

func (v *NullableGithubRESTConnectionAttributes) Set(val *GithubRESTConnectionAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubRESTConnectionAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubRESTConnectionAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubRESTConnectionAttributes(val *GithubRESTConnectionAttributes) *NullableGithubRESTConnectionAttributes {
	return &NullableGithubRESTConnectionAttributes{value: val, isSet: true}
}

func (v NullableGithubRESTConnectionAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubRESTConnectionAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
