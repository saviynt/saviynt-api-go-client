/*
Entitlements Management API

API for creating, updating, retrieving, and deleting Entitlements data in EIC

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RemoveEntitlementFromRoleRequestEntitlementsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoveEntitlementFromRoleRequestEntitlementsInner{}

// RemoveEntitlementFromRoleRequestEntitlementsInner struct for RemoveEntitlementFromRoleRequestEntitlementsInner
type RemoveEntitlementFromRoleRequestEntitlementsInner struct {
	// The entitlement value.
	Entitlementvalue string `json:"entitlementvalue"`
	// The type of entitlement.
	Entitlementtype string `json:"entitlementtype"`
	// The endpoint associated with the entitlement.
	Endpoint string `json:"endpoint"`
}

type _RemoveEntitlementFromRoleRequestEntitlementsInner RemoveEntitlementFromRoleRequestEntitlementsInner

// NewRemoveEntitlementFromRoleRequestEntitlementsInner instantiates a new RemoveEntitlementFromRoleRequestEntitlementsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoveEntitlementFromRoleRequestEntitlementsInner(entitlementvalue string, entitlementtype string, endpoint string) *RemoveEntitlementFromRoleRequestEntitlementsInner {
	this := RemoveEntitlementFromRoleRequestEntitlementsInner{}
	this.Entitlementvalue = entitlementvalue
	this.Entitlementtype = entitlementtype
	this.Endpoint = endpoint
	return &this
}

// NewRemoveEntitlementFromRoleRequestEntitlementsInnerWithDefaults instantiates a new RemoveEntitlementFromRoleRequestEntitlementsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoveEntitlementFromRoleRequestEntitlementsInnerWithDefaults() *RemoveEntitlementFromRoleRequestEntitlementsInner {
	this := RemoveEntitlementFromRoleRequestEntitlementsInner{}
	return &this
}

// GetEntitlementvalue returns the Entitlementvalue field value
func (o *RemoveEntitlementFromRoleRequestEntitlementsInner) GetEntitlementvalue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Entitlementvalue
}

// GetEntitlementvalueOk returns a tuple with the Entitlementvalue field value
// and a boolean to check if the value has been set.
func (o *RemoveEntitlementFromRoleRequestEntitlementsInner) GetEntitlementvalueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entitlementvalue, true
}

// SetEntitlementvalue sets field value
func (o *RemoveEntitlementFromRoleRequestEntitlementsInner) SetEntitlementvalue(v string) {
	o.Entitlementvalue = v
}

// GetEntitlementtype returns the Entitlementtype field value
func (o *RemoveEntitlementFromRoleRequestEntitlementsInner) GetEntitlementtype() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Entitlementtype
}

// GetEntitlementtypeOk returns a tuple with the Entitlementtype field value
// and a boolean to check if the value has been set.
func (o *RemoveEntitlementFromRoleRequestEntitlementsInner) GetEntitlementtypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entitlementtype, true
}

// SetEntitlementtype sets field value
func (o *RemoveEntitlementFromRoleRequestEntitlementsInner) SetEntitlementtype(v string) {
	o.Entitlementtype = v
}

// GetEndpoint returns the Endpoint field value
func (o *RemoveEntitlementFromRoleRequestEntitlementsInner) GetEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *RemoveEntitlementFromRoleRequestEntitlementsInner) GetEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *RemoveEntitlementFromRoleRequestEntitlementsInner) SetEndpoint(v string) {
	o.Endpoint = v
}

func (o RemoveEntitlementFromRoleRequestEntitlementsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoveEntitlementFromRoleRequestEntitlementsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entitlementvalue"] = o.Entitlementvalue
	toSerialize["entitlementtype"] = o.Entitlementtype
	toSerialize["endpoint"] = o.Endpoint
	return toSerialize, nil
}

func (o *RemoveEntitlementFromRoleRequestEntitlementsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"entitlementvalue",
		"entitlementtype",
		"endpoint",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRemoveEntitlementFromRoleRequestEntitlementsInner := _RemoveEntitlementFromRoleRequestEntitlementsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRemoveEntitlementFromRoleRequestEntitlementsInner)

	if err != nil {
		return err
	}

	*o = RemoveEntitlementFromRoleRequestEntitlementsInner(varRemoveEntitlementFromRoleRequestEntitlementsInner)

	return err
}

type NullableRemoveEntitlementFromRoleRequestEntitlementsInner struct {
	value *RemoveEntitlementFromRoleRequestEntitlementsInner
	isSet bool
}

func (v NullableRemoveEntitlementFromRoleRequestEntitlementsInner) Get() *RemoveEntitlementFromRoleRequestEntitlementsInner {
	return v.value
}

func (v *NullableRemoveEntitlementFromRoleRequestEntitlementsInner) Set(val *RemoveEntitlementFromRoleRequestEntitlementsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoveEntitlementFromRoleRequestEntitlementsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoveEntitlementFromRoleRequestEntitlementsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoveEntitlementFromRoleRequestEntitlementsInner(val *RemoveEntitlementFromRoleRequestEntitlementsInner) *NullableRemoveEntitlementFromRoleRequestEntitlementsInner {
	return &NullableRemoveEntitlementFromRoleRequestEntitlementsInner{value: val, isSet: true}
}

func (v NullableRemoveEntitlementFromRoleRequestEntitlementsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoveEntitlementFromRoleRequestEntitlementsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


