/*
Entitlements Management API

API for creating, updating, retrieving, and deleting Entitlements data in EIC

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetEntitlementValuesForEndpointRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEntitlementValuesForEndpointRequest{}

// GetEntitlementValuesForEndpointRequest struct for GetEntitlementValuesForEndpointRequest
type GetEntitlementValuesForEndpointRequest struct {
	Endpoint string `json:"endpoint"`
	EntitlementType *string `json:"entitlementType,omitempty"`
	Entownerwithrank *string `json:"entownerwithrank,omitempty"`
	// If 'true', returns entitlementmap details.
	Returnentitlementmap *string `json:"returnentitlementmap,omitempty"`
	// Maximum number of records to return.
	Max *string `json:"max,omitempty"`
	// Pagination offset.
	Offset *string `json:"offset,omitempty"`
}

type _GetEntitlementValuesForEndpointRequest GetEntitlementValuesForEndpointRequest

// NewGetEntitlementValuesForEndpointRequest instantiates a new GetEntitlementValuesForEndpointRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEntitlementValuesForEndpointRequest(endpoint string) *GetEntitlementValuesForEndpointRequest {
	this := GetEntitlementValuesForEndpointRequest{}
	this.Endpoint = endpoint
	return &this
}

// NewGetEntitlementValuesForEndpointRequestWithDefaults instantiates a new GetEntitlementValuesForEndpointRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEntitlementValuesForEndpointRequestWithDefaults() *GetEntitlementValuesForEndpointRequest {
	this := GetEntitlementValuesForEndpointRequest{}
	return &this
}

// GetEndpoint returns the Endpoint field value
func (o *GetEntitlementValuesForEndpointRequest) GetEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *GetEntitlementValuesForEndpointRequest) GetEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *GetEntitlementValuesForEndpointRequest) SetEndpoint(v string) {
	o.Endpoint = v
}

// GetEntitlementType returns the EntitlementType field value if set, zero value otherwise.
func (o *GetEntitlementValuesForEndpointRequest) GetEntitlementType() string {
	if o == nil || IsNil(o.EntitlementType) {
		var ret string
		return ret
	}
	return *o.EntitlementType
}

// GetEntitlementTypeOk returns a tuple with the EntitlementType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementValuesForEndpointRequest) GetEntitlementTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EntitlementType) {
		return nil, false
	}
	return o.EntitlementType, true
}

// HasEntitlementType returns a boolean if a field has been set.
func (o *GetEntitlementValuesForEndpointRequest) HasEntitlementType() bool {
	if o != nil && !IsNil(o.EntitlementType) {
		return true
	}

	return false
}

// SetEntitlementType gets a reference to the given string and assigns it to the EntitlementType field.
func (o *GetEntitlementValuesForEndpointRequest) SetEntitlementType(v string) {
	o.EntitlementType = &v
}

// GetEntownerwithrank returns the Entownerwithrank field value if set, zero value otherwise.
func (o *GetEntitlementValuesForEndpointRequest) GetEntownerwithrank() string {
	if o == nil || IsNil(o.Entownerwithrank) {
		var ret string
		return ret
	}
	return *o.Entownerwithrank
}

// GetEntownerwithrankOk returns a tuple with the Entownerwithrank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementValuesForEndpointRequest) GetEntownerwithrankOk() (*string, bool) {
	if o == nil || IsNil(o.Entownerwithrank) {
		return nil, false
	}
	return o.Entownerwithrank, true
}

// HasEntownerwithrank returns a boolean if a field has been set.
func (o *GetEntitlementValuesForEndpointRequest) HasEntownerwithrank() bool {
	if o != nil && !IsNil(o.Entownerwithrank) {
		return true
	}

	return false
}

// SetEntownerwithrank gets a reference to the given string and assigns it to the Entownerwithrank field.
func (o *GetEntitlementValuesForEndpointRequest) SetEntownerwithrank(v string) {
	o.Entownerwithrank = &v
}

// GetReturnentitlementmap returns the Returnentitlementmap field value if set, zero value otherwise.
func (o *GetEntitlementValuesForEndpointRequest) GetReturnentitlementmap() string {
	if o == nil || IsNil(o.Returnentitlementmap) {
		var ret string
		return ret
	}
	return *o.Returnentitlementmap
}

// GetReturnentitlementmapOk returns a tuple with the Returnentitlementmap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementValuesForEndpointRequest) GetReturnentitlementmapOk() (*string, bool) {
	if o == nil || IsNil(o.Returnentitlementmap) {
		return nil, false
	}
	return o.Returnentitlementmap, true
}

// HasReturnentitlementmap returns a boolean if a field has been set.
func (o *GetEntitlementValuesForEndpointRequest) HasReturnentitlementmap() bool {
	if o != nil && !IsNil(o.Returnentitlementmap) {
		return true
	}

	return false
}

// SetReturnentitlementmap gets a reference to the given string and assigns it to the Returnentitlementmap field.
func (o *GetEntitlementValuesForEndpointRequest) SetReturnentitlementmap(v string) {
	o.Returnentitlementmap = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *GetEntitlementValuesForEndpointRequest) GetMax() string {
	if o == nil || IsNil(o.Max) {
		var ret string
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementValuesForEndpointRequest) GetMaxOk() (*string, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *GetEntitlementValuesForEndpointRequest) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given string and assigns it to the Max field.
func (o *GetEntitlementValuesForEndpointRequest) SetMax(v string) {
	o.Max = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *GetEntitlementValuesForEndpointRequest) GetOffset() string {
	if o == nil || IsNil(o.Offset) {
		var ret string
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementValuesForEndpointRequest) GetOffsetOk() (*string, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *GetEntitlementValuesForEndpointRequest) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given string and assigns it to the Offset field.
func (o *GetEntitlementValuesForEndpointRequest) SetOffset(v string) {
	o.Offset = &v
}

func (o GetEntitlementValuesForEndpointRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEntitlementValuesForEndpointRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["endpoint"] = o.Endpoint
	if !IsNil(o.EntitlementType) {
		toSerialize["entitlementType"] = o.EntitlementType
	}
	if !IsNil(o.Entownerwithrank) {
		toSerialize["entownerwithrank"] = o.Entownerwithrank
	}
	if !IsNil(o.Returnentitlementmap) {
		toSerialize["returnentitlementmap"] = o.Returnentitlementmap
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	return toSerialize, nil
}

func (o *GetEntitlementValuesForEndpointRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"endpoint",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetEntitlementValuesForEndpointRequest := _GetEntitlementValuesForEndpointRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetEntitlementValuesForEndpointRequest)

	if err != nil {
		return err
	}

	*o = GetEntitlementValuesForEndpointRequest(varGetEntitlementValuesForEndpointRequest)

	return err
}

type NullableGetEntitlementValuesForEndpointRequest struct {
	value *GetEntitlementValuesForEndpointRequest
	isSet bool
}

func (v NullableGetEntitlementValuesForEndpointRequest) Get() *GetEntitlementValuesForEndpointRequest {
	return v.value
}

func (v *NullableGetEntitlementValuesForEndpointRequest) Set(val *GetEntitlementValuesForEndpointRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEntitlementValuesForEndpointRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEntitlementValuesForEndpointRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEntitlementValuesForEndpointRequest(val *GetEntitlementValuesForEndpointRequest) *NullableGetEntitlementValuesForEndpointRequest {
	return &NullableGetEntitlementValuesForEndpointRequest{value: val, isSet: true}
}

func (v NullableGetEntitlementValuesForEndpointRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEntitlementValuesForEndpointRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


