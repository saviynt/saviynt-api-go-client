/*
Entitlements Management API

API for creating, updating, retrieving, and deleting Entitlements data in EIC

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateUpdateEntitlementRequestEntitlementmap type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUpdateEntitlementRequestEntitlementmap{}

// CreateUpdateEntitlementRequestEntitlementmap Mapping details for the entitlement.
type CreateUpdateEntitlementRequestEntitlementmap struct {
	Entitlementvalue *string `json:"entitlementvalue,omitempty"`
	Entitlementtype *string `json:"entitlementtype,omitempty"`
	Endpoint *string `json:"endpoint,omitempty"`
	Requestfilter *string `json:"requestfilter,omitempty"`
	Excludeentitlement *string `json:"excludeentitlement,omitempty"`
	Adddependenttask *string `json:"adddependenttask,omitempty"`
	Removedependententtask *string `json:"removedependententtask,omitempty"`
	UpdateType *string `json:"updateType,omitempty"`
}

// NewCreateUpdateEntitlementRequestEntitlementmap instantiates a new CreateUpdateEntitlementRequestEntitlementmap object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUpdateEntitlementRequestEntitlementmap() *CreateUpdateEntitlementRequestEntitlementmap {
	this := CreateUpdateEntitlementRequestEntitlementmap{}
	var updateType string = "ADD"
	this.UpdateType = &updateType
	return &this
}

// NewCreateUpdateEntitlementRequestEntitlementmapWithDefaults instantiates a new CreateUpdateEntitlementRequestEntitlementmap object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUpdateEntitlementRequestEntitlementmapWithDefaults() *CreateUpdateEntitlementRequestEntitlementmap {
	this := CreateUpdateEntitlementRequestEntitlementmap{}
	var updateType string = "ADD"
	this.UpdateType = &updateType
	return &this
}

// GetEntitlementvalue returns the Entitlementvalue field value if set, zero value otherwise.
func (o *CreateUpdateEntitlementRequestEntitlementmap) GetEntitlementvalue() string {
	if o == nil || IsNil(o.Entitlementvalue) {
		var ret string
		return ret
	}
	return *o.Entitlementvalue
}

// GetEntitlementvalueOk returns a tuple with the Entitlementvalue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmap) GetEntitlementvalueOk() (*string, bool) {
	if o == nil || IsNil(o.Entitlementvalue) {
		return nil, false
	}
	return o.Entitlementvalue, true
}

// HasEntitlementvalue returns a boolean if a field has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmap) HasEntitlementvalue() bool {
	if o != nil && !IsNil(o.Entitlementvalue) {
		return true
	}

	return false
}

// SetEntitlementvalue gets a reference to the given string and assigns it to the Entitlementvalue field.
func (o *CreateUpdateEntitlementRequestEntitlementmap) SetEntitlementvalue(v string) {
	o.Entitlementvalue = &v
}

// GetEntitlementtype returns the Entitlementtype field value if set, zero value otherwise.
func (o *CreateUpdateEntitlementRequestEntitlementmap) GetEntitlementtype() string {
	if o == nil || IsNil(o.Entitlementtype) {
		var ret string
		return ret
	}
	return *o.Entitlementtype
}

// GetEntitlementtypeOk returns a tuple with the Entitlementtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmap) GetEntitlementtypeOk() (*string, bool) {
	if o == nil || IsNil(o.Entitlementtype) {
		return nil, false
	}
	return o.Entitlementtype, true
}

// HasEntitlementtype returns a boolean if a field has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmap) HasEntitlementtype() bool {
	if o != nil && !IsNil(o.Entitlementtype) {
		return true
	}

	return false
}

// SetEntitlementtype gets a reference to the given string and assigns it to the Entitlementtype field.
func (o *CreateUpdateEntitlementRequestEntitlementmap) SetEntitlementtype(v string) {
	o.Entitlementtype = &v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *CreateUpdateEntitlementRequestEntitlementmap) GetEndpoint() string {
	if o == nil || IsNil(o.Endpoint) {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmap) GetEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmap) HasEndpoint() bool {
	if o != nil && !IsNil(o.Endpoint) {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *CreateUpdateEntitlementRequestEntitlementmap) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetRequestfilter returns the Requestfilter field value if set, zero value otherwise.
func (o *CreateUpdateEntitlementRequestEntitlementmap) GetRequestfilter() string {
	if o == nil || IsNil(o.Requestfilter) {
		var ret string
		return ret
	}
	return *o.Requestfilter
}

// GetRequestfilterOk returns a tuple with the Requestfilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmap) GetRequestfilterOk() (*string, bool) {
	if o == nil || IsNil(o.Requestfilter) {
		return nil, false
	}
	return o.Requestfilter, true
}

// HasRequestfilter returns a boolean if a field has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmap) HasRequestfilter() bool {
	if o != nil && !IsNil(o.Requestfilter) {
		return true
	}

	return false
}

// SetRequestfilter gets a reference to the given string and assigns it to the Requestfilter field.
func (o *CreateUpdateEntitlementRequestEntitlementmap) SetRequestfilter(v string) {
	o.Requestfilter = &v
}

// GetExcludeentitlement returns the Excludeentitlement field value if set, zero value otherwise.
func (o *CreateUpdateEntitlementRequestEntitlementmap) GetExcludeentitlement() string {
	if o == nil || IsNil(o.Excludeentitlement) {
		var ret string
		return ret
	}
	return *o.Excludeentitlement
}

// GetExcludeentitlementOk returns a tuple with the Excludeentitlement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmap) GetExcludeentitlementOk() (*string, bool) {
	if o == nil || IsNil(o.Excludeentitlement) {
		return nil, false
	}
	return o.Excludeentitlement, true
}

// HasExcludeentitlement returns a boolean if a field has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmap) HasExcludeentitlement() bool {
	if o != nil && !IsNil(o.Excludeentitlement) {
		return true
	}

	return false
}

// SetExcludeentitlement gets a reference to the given string and assigns it to the Excludeentitlement field.
func (o *CreateUpdateEntitlementRequestEntitlementmap) SetExcludeentitlement(v string) {
	o.Excludeentitlement = &v
}

// GetAdddependenttask returns the Adddependenttask field value if set, zero value otherwise.
func (o *CreateUpdateEntitlementRequestEntitlementmap) GetAdddependenttask() string {
	if o == nil || IsNil(o.Adddependenttask) {
		var ret string
		return ret
	}
	return *o.Adddependenttask
}

// GetAdddependenttaskOk returns a tuple with the Adddependenttask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmap) GetAdddependenttaskOk() (*string, bool) {
	if o == nil || IsNil(o.Adddependenttask) {
		return nil, false
	}
	return o.Adddependenttask, true
}

// HasAdddependenttask returns a boolean if a field has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmap) HasAdddependenttask() bool {
	if o != nil && !IsNil(o.Adddependenttask) {
		return true
	}

	return false
}

// SetAdddependenttask gets a reference to the given string and assigns it to the Adddependenttask field.
func (o *CreateUpdateEntitlementRequestEntitlementmap) SetAdddependenttask(v string) {
	o.Adddependenttask = &v
}

// GetRemovedependententtask returns the Removedependententtask field value if set, zero value otherwise.
func (o *CreateUpdateEntitlementRequestEntitlementmap) GetRemovedependententtask() string {
	if o == nil || IsNil(o.Removedependententtask) {
		var ret string
		return ret
	}
	return *o.Removedependententtask
}

// GetRemovedependententtaskOk returns a tuple with the Removedependententtask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmap) GetRemovedependententtaskOk() (*string, bool) {
	if o == nil || IsNil(o.Removedependententtask) {
		return nil, false
	}
	return o.Removedependententtask, true
}

// HasRemovedependententtask returns a boolean if a field has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmap) HasRemovedependententtask() bool {
	if o != nil && !IsNil(o.Removedependententtask) {
		return true
	}

	return false
}

// SetRemovedependententtask gets a reference to the given string and assigns it to the Removedependententtask field.
func (o *CreateUpdateEntitlementRequestEntitlementmap) SetRemovedependententtask(v string) {
	o.Removedependententtask = &v
}

// GetUpdateType returns the UpdateType field value if set, zero value otherwise.
func (o *CreateUpdateEntitlementRequestEntitlementmap) GetUpdateType() string {
	if o == nil || IsNil(o.UpdateType) {
		var ret string
		return ret
	}
	return *o.UpdateType
}

// GetUpdateTypeOk returns a tuple with the UpdateType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmap) GetUpdateTypeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateType) {
		return nil, false
	}
	return o.UpdateType, true
}

// HasUpdateType returns a boolean if a field has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmap) HasUpdateType() bool {
	if o != nil && !IsNil(o.UpdateType) {
		return true
	}

	return false
}

// SetUpdateType gets a reference to the given string and assigns it to the UpdateType field.
func (o *CreateUpdateEntitlementRequestEntitlementmap) SetUpdateType(v string) {
	o.UpdateType = &v
}

func (o CreateUpdateEntitlementRequestEntitlementmap) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUpdateEntitlementRequestEntitlementmap) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Entitlementvalue) {
		toSerialize["entitlementvalue"] = o.Entitlementvalue
	}
	if !IsNil(o.Entitlementtype) {
		toSerialize["entitlementtype"] = o.Entitlementtype
	}
	if !IsNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	if !IsNil(o.Requestfilter) {
		toSerialize["requestfilter"] = o.Requestfilter
	}
	if !IsNil(o.Excludeentitlement) {
		toSerialize["excludeentitlement"] = o.Excludeentitlement
	}
	if !IsNil(o.Adddependenttask) {
		toSerialize["adddependenttask"] = o.Adddependenttask
	}
	if !IsNil(o.Removedependententtask) {
		toSerialize["removedependententtask"] = o.Removedependententtask
	}
	if !IsNil(o.UpdateType) {
		toSerialize["updateType"] = o.UpdateType
	}
	return toSerialize, nil
}

type NullableCreateUpdateEntitlementRequestEntitlementmap struct {
	value *CreateUpdateEntitlementRequestEntitlementmap
	isSet bool
}

func (v NullableCreateUpdateEntitlementRequestEntitlementmap) Get() *CreateUpdateEntitlementRequestEntitlementmap {
	return v.value
}

func (v *NullableCreateUpdateEntitlementRequestEntitlementmap) Set(val *CreateUpdateEntitlementRequestEntitlementmap) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUpdateEntitlementRequestEntitlementmap) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUpdateEntitlementRequestEntitlementmap) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUpdateEntitlementRequestEntitlementmap(val *CreateUpdateEntitlementRequestEntitlementmap) *NullableCreateUpdateEntitlementRequestEntitlementmap {
	return &NullableCreateUpdateEntitlementRequestEntitlementmap{value: val, isSet: true}
}

func (v NullableCreateUpdateEntitlementRequestEntitlementmap) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUpdateEntitlementRequestEntitlementmap) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


