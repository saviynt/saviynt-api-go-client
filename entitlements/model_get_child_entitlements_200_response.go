/*
Entitlements Management API

API for creating, updating, retrieving, and deleting Entitlements data in EIC

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetChildEntitlements200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetChildEntitlements200Response{}

// GetChildEntitlements200Response struct for GetChildEntitlements200Response
type GetChildEntitlements200Response struct {
	ChildEntitlementsList []GetChildEntitlements200ResponseChildEntitlementsListInner `json:"childEntitlementsList,omitempty"`
	Displaycount *float32 `json:"displaycount,omitempty"`
	Errorcode *string `json:"errorcode,omitempty"`
	Msg *string `json:"msg,omitempty"`
	Totalcount *float32 `json:"totalcount,omitempty"`
}

// NewGetChildEntitlements200Response instantiates a new GetChildEntitlements200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetChildEntitlements200Response() *GetChildEntitlements200Response {
	this := GetChildEntitlements200Response{}
	return &this
}

// NewGetChildEntitlements200ResponseWithDefaults instantiates a new GetChildEntitlements200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetChildEntitlements200ResponseWithDefaults() *GetChildEntitlements200Response {
	this := GetChildEntitlements200Response{}
	return &this
}

// GetChildEntitlementsList returns the ChildEntitlementsList field value if set, zero value otherwise.
func (o *GetChildEntitlements200Response) GetChildEntitlementsList() []GetChildEntitlements200ResponseChildEntitlementsListInner {
	if o == nil || IsNil(o.ChildEntitlementsList) {
		var ret []GetChildEntitlements200ResponseChildEntitlementsListInner
		return ret
	}
	return o.ChildEntitlementsList
}

// GetChildEntitlementsListOk returns a tuple with the ChildEntitlementsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildEntitlements200Response) GetChildEntitlementsListOk() ([]GetChildEntitlements200ResponseChildEntitlementsListInner, bool) {
	if o == nil || IsNil(o.ChildEntitlementsList) {
		return nil, false
	}
	return o.ChildEntitlementsList, true
}

// HasChildEntitlementsList returns a boolean if a field has been set.
func (o *GetChildEntitlements200Response) HasChildEntitlementsList() bool {
	if o != nil && !IsNil(o.ChildEntitlementsList) {
		return true
	}

	return false
}

// SetChildEntitlementsList gets a reference to the given []GetChildEntitlements200ResponseChildEntitlementsListInner and assigns it to the ChildEntitlementsList field.
func (o *GetChildEntitlements200Response) SetChildEntitlementsList(v []GetChildEntitlements200ResponseChildEntitlementsListInner) {
	o.ChildEntitlementsList = v
}

// GetDisplaycount returns the Displaycount field value if set, zero value otherwise.
func (o *GetChildEntitlements200Response) GetDisplaycount() float32 {
	if o == nil || IsNil(o.Displaycount) {
		var ret float32
		return ret
	}
	return *o.Displaycount
}

// GetDisplaycountOk returns a tuple with the Displaycount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildEntitlements200Response) GetDisplaycountOk() (*float32, bool) {
	if o == nil || IsNil(o.Displaycount) {
		return nil, false
	}
	return o.Displaycount, true
}

// HasDisplaycount returns a boolean if a field has been set.
func (o *GetChildEntitlements200Response) HasDisplaycount() bool {
	if o != nil && !IsNil(o.Displaycount) {
		return true
	}

	return false
}

// SetDisplaycount gets a reference to the given float32 and assigns it to the Displaycount field.
func (o *GetChildEntitlements200Response) SetDisplaycount(v float32) {
	o.Displaycount = &v
}

// GetErrorcode returns the Errorcode field value if set, zero value otherwise.
func (o *GetChildEntitlements200Response) GetErrorcode() string {
	if o == nil || IsNil(o.Errorcode) {
		var ret string
		return ret
	}
	return *o.Errorcode
}

// GetErrorcodeOk returns a tuple with the Errorcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildEntitlements200Response) GetErrorcodeOk() (*string, bool) {
	if o == nil || IsNil(o.Errorcode) {
		return nil, false
	}
	return o.Errorcode, true
}

// HasErrorcode returns a boolean if a field has been set.
func (o *GetChildEntitlements200Response) HasErrorcode() bool {
	if o != nil && !IsNil(o.Errorcode) {
		return true
	}

	return false
}

// SetErrorcode gets a reference to the given string and assigns it to the Errorcode field.
func (o *GetChildEntitlements200Response) SetErrorcode(v string) {
	o.Errorcode = &v
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *GetChildEntitlements200Response) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildEntitlements200Response) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *GetChildEntitlements200Response) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *GetChildEntitlements200Response) SetMsg(v string) {
	o.Msg = &v
}

// GetTotalcount returns the Totalcount field value if set, zero value otherwise.
func (o *GetChildEntitlements200Response) GetTotalcount() float32 {
	if o == nil || IsNil(o.Totalcount) {
		var ret float32
		return ret
	}
	return *o.Totalcount
}

// GetTotalcountOk returns a tuple with the Totalcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildEntitlements200Response) GetTotalcountOk() (*float32, bool) {
	if o == nil || IsNil(o.Totalcount) {
		return nil, false
	}
	return o.Totalcount, true
}

// HasTotalcount returns a boolean if a field has been set.
func (o *GetChildEntitlements200Response) HasTotalcount() bool {
	if o != nil && !IsNil(o.Totalcount) {
		return true
	}

	return false
}

// SetTotalcount gets a reference to the given float32 and assigns it to the Totalcount field.
func (o *GetChildEntitlements200Response) SetTotalcount(v float32) {
	o.Totalcount = &v
}

func (o GetChildEntitlements200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetChildEntitlements200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChildEntitlementsList) {
		toSerialize["childEntitlementsList"] = o.ChildEntitlementsList
	}
	if !IsNil(o.Displaycount) {
		toSerialize["displaycount"] = o.Displaycount
	}
	if !IsNil(o.Errorcode) {
		toSerialize["errorcode"] = o.Errorcode
	}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.Totalcount) {
		toSerialize["totalcount"] = o.Totalcount
	}
	return toSerialize, nil
}

type NullableGetChildEntitlements200Response struct {
	value *GetChildEntitlements200Response
	isSet bool
}

func (v NullableGetChildEntitlements200Response) Get() *GetChildEntitlements200Response {
	return v.value
}

func (v *NullableGetChildEntitlements200Response) Set(val *GetChildEntitlements200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetChildEntitlements200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetChildEntitlements200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetChildEntitlements200Response(val *GetChildEntitlements200Response) *NullableGetChildEntitlements200Response {
	return &NullableGetChildEntitlements200Response{value: val, isSet: true}
}

func (v NullableGetChildEntitlements200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetChildEntitlements200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


