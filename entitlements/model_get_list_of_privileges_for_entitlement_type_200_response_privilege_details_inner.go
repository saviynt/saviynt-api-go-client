/*
Entitlements Management API

API for creating, updating, retrieving, and deleting Entitlements data in EIC

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner{}

// GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner struct for GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner
type GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner struct {
	ActionString *string `json:"actionString,omitempty"`
	Attribute *string `json:"attribute,omitempty"`
	AttributeConfig *string `json:"attribute_config,omitempty"`
	AttributeType *string `json:"attribute_type,omitempty"`
	AttributeValues *string `json:"attribute_values,omitempty"`
	Attributegroup *string `json:"attributegroup,omitempty"`
	Childaction *string `json:"childaction,omitempty"`
	Defaultvalue *string `json:"defaultvalue,omitempty"`
	Descriptionascsv *string `json:"descriptionascsv,omitempty"`
	Editable *bool `json:"editable,omitempty"`
	EntitlementTypes *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInnerEntitlementTypes `json:"entitlement_types,omitempty"`
	EntitlementsColumn *float32 `json:"entitlements_column,omitempty"`
	Hideoncreate *bool `json:"hideoncreate,omitempty"`
	Hideonupd *bool `json:"hideonupd,omitempty"`
	Label *string `json:"label,omitempty"`
	Orderindex *string `json:"orderindex,omitempty"`
	Parentattribute *string `json:"parentattribute,omitempty"`
	Regex *string `json:"regex,omitempty"`
	Requestablerequired *bool `json:"requestablerequired,omitempty"`
	Required *bool `json:"required,omitempty"`
	Sqlquery *string `json:"sqlquery,omitempty"`
	Updatedate *string `json:"updatedate,omitempty"`
	Updateuser *string `json:"updateuser,omitempty"`
}

// NewGetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner instantiates a new GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner() *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner {
	this := GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner{}
	return &this
}

// NewGetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInnerWithDefaults instantiates a new GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInnerWithDefaults() *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner {
	this := GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner{}
	return &this
}

// GetActionString returns the ActionString field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetActionString() string {
	if o == nil || IsNil(o.ActionString) {
		var ret string
		return ret
	}
	return *o.ActionString
}

// GetActionStringOk returns a tuple with the ActionString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetActionStringOk() (*string, bool) {
	if o == nil || IsNil(o.ActionString) {
		return nil, false
	}
	return o.ActionString, true
}

// HasActionString returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasActionString() bool {
	if o != nil && !IsNil(o.ActionString) {
		return true
	}

	return false
}

// SetActionString gets a reference to the given string and assigns it to the ActionString field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetActionString(v string) {
	o.ActionString = &v
}

// GetAttribute returns the Attribute field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetAttribute() string {
	if o == nil || IsNil(o.Attribute) {
		var ret string
		return ret
	}
	return *o.Attribute
}

// GetAttributeOk returns a tuple with the Attribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetAttributeOk() (*string, bool) {
	if o == nil || IsNil(o.Attribute) {
		return nil, false
	}
	return o.Attribute, true
}

// HasAttribute returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasAttribute() bool {
	if o != nil && !IsNil(o.Attribute) {
		return true
	}

	return false
}

// SetAttribute gets a reference to the given string and assigns it to the Attribute field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetAttribute(v string) {
	o.Attribute = &v
}

// GetAttributeConfig returns the AttributeConfig field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetAttributeConfig() string {
	if o == nil || IsNil(o.AttributeConfig) {
		var ret string
		return ret
	}
	return *o.AttributeConfig
}

// GetAttributeConfigOk returns a tuple with the AttributeConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetAttributeConfigOk() (*string, bool) {
	if o == nil || IsNil(o.AttributeConfig) {
		return nil, false
	}
	return o.AttributeConfig, true
}

// HasAttributeConfig returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasAttributeConfig() bool {
	if o != nil && !IsNil(o.AttributeConfig) {
		return true
	}

	return false
}

// SetAttributeConfig gets a reference to the given string and assigns it to the AttributeConfig field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetAttributeConfig(v string) {
	o.AttributeConfig = &v
}

// GetAttributeType returns the AttributeType field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetAttributeType() string {
	if o == nil || IsNil(o.AttributeType) {
		var ret string
		return ret
	}
	return *o.AttributeType
}

// GetAttributeTypeOk returns a tuple with the AttributeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetAttributeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AttributeType) {
		return nil, false
	}
	return o.AttributeType, true
}

// HasAttributeType returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasAttributeType() bool {
	if o != nil && !IsNil(o.AttributeType) {
		return true
	}

	return false
}

// SetAttributeType gets a reference to the given string and assigns it to the AttributeType field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetAttributeType(v string) {
	o.AttributeType = &v
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetAttributeValues() string {
	if o == nil || IsNil(o.AttributeValues) {
		var ret string
		return ret
	}
	return *o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetAttributeValuesOk() (*string, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given string and assigns it to the AttributeValues field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetAttributeValues(v string) {
	o.AttributeValues = &v
}

// GetAttributegroup returns the Attributegroup field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetAttributegroup() string {
	if o == nil || IsNil(o.Attributegroup) {
		var ret string
		return ret
	}
	return *o.Attributegroup
}

// GetAttributegroupOk returns a tuple with the Attributegroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetAttributegroupOk() (*string, bool) {
	if o == nil || IsNil(o.Attributegroup) {
		return nil, false
	}
	return o.Attributegroup, true
}

// HasAttributegroup returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasAttributegroup() bool {
	if o != nil && !IsNil(o.Attributegroup) {
		return true
	}

	return false
}

// SetAttributegroup gets a reference to the given string and assigns it to the Attributegroup field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetAttributegroup(v string) {
	o.Attributegroup = &v
}

// GetChildaction returns the Childaction field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetChildaction() string {
	if o == nil || IsNil(o.Childaction) {
		var ret string
		return ret
	}
	return *o.Childaction
}

// GetChildactionOk returns a tuple with the Childaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetChildactionOk() (*string, bool) {
	if o == nil || IsNil(o.Childaction) {
		return nil, false
	}
	return o.Childaction, true
}

// HasChildaction returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasChildaction() bool {
	if o != nil && !IsNil(o.Childaction) {
		return true
	}

	return false
}

// SetChildaction gets a reference to the given string and assigns it to the Childaction field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetChildaction(v string) {
	o.Childaction = &v
}

// GetDefaultvalue returns the Defaultvalue field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetDefaultvalue() string {
	if o == nil || IsNil(o.Defaultvalue) {
		var ret string
		return ret
	}
	return *o.Defaultvalue
}

// GetDefaultvalueOk returns a tuple with the Defaultvalue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetDefaultvalueOk() (*string, bool) {
	if o == nil || IsNil(o.Defaultvalue) {
		return nil, false
	}
	return o.Defaultvalue, true
}

// HasDefaultvalue returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasDefaultvalue() bool {
	if o != nil && !IsNil(o.Defaultvalue) {
		return true
	}

	return false
}

// SetDefaultvalue gets a reference to the given string and assigns it to the Defaultvalue field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetDefaultvalue(v string) {
	o.Defaultvalue = &v
}

// GetDescriptionascsv returns the Descriptionascsv field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetDescriptionascsv() string {
	if o == nil || IsNil(o.Descriptionascsv) {
		var ret string
		return ret
	}
	return *o.Descriptionascsv
}

// GetDescriptionascsvOk returns a tuple with the Descriptionascsv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetDescriptionascsvOk() (*string, bool) {
	if o == nil || IsNil(o.Descriptionascsv) {
		return nil, false
	}
	return o.Descriptionascsv, true
}

// HasDescriptionascsv returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasDescriptionascsv() bool {
	if o != nil && !IsNil(o.Descriptionascsv) {
		return true
	}

	return false
}

// SetDescriptionascsv gets a reference to the given string and assigns it to the Descriptionascsv field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetDescriptionascsv(v string) {
	o.Descriptionascsv = &v
}

// GetEditable returns the Editable field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetEditable() bool {
	if o == nil || IsNil(o.Editable) {
		var ret bool
		return ret
	}
	return *o.Editable
}

// GetEditableOk returns a tuple with the Editable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetEditableOk() (*bool, bool) {
	if o == nil || IsNil(o.Editable) {
		return nil, false
	}
	return o.Editable, true
}

// HasEditable returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasEditable() bool {
	if o != nil && !IsNil(o.Editable) {
		return true
	}

	return false
}

// SetEditable gets a reference to the given bool and assigns it to the Editable field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetEditable(v bool) {
	o.Editable = &v
}

// GetEntitlementTypes returns the EntitlementTypes field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetEntitlementTypes() GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInnerEntitlementTypes {
	if o == nil || IsNil(o.EntitlementTypes) {
		var ret GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInnerEntitlementTypes
		return ret
	}
	return *o.EntitlementTypes
}

// GetEntitlementTypesOk returns a tuple with the EntitlementTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetEntitlementTypesOk() (*GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInnerEntitlementTypes, bool) {
	if o == nil || IsNil(o.EntitlementTypes) {
		return nil, false
	}
	return o.EntitlementTypes, true
}

// HasEntitlementTypes returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasEntitlementTypes() bool {
	if o != nil && !IsNil(o.EntitlementTypes) {
		return true
	}

	return false
}

// SetEntitlementTypes gets a reference to the given GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInnerEntitlementTypes and assigns it to the EntitlementTypes field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetEntitlementTypes(v GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInnerEntitlementTypes) {
	o.EntitlementTypes = &v
}

// GetEntitlementsColumn returns the EntitlementsColumn field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetEntitlementsColumn() float32 {
	if o == nil || IsNil(o.EntitlementsColumn) {
		var ret float32
		return ret
	}
	return *o.EntitlementsColumn
}

// GetEntitlementsColumnOk returns a tuple with the EntitlementsColumn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetEntitlementsColumnOk() (*float32, bool) {
	if o == nil || IsNil(o.EntitlementsColumn) {
		return nil, false
	}
	return o.EntitlementsColumn, true
}

// HasEntitlementsColumn returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasEntitlementsColumn() bool {
	if o != nil && !IsNil(o.EntitlementsColumn) {
		return true
	}

	return false
}

// SetEntitlementsColumn gets a reference to the given float32 and assigns it to the EntitlementsColumn field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetEntitlementsColumn(v float32) {
	o.EntitlementsColumn = &v
}

// GetHideoncreate returns the Hideoncreate field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetHideoncreate() bool {
	if o == nil || IsNil(o.Hideoncreate) {
		var ret bool
		return ret
	}
	return *o.Hideoncreate
}

// GetHideoncreateOk returns a tuple with the Hideoncreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetHideoncreateOk() (*bool, bool) {
	if o == nil || IsNil(o.Hideoncreate) {
		return nil, false
	}
	return o.Hideoncreate, true
}

// HasHideoncreate returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasHideoncreate() bool {
	if o != nil && !IsNil(o.Hideoncreate) {
		return true
	}

	return false
}

// SetHideoncreate gets a reference to the given bool and assigns it to the Hideoncreate field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetHideoncreate(v bool) {
	o.Hideoncreate = &v
}

// GetHideonupd returns the Hideonupd field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetHideonupd() bool {
	if o == nil || IsNil(o.Hideonupd) {
		var ret bool
		return ret
	}
	return *o.Hideonupd
}

// GetHideonupdOk returns a tuple with the Hideonupd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetHideonupdOk() (*bool, bool) {
	if o == nil || IsNil(o.Hideonupd) {
		return nil, false
	}
	return o.Hideonupd, true
}

// HasHideonupd returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasHideonupd() bool {
	if o != nil && !IsNil(o.Hideonupd) {
		return true
	}

	return false
}

// SetHideonupd gets a reference to the given bool and assigns it to the Hideonupd field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetHideonupd(v bool) {
	o.Hideonupd = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetLabel(v string) {
	o.Label = &v
}

// GetOrderindex returns the Orderindex field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetOrderindex() string {
	if o == nil || IsNil(o.Orderindex) {
		var ret string
		return ret
	}
	return *o.Orderindex
}

// GetOrderindexOk returns a tuple with the Orderindex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetOrderindexOk() (*string, bool) {
	if o == nil || IsNil(o.Orderindex) {
		return nil, false
	}
	return o.Orderindex, true
}

// HasOrderindex returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasOrderindex() bool {
	if o != nil && !IsNil(o.Orderindex) {
		return true
	}

	return false
}

// SetOrderindex gets a reference to the given string and assigns it to the Orderindex field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetOrderindex(v string) {
	o.Orderindex = &v
}

// GetParentattribute returns the Parentattribute field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetParentattribute() string {
	if o == nil || IsNil(o.Parentattribute) {
		var ret string
		return ret
	}
	return *o.Parentattribute
}

// GetParentattributeOk returns a tuple with the Parentattribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetParentattributeOk() (*string, bool) {
	if o == nil || IsNil(o.Parentattribute) {
		return nil, false
	}
	return o.Parentattribute, true
}

// HasParentattribute returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasParentattribute() bool {
	if o != nil && !IsNil(o.Parentattribute) {
		return true
	}

	return false
}

// SetParentattribute gets a reference to the given string and assigns it to the Parentattribute field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetParentattribute(v string) {
	o.Parentattribute = &v
}

// GetRegex returns the Regex field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetRegex() string {
	if o == nil || IsNil(o.Regex) {
		var ret string
		return ret
	}
	return *o.Regex
}

// GetRegexOk returns a tuple with the Regex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetRegexOk() (*string, bool) {
	if o == nil || IsNil(o.Regex) {
		return nil, false
	}
	return o.Regex, true
}

// HasRegex returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasRegex() bool {
	if o != nil && !IsNil(o.Regex) {
		return true
	}

	return false
}

// SetRegex gets a reference to the given string and assigns it to the Regex field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetRegex(v string) {
	o.Regex = &v
}

// GetRequestablerequired returns the Requestablerequired field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetRequestablerequired() bool {
	if o == nil || IsNil(o.Requestablerequired) {
		var ret bool
		return ret
	}
	return *o.Requestablerequired
}

// GetRequestablerequiredOk returns a tuple with the Requestablerequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetRequestablerequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Requestablerequired) {
		return nil, false
	}
	return o.Requestablerequired, true
}

// HasRequestablerequired returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasRequestablerequired() bool {
	if o != nil && !IsNil(o.Requestablerequired) {
		return true
	}

	return false
}

// SetRequestablerequired gets a reference to the given bool and assigns it to the Requestablerequired field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetRequestablerequired(v bool) {
	o.Requestablerequired = &v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetRequired() bool {
	if o == nil || IsNil(o.Required) {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasRequired() bool {
	if o != nil && !IsNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetRequired(v bool) {
	o.Required = &v
}

// GetSqlquery returns the Sqlquery field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetSqlquery() string {
	if o == nil || IsNil(o.Sqlquery) {
		var ret string
		return ret
	}
	return *o.Sqlquery
}

// GetSqlqueryOk returns a tuple with the Sqlquery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetSqlqueryOk() (*string, bool) {
	if o == nil || IsNil(o.Sqlquery) {
		return nil, false
	}
	return o.Sqlquery, true
}

// HasSqlquery returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasSqlquery() bool {
	if o != nil && !IsNil(o.Sqlquery) {
		return true
	}

	return false
}

// SetSqlquery gets a reference to the given string and assigns it to the Sqlquery field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetSqlquery(v string) {
	o.Sqlquery = &v
}

// GetUpdatedate returns the Updatedate field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetUpdatedate() string {
	if o == nil || IsNil(o.Updatedate) {
		var ret string
		return ret
	}
	return *o.Updatedate
}

// GetUpdatedateOk returns a tuple with the Updatedate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetUpdatedateOk() (*string, bool) {
	if o == nil || IsNil(o.Updatedate) {
		return nil, false
	}
	return o.Updatedate, true
}

// HasUpdatedate returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasUpdatedate() bool {
	if o != nil && !IsNil(o.Updatedate) {
		return true
	}

	return false
}

// SetUpdatedate gets a reference to the given string and assigns it to the Updatedate field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetUpdatedate(v string) {
	o.Updatedate = &v
}

// GetUpdateuser returns the Updateuser field value if set, zero value otherwise.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetUpdateuser() string {
	if o == nil || IsNil(o.Updateuser) {
		var ret string
		return ret
	}
	return *o.Updateuser
}

// GetUpdateuserOk returns a tuple with the Updateuser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) GetUpdateuserOk() (*string, bool) {
	if o == nil || IsNil(o.Updateuser) {
		return nil, false
	}
	return o.Updateuser, true
}

// HasUpdateuser returns a boolean if a field has been set.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) HasUpdateuser() bool {
	if o != nil && !IsNil(o.Updateuser) {
		return true
	}

	return false
}

// SetUpdateuser gets a reference to the given string and assigns it to the Updateuser field.
func (o *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) SetUpdateuser(v string) {
	o.Updateuser = &v
}

func (o GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionString) {
		toSerialize["actionString"] = o.ActionString
	}
	if !IsNil(o.Attribute) {
		toSerialize["attribute"] = o.Attribute
	}
	if !IsNil(o.AttributeConfig) {
		toSerialize["attribute_config"] = o.AttributeConfig
	}
	if !IsNil(o.AttributeType) {
		toSerialize["attribute_type"] = o.AttributeType
	}
	if !IsNil(o.AttributeValues) {
		toSerialize["attribute_values"] = o.AttributeValues
	}
	if !IsNil(o.Attributegroup) {
		toSerialize["attributegroup"] = o.Attributegroup
	}
	if !IsNil(o.Childaction) {
		toSerialize["childaction"] = o.Childaction
	}
	if !IsNil(o.Defaultvalue) {
		toSerialize["defaultvalue"] = o.Defaultvalue
	}
	if !IsNil(o.Descriptionascsv) {
		toSerialize["descriptionascsv"] = o.Descriptionascsv
	}
	if !IsNil(o.Editable) {
		toSerialize["editable"] = o.Editable
	}
	if !IsNil(o.EntitlementTypes) {
		toSerialize["entitlement_types"] = o.EntitlementTypes
	}
	if !IsNil(o.EntitlementsColumn) {
		toSerialize["entitlements_column"] = o.EntitlementsColumn
	}
	if !IsNil(o.Hideoncreate) {
		toSerialize["hideoncreate"] = o.Hideoncreate
	}
	if !IsNil(o.Hideonupd) {
		toSerialize["hideonupd"] = o.Hideonupd
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Orderindex) {
		toSerialize["orderindex"] = o.Orderindex
	}
	if !IsNil(o.Parentattribute) {
		toSerialize["parentattribute"] = o.Parentattribute
	}
	if !IsNil(o.Regex) {
		toSerialize["regex"] = o.Regex
	}
	if !IsNil(o.Requestablerequired) {
		toSerialize["requestablerequired"] = o.Requestablerequired
	}
	if !IsNil(o.Required) {
		toSerialize["required"] = o.Required
	}
	if !IsNil(o.Sqlquery) {
		toSerialize["sqlquery"] = o.Sqlquery
	}
	if !IsNil(o.Updatedate) {
		toSerialize["updatedate"] = o.Updatedate
	}
	if !IsNil(o.Updateuser) {
		toSerialize["updateuser"] = o.Updateuser
	}
	return toSerialize, nil
}

type NullableGetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner struct {
	value *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner
	isSet bool
}

func (v NullableGetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) Get() *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner {
	return v.value
}

func (v *NullableGetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) Set(val *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner(val *GetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) *NullableGetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner {
	return &NullableGetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner{value: val, isSet: true}
}

func (v NullableGetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetListOfPrivilegesForEntitlementType200ResponsePrivilegeDetailsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


